<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://shenqiangbin.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>SQBER</title>
    <link>https://shenqiangbin.github.io/</link>
    <description>个人站点，记录个人生活和相关技术文档，比如 Java、Spring、Linux、代码管理等内容</description>
    <language>zh-CN</language>
    <pubDate>Tue, 30 May 2023 10:40:57 GMT</pubDate>
    <lastBuildDate>Tue, 30 May 2023 10:40:57 GMT</lastBuildDate>
    <generator>@mr-hope/vuepress-plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright © 2017-present SQBER 本文版权归作者所有，欢迎转载，但未经作者同意必须保留此段声明，且在文章页面明显位置给出原文连接，否则保留追究法律责任的权利</copyright>
    <category>编码</category>
    <category>使用指南</category>
    <category>docker</category>
    <category>ElasticSearch</category>
    <category>java</category>
    <category>漏洞</category>
    <category>k8s</category>
    <category>项目构建</category>
    <category>工具</category>
    <category>微服务</category>
    <category>安全</category>
    <category>JdbcTemplate</category>
    <category>数据采集</category>
    <category>代码管理</category>
    <category>数据导出</category>
    <category>开发工具</category>
    <category>CURD</category>
    <category>框架</category>
    <category>数据导入</category>
    <category>文件上传</category>
    <category>部署</category>
    <item>
      <title>习惯</title>
      <link>https://shenqiangbin.github.io/convention/</link>
      <guid>https://shenqiangbin.github.io/convention/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">习惯</source>
      <category>编码</category>
      <pubDate>Sun, 12 Dec 2021 05:42:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="前言"> 前言</h2>
<p>以【习惯】来命名，是可能比【规范】更容易理解。【规范】给人一种强迫得感觉，貌似你必须按要求的这些去做。然而我们可以换个角度思考，令自己更乐观一些，如果这些习惯确定给我们带来好处，帮助我们解决问题，那我们就应该乐于去做，而不应该再有强迫的感觉。</p>
<p>下面列举下我常用的习惯做法：</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
<h2 id="参照"> 参照</h2>
<p>-<a href="https://xwjie.github.io/rule/" target="_blank" rel="noopener noreferrer">程序员你为什么这么累</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>日志</title>
      <link>https://shenqiangbin.github.io/convention/log/</link>
      <guid>https://shenqiangbin.github.io/convention/log/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">日志</source>
      <category>编码</category>
      <pubDate>Sun, 12 Dec 2021 05:42:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="前言"> 前言</h2>
<p>说到日志，大家都很熟悉，系统中常用 log4j 来记录日志。基本人人都会使用日志，也知道如何通过 log4j 来记日志。
然而，你所说的自己会记日志，可能只局限于知道 log4j 该如何使用。知道 log.debug 是记录的 debug 级别的日志。
知道 log.info 是记录的 info 级别的日志。</p>
<p>也就是说，我们掌握了这项技术，知道这个技术怎么引入，有哪些方法。然而这还不够，我们还应该知道在哪里合适使用，
也就是说在编码的时候哪里应该记录日志。</p>
<h2 id="场景"> 场景</h2>
<p>通常情况下，在我们的系统中只有在异常的地方记录了异常的日志信息，其它地方都没有记录日志信息。我之前也是这么干的。
这样做有什么不好吗？</p>
<p>当一个功能出现问题时，你只能说本地调试一下。当这只是一个简单的功能时还好，当这是一个逻辑复杂的功能时，调试也是很麻烦的。
更糟糕的是，通常是线上环境出现的问题，你连调试的机会都没有。</p>
<h2 id="记录关键节点信息"> 记录关键节点信息</h2>
<p>当开发一个功能的时候，尤其是一个业务复杂的功能，在日志中记录下业务关键节点的信息尤其重要。这是你诊断问题的关键。
当点击到你开发的功能时，在日志中应该能清楚的体现业务的处理逻辑和关键数据。</p>
<p>下面是一个预览文档功能的日志</p>
<div><pre><code>msg - uniformSettlement 请求参数：platform=SZRW&amp;product=SZRWDATA&amp;filename=SHYI202103001&amp;tabl
msg - uniformSettlement 加密参数结果：1X3EIS1C+z5mb5ErlM/2LIQ0W0kBbPY1KyBO54ODIUuzxY0
msg - redis 中有 downloadtoken
msg - download: url-http://10.120.67.101:8087/docdown/api/read/down?platform=SZRW&amp;product=SZRWDATA&amp;filename=SHYI202103001&amp;
msg - download content-type:application/xml
msg - download: result-ok
msg - templateFilePath:F:/git/szrwWeb/szrwWebPro/target/classes/xsl/docbook_1.xslt
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>此功能需要构建请求参数，并将参数加密，然后还需要再调用一个下载文件的接口。<br>
这个功能的关键点就在于接口的参数数据，因此将其记录下来很有必要。<br>
当此预览文档功能报错时，主要就是看传递的参数是否正确。</p>
<p>上面是一个简单的例子，当遇到一个特别复杂的功能时，更能突出日志的重要，特别是展示业务处理分支，会给人一目了然的感觉。当有合适的案例时，再进行补充吧。</p>
]]></content:encoded>
    </item>
    <item>
      <title>简化代码</title>
      <link>https://shenqiangbin.github.io/convention/simpleCode/</link>
      <guid>https://shenqiangbin.github.io/convention/simpleCode/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">简化代码</source>
      <category>编码</category>
      <pubDate>Sun, 12 Dec 2021 05:42:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="关于简化代码"> 关于简化代码</h2>
<p>我们一般会定义一个类来表示接口返回的结果。类一般包含了返回码，返回对象，返回消息。如下：</p>
<div><pre><code><span>public</span> <span>class</span> <span>BaseResponse</span><span><span>&lt;</span><span>T</span><span>></span></span> <span>{</span>
    <span>private</span> <span>int</span> code<span>;</span>
    <span>private</span> <span>T</span> data<span>;</span>
    <span>private</span> <span>String</span> msg<span>;</span>

    <span>// 省略</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>在控制器中，一般会这样使用。</p>
<div><pre><code><span>@ResponseBody</span>
<span>@RequestMapping</span><span>(</span>value <span>=</span> <span>"/getArticleDetail"</span><span>)</span>
<span>public</span> <span>BaseResponse</span><span><span>&lt;</span><span>ArticleDetail</span><span>></span></span> <span>getArticleDetail</span><span>(</span><span>String</span> sysId<span>)</span><span>{</span>
    <span>BaseResponse</span><span><span>&lt;</span><span>ArticleDetail</span><span>></span></span> result <span>=</span> <span>new</span> <span>BaseResponse</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>try</span> <span>{</span>
        <span>ArticleDetail</span> articleDetail <span>=</span> articleDetailService<span>.</span><span>getArticleDetail</span><span>(</span>sysId<span>)</span><span>;</span>
        result<span>.</span><span>setReturnStatus</span><span>(</span><span>ReturnStatus<span>.</span>Success</span><span>)</span><span>;</span>
        result<span>.</span><span>setData</span><span>(</span>articleDetail<span>)</span><span>;</span>
    <span>}</span> <span>catch</span> <span>(</span><span>Exception</span> e<span>)</span> <span>{</span>
        e<span>.</span><span>printStackTrace</span><span>(</span><span>)</span><span>;</span>
        result<span>.</span><span>setReturnStatus</span><span>(</span><span>ReturnStatus<span>.</span>Error</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> result<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><p>功能没有问题，只是我们的代码还可以再简化。BaseResponse 对象需要创建，code 字段和 data 字段还要赋值。</p>
<p>我们可以将 BaseResponse 的创建和赋值放到 BaseResponse 中，形成一个方法。</p>
<p>简化后的代码如下：</p>
<div><pre><code><span>@ResponseBody</span>
<span>@RequestMapping</span><span>(</span>value <span>=</span> <span>"/getArticleDetail"</span><span>)</span>
<span>public</span> <span>BaseResponse</span><span><span>&lt;</span><span>ArticleDetail</span><span>></span></span> <span>getArticleDetail</span><span>(</span><span>String</span> sysId<span>)</span> <span>{</span>
    <span>try</span> <span>{</span>
        <span>ArticleDetail</span> articleDetail <span>=</span> articleDetailService<span>.</span><span>getArticleDetail</span><span>(</span>sysId<span>)</span><span>;</span>
        <span>return</span> <span>BaseResponse</span><span>.</span><span>success</span><span>(</span>articleDetail<span>)</span><span>;</span>
    <span>}</span> <span>catch</span> <span>(</span><span>Exception</span> e<span>)</span> <span>{</span>
        log<span>.</span><span>error</span><span>(</span><span>"{}"</span><span>,</span> e<span>)</span><span>;</span>
        <span>return</span> <span>BaseResponse</span><span>.</span><span>error</span><span>(</span>e<span>.</span><span>getMessage</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>代码行数减少后，也将清晰不少。如果使用拦截器统一处理异常后，那么 try catch 也就不用写了。代码会进一步精简。</p>
<div><pre><code><span>@ResponseBody</span>
<span>@RequestMapping</span><span>(</span>value <span>=</span> <span>"/getArticleDetail"</span><span>)</span>
<span>public</span> <span>BaseResponse</span><span><span>&lt;</span><span>ArticleDetail</span><span>></span></span> <span>getArticleDetail</span><span>(</span><span>String</span> sysId<span>)</span> <span>{</span>
    <span>ArticleDetail</span> articleDetail <span>=</span> articleDetailService<span>.</span><span>getArticleDetail</span><span>(</span>sysId<span>)</span><span>;</span>
    <span>return</span> <span>BaseResponse</span><span>.</span><span>success</span><span>(</span>articleDetail<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>组件禁用</title>
      <link>https://shenqiangbin.github.io/guide/disable/</link>
      <guid>https://shenqiangbin.github.io/guide/disable/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">组件禁用</source>
      <description>&amp;lt;p&amp;gt;你可以通过设置页面的 Frontmatter，在页面禁用一些功能。&amp;lt;/p&amp;gt;
</description>
      <category>使用指南</category>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>你可以通过设置页面的 Frontmatter，在页面禁用一些功能。</p>

<p>本页面应当禁用了:</p>
<ul>
<li>导航栏</li>
<li>侧边栏</li>
<li>路径导航</li>
<li>页面信息</li>
<li>贡献者</li>
<li>编辑此页链接</li>
<li>更新时间</li>
<li>上一篇/下一篇 链接</li>
<li>评论</li>
<li>页脚</li>
<li>返回顶部按钮</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>密码加密的文章</title>
      <link>https://shenqiangbin.github.io/guide/encrypt/</link>
      <guid>https://shenqiangbin.github.io/guide/encrypt/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">密码加密的文章</source>
      <category>使用指南</category>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="密码加密的文章"> 密码加密的文章</h1>
<p>实际的文章内容。</p>
<p>段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。</p>
<p>段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Markdown 增强</title>
      <link>https://shenqiangbin.github.io/guide/markdown/</link>
      <guid>https://shenqiangbin.github.io/guide/markdown/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Markdown 增强</source>
      <description>&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;vuepress-theme-hope&amp;lt;/code&amp;gt; 通过内置 &amp;lt;a href=&amp;quot;https://vuepress-theme-hope.github.io/md-enhance&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener noreferrer&amp;quot;&amp;gt;md-enhance&amp;lt;/a&amp;gt;，在 Markdown 中启用了更多的语法与新功能。&amp;lt;/p&amp;gt;
</description>
      <category>使用指南</category>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>vuepress-theme-hope</code> 通过内置 <a href="https://vuepress-theme-hope.github.io/md-enhance" target="_blank" rel="noopener noreferrer">md-enhance</a>，在 Markdown 中启用了更多的语法与新功能。</p>

<h2 id="一键启用"> 一键启用</h2>
<p>你可以设置 <code>themeconfig.mdEnhance.enableAll</code> 启用 <a href="https://vuepress-theme-hope.github.io/md-enhance" target="_blank" rel="noopener noreferrer">md-enhance</a> 插件的所有功能。</p>
<div><div><br><br><div>&nbsp;</div><div>&nbsp;</div><div>&nbsp;</div><br><br><br></div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  themeConfig<span>:</span> <span>{</span>
    mdEnhance<span>:</span> <span>{</span>
      enableAll<span>:</span> <span>true</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="新增的更多语法"> 新增的更多语法</h2>
<h3 id="上下角标"> 上下角标</h3>
<p>19<sup>th</sup> H<sub>2</sub>O</p>
<details><summary>代码</summary>
<div><pre><code>19^th^ H<span><span>~</span><span>2</span><span>~</span></span>O
</code></pre>
<div><span>1</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/sup-sub/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="自定义对齐"> 自定义对齐</h3>
<div>
<p>我是居中的</p>
</div>
<div>
<p>我在右对齐</p>
</div>
<details><summary>代码</summary>
<div><pre><code>::: center

我是居中的

:::

::: right

我在右对齐

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/align/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="脚注"> 脚注</h3>
<p>此文字有脚注<sup></sup>.</p>
<details><summary>代码</summary>
<div><pre><code>此文字有脚注[^first].

<span><span>[</span><span>^first</span><span>]</span><span>:</span> 这是脚注内容</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/footnote/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="标记"> 标记</h3>
<p>你可以标记 <mark>重要的内容</mark> 。</p>
<details><summary>代码</summary>
<div><pre><code>你可以标记 ==重要的内容== 。
</code></pre>
<div><span>1</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/mark/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="任务列表"> 任务列表</h3>
<ul>
<li><input type="checkbox" checked="checked" disabled="disabled" id="task-item-0"><label for="task-item-0"> 计划 1</label></li>
<li><input type="checkbox"  disabled="disabled" id="task-item-1"><label for="task-item-1"> 计划 2</label></li>
</ul>
<details><summary>Code</summary>
<div><pre><code><span>-</span> [x] 计划 1
<span>-</span> [ ] 计划 2
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/guide/markdown/tasklist/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="流程图"> 流程图</h3>
<i>Not supported content</i><details><summary>代码</summary>
<div><pre><code><span><span>```</span><span>flow</span>
<span>cond=>condition: Process?
process=>operation: Process
e=>end: End

cond(yes)->process->e
cond(no)->e</span>
<span>```</span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/flowchart/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h2 id="mermaid"> Mermaid</h2>
<Mermaid id="mermaid-64a57060" data-code="graph%20TD%3B%0A%20%20%20%20A--%3EB%3B%0A%20%20%20%20A--%3EC%3B%0A%20%20%20%20B--%3ED%3B%0A%20%20%20%20C--%3ED%3B%0A"></Mermaid><details><summary>代码</summary>
<div><pre><code><span><span>```</span><span>mermaid</span>
<span>graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;</span>
<span>```</span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/mermaid/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="tex-语法"> Tex 语法</h3>
<p class='katex-block'><span><span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:2.4em;vertical-align:-0.95em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span><span style="margin-right:0.03588em;">ω</span><span><span><span><span style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.05556em;">∂</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span style="top:0em;"><span>(</span></span><span><span></span><span><span><span><span style="height:1.3414em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">y</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>)</span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3.0277em;vertical-align:-1.2777em;"></span><span><span style="top:0em;"><span>(</span></span><span><span></span><span><span><span><span style="height:1.3414em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">y</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>)</span></span></span><span style="margin-right:0.1667em;"></span><span><span style="top:0em;"><span>{</span></span><span>(</span><span>lo<span style="margin-right:0.01389em;">g</span></span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.03588em;">y</span><span><span>)</span><span><span><span><span style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span><span><span><span style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span>i</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.5017em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">ω</span><span><span><span><span style="height:0.7507em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>(</span><span>−</span><span>1</span><span><span>)</span><span><span><span><span style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span></span></span></span></span><span style="margin-right:0.02778em;">r</span><span style="margin-right:0.1667em;"></span><span>⋯</span><span style="margin-right:0.1667em;"></span><span>(</span><span style="margin-right:0.02778em;">r</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span>i</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span>1</span><span>)</span><span>(</span><span>lo<span style="margin-right:0.01389em;">g</span></span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.03588em;">y</span><span><span>)</span><span><span><span><span style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span>−</span><span>i</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>}</span></span></span></span></span></span></span></p>
<details><summary>代码</summary>
<div><pre><code>$$
\frac {\partial^r} {\partial \omega^r} \left(\frac {y^{\omega}} {\omega}\right)
= \left(\frac {y^{\omega}} {\omega}\right) \left\{(\log y)^r + \sum_{i=1}^r \frac {(-1)^i r \cdots (r-i+1) (\log y)^{r-i}} {\omega^i} \right\}
$$
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/tex/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="代码案例"> 代码案例</h3>

          <div
            id="code-demo-5ac6bc9f"
           
  
 data-title="%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo"

            data-code="%7B%22html%22%3A%22%3Ch1%3EMr.Hope%3C%2Fh1%3E%5Cn%3Cp%3E%3Cspan%20id%3D%5C%22very%5C%22%3E%E5%8D%81%E5%88%86%3C%2Fspan%3E%20%E5%B8%85%3C%2Fp%3E%5Cn%22%2C%22js%22%3A%22document.querySelector(%5C%22%23very%5C%22).addEventListener(%5C%22click%5C%22%2C%20()%20%3D%3E%20%7B%5Cn%20%20alert(%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22)%3B%5Cn%7D)%3B%5Cn%22%2C%22css%22%3A%22span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span><span>&lt;</span>h1</span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>h1</span><span>></span></span>
<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>"</span>very<span>"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code>document<span>.</span><span>querySelector</span><span>(</span><span>"#very"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>alert</span><span>(</span><span>"十分帅"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo 一个普通 Demo

<span><span>```</span><span>html</span>
<span><span><span><span>&lt;</span>h1</span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>h1</span><span>></span></span>
<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>"</span>very<span>"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span></span>
<span>```</span></span>

<span><span>```</span><span>js</span>
<span>document<span>.</span><span>querySelector</span><span>(</span><span>"#very"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>alert</span><span>(</span><span>"十分帅"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></span>
<span>```</span></span>

<span><span>```</span><span>css</span>
<span><span>span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div></details>

          <div
            id="code-demo-693e1878"
           
  data-type="react"
 data-title="%E4%B8%80%E4%B8%AA%20React%20Demo"

            data-code="%7B%22js%22%3A%22export%20default%20class%20App%20extends%20React.Component%20%7B%5Cn%20%20constructor(props)%20%7B%5Cn%20%20%20%20super(props)%3B%5Cn%20%20%20%20this.state%20%3D%20%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D%3B%5Cn%20%20%7D%5Cn%20%20render()%20%7B%5Cn%20%20%20%20return%20(%5Cn%20%20%20%20%20%20%3Cdiv%20className%3D%5C%22box-react%5C%22%3E%5Cn%20%20%20%20%20%20%20%20Mr.Hope%20%3Cspan%3E%7Bthis.state.message%7D%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%2C%22css%22%3A%22.box-react%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span>props<span>)</span><span>;</span>
    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>;</span>
  <span>}</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
      <span>&lt;</span>div className<span>=</span><span>"box-react"</span><span>></span>
        Mr<span>.</span>Hope <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>
      <span>&lt;</span><span>/</span>div<span>></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code><span>.box-react span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo [react] 一个 React Demo

<span><span>```</span><span>js</span>
<span><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span>props<span>)</span><span>;</span>
    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>;</span>
  <span>}</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
      <span>&lt;</span>div className<span>=</span><span>"box-react"</span><span>></span>
        Mr<span>.</span>Hope <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>
      <span>&lt;</span><span>/</span>div<span>></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span></span>
<span>```</span></span>

<span><span>```</span><span>css</span>
<span><span>.box-react span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>

          <div
            id="code-demo-2c0b9cdb"
           
  data-type="vue"
 data-title="%E4%B8%80%E4%B8%AA%20Vue%20Demo"

            data-code="%7B%22vue%22%3A%22%3Ctemplate%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20Mr.Hope%20%3Cspan%3E%7B%7B%20message%20%7D%7D%3C%2Fspan%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%5Cn%3Cscript%3E%5Cnexport%20default%20%7B%5Cn%20%20data%3A%20()%20%3D%3E%20(%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D)%2C%5Cn%7D%3B%5Cn%3C%2Fscript%3E%5Cn%3Cstyle%3E%5Cn.box%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%3C%2Fstyle%3E%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    Mr.Hope <span><span><span>&lt;</span>span</span><span>></span></span>{{ message }}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>(</span><span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>)</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>style</span><span>></span></span><span><span>
<span>.box span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo [vue] 一个 Vue Demo

<span><span>```</span><span>vue</span>
<span>&lt;template>
  &lt;div>
    Mr.Hope &lt;span>{{ message }}&lt;/span>
  &lt;/div>
&lt;/template>
&lt;script>
export default {
  data: () => ({ message: "十分帅" }),
};
&lt;/script>
&lt;style>
.box span {
  color: red;
}
&lt;/style></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div></details>

          <div
            id="code-demo-2869b0e2"
           
  
 data-title="%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo"

            data-code="%7B%22md%22%3A%22%23%20%E6%A0%87%E9%A2%98%5Cn%5Cn%E5%8D%81%E5%88%86%E5%B8%85%5Cn%22%2C%22ts%22%3A%22const%20message%3A%20string%20%3D%20%5C%22Mr.Hope%5C%22%3B%5Cn%5Cndocument.querySelector(%5C%22h1%5C%22).innerHTML%20%3D%20message%3B%5Cn%22%2C%22scss%22%3A%22h1%20%7B%5Cn%20%20font-style%3A%20italic%3B%5Cn%5Cn%20%20%2B%20p%20%7B%5Cn%20%20%20%20color%3A%20red%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span>#</span> 标题</span>

十分帅
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>"Mr.Hope"</span><span>;</span>

document<span>.</span><span>querySelector</span><span>(</span><span>"h1"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>h1 </span><span>{</span>
  <span>font-style</span><span>:</span> italic<span>;</span>

  <span>+ p </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo 一个普通 Demo

<span><span>```</span><span>md</span>
<span><span><span>#</span> 标题</span>

十分帅</span>
<span>```</span></span>

<span><span>```</span><span>ts</span>
<span><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>"Mr.Hope"</span><span>;</span>

document<span>.</span><span>querySelector</span><span>(</span><span>"h1"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span></span>
<span>```</span></span>

<span><span>```</span><span>scss</span>
<span><span>h1 </span><span>{</span>
  <span>font-style</span><span>:</span> italic<span>;</span>

  <span>+ p </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/demo/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="幻灯片"> 幻灯片</h3>
<i>Not supported content</i><details><summary>代码</summary>
<div><pre><code>@slidestart

<span><span>##</span> 幻灯片 1</span>

一个有文字和 <span>[<span>链接</span>](<span>https://mrhope.site</span>)</span> 的段落

<span>---</span>

<span><span>##</span> 幻灯片 2</span>

<span>-</span> 列表 1
<span>-</span> 列表 2

<span>---</span>

<span><span>##</span> 幻灯片 3.1</span>

<span><span>```</span><span>js</span>
<span><span>const</span> a <span>=</span> <span>1</span><span>;</span></span>
<span>```</span></span>

--

<span><span>##</span> 幻灯片 3.2</span>

$$
J(\theta_0,\theta_1) = \sum_{i=0}
$$

@slideend
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/presentation/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h2 id="其他语法"> 其他语法</h2>
<div><p>自定义标题</p>
<p>信息容器</p>
</div>
<div><p>自定义标题</p>
<p>提示容器</p>
</div>
<div><p>自定义标题</p>
<p>警告容器</p>
</div>
<div><p>自定义标题</p>
<p>危险容器</p>
</div>
<details><summary>自定义标题</summary>
<p>详情容器</p>
</details>
<details><summary>代码</summary>
<div><pre><code>::: info 自定义标题

信息容器

:::

::: tip 自定义标题

提示容器

:::

::: warning 自定义标题

警告容器

:::

::: danger 自定义标题

危险容器

:::

::: details 自定义标题

详情容器

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></details>
<hr>
<section>
<ol>
<li id="footnote1"><p>这是脚注内容 </p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>页面配置</title>
      <link>https://shenqiangbin.github.io/guide/page/</link>
      <guid>https://shenqiangbin.github.io/guide/page/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">页面配置</source>
      <category>使用指南</category>
      <pubDate>Wed, 01 Jan 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="页面信息"> 页面信息</h2>
<p>你可以在 Markdown 的 Frontmatter 中设置页面信息。</p>
<ul>
<li>
<p>作者设置为 Ms.Hope。</p>
</li>
<li>
<p>写作时间应为 2020 年 1 月 1 日</p>
</li>
<li>
<p>分类为 “使用指南”</p>
</li>
<li>
<p>标签为 “页面配置” 和 “使用指南”</p>
</li>
</ul>
<h2 id="页面内容"> 页面内容</h2>
<p>你可以自由在这里书写你的 Markdown。</p>
<div><p>提示</p>
<ul>
<li>
<p>Markdown 文件夹的图片请使用相对链接 <code>./</code> 进行引用。</p>
</li>
<li>
<p><code>.vuepress/public</code> 文件夹的图片，请使用绝对链接 <code>/</code> 进行引用</p>
</li>
</ul>
</div>
<p>主题包含了一个自定义徽章章可以使用:</p>
<blockquote>
<p>文字结尾应该有深蓝色的 徽章文字 徽章。 <i>Not supported content</i></p>
</blockquote>
<h2 id="页面结构"> 页面结构</h2>
<p>此页面应当包含：</p>
<ul>
<li>返回顶部按钮</li>
<li>路径导航</li>
<li>评论</li>
<li>页脚</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>主要功能与配置演示</title>
      <link>https://shenqiangbin.github.io/guide/</link>
      <guid>https://shenqiangbin.github.io/guide/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">主要功能与配置演示</source>
      <category>使用指南</category>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="主要功能与配置演示"> 主要功能与配置演示</h1>
<ul>
<li>
<p><a href="./page.html">页面展示</a></p>
</li>
<li>
<p><a href="./markdown.html">Markdown 展示</a></p>
</li>
<li>
<p><a href="./disable.html">禁用展示</a></p>
</li>
<li>
<p><a href="./encrypt.html">加密展示</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>项目主页</title>
      <link>https://shenqiangbin.github.io/home/</link>
      <guid>https://shenqiangbin.github.io/home/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">项目主页</source>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>这是普通主页的案例。你可以在这里放置你的主体内容。</p>
<p>想要使用此布局，你需要在页面 front matter 中设置 <code>home: true</code>。</p>
<p>配置项的相关说明详见 <a href="https://vuepress-theme-hope.github.io/zh/guide/layout/home/" target="_blank" rel="noopener noreferrer">项目主页配置</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>关于我</title>
      <link>https://shenqiangbin.github.io/intro/</link>
      <guid>https://shenqiangbin.github.io/intro/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">关于我</source>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<h3 id="联系方式"> 联系方式</h3>
<p>QQ：1969858717</p>
<h3 id="学习经历"> 学习经历</h3>
<p>我是河北定州人，在一个农村长大，在本村上的小学，在临村上的初中，然后在县里的<strong>新华中学</strong>上的高中，这是一个既有初中又有高中的私立学校。</p>
<p>2010年上的大学，在河北唐山，当时的大学名字是 <strong>河北理工大学</strong>，后来大学期间，和 煤炭医学院 合并，名字改成了 <strong>河北联合大学</strong>，2014年毕业的时候相关证书也是 河北联合大学，2015年学校名字又改成了 <strong>华北理工大学</strong>， 我走了，名字也气派了。</p>
<h3 id="岗位"> 岗位</h3>
<p>Java研发</p>
<h3 id="工作经历"> 工作经历</h3>
<p>1、北京鼎盾信息科技有限公司<br>
2、北京橙奇（创业公司）<br>
3、中国知网(目前)</p>
]]></content:encoded>
    </item>
    <item>
      <title>自定义布局</title>
      <link>https://shenqiangbin.github.io/layout/</link>
      <guid>https://shenqiangbin.github.io/layout/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">自定义布局</source>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>您可以使用带有 Markdown 支持的插槽来自定义页面布局。</p>
<div><p>注意</p>
<p>此处仅仅是一个演示，你应该自行根据需求添加样式。</p>


</div>
<template #page-top><p>页面顶部内容</p>
</template><template #page-bottom><p>页面底部内容</p>
</template><template #content-top><p>内容顶部内容</p>
</template><template #content-bottom><p>内容底部内容</p>
</template><template #navbar-start><p>导航栏起始内容</p>
</template><template #navbar-center><p>导航栏中部内容</p>
</template><template #navbar-end><p>导航栏末尾内容</p>
</template><template #sidebar-top><p>侧边栏顶部内容</p>
</template><template #sidebar-center><p>侧边栏中部内容</p>
</template><template #sidebar-bottom><p>侧边栏底部内容</p>
</template><p>更多详情，详见 <a href="https://vuepress-theme-hope.github.io/zh/guide/layout/custom/" target="_blank" rel="noopener noreferrer">自定义布局</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>生活</title>
      <link>https://shenqiangbin.github.io/life/</link>
      <guid>https://shenqiangbin.github.io/life/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">生活</source>
      <pubDate>Thu, 30 Dec 2021 12:14:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="孩子-音乐"> 孩子-音乐</h2>
<p>我家娃娃喜欢听的音乐，快2岁了（差3个月）。</p>
<p><a target='_blank' href='/assets/life/lingerdingdang.mp3'>铃儿响叮当 - 音乐</a></p>
<p><a target='_blank' href='/assets/life/lingerdingdang.mp4'>铃儿响叮当 - 动画</a></p>
<h2 id="小动物"> 小动物</h2>
<p><img src='/assets/life/animals.jpeg'></img></p>
<h2 id="孩子-健康"> 孩子-健康</h2>
<h3 id="感冒"> 感冒</h3>
<p>2021年11月的感冒</p>
<p>对2岁大的孩子来说，冬天，大风天气不宜出门，容易感冒。<br>
周六的时候，大风，带着孩子去商场玩，虽然来回都是打车，但回来还是感冒了。<br>
商场的温度很高，可能在商场里面孩子玩的出了汗，出商场后因风着凉而感冒的。</p>
<p><strong>感冒症状：</strong> 流鼻涕，咳嗽，嗓子有痰，白天不怎么咳嗽，晚上的时候比较严重。</p>
<p>因为疫情的原因，我们也不想带孩子去医院，一是去医院，每次药费都很高，基本四五百。<br>
二是去医院就是检查，孩子遭罪。</p>
<p>我们用的之前买的药：<strong>鲜竹沥 四川通园制药</strong> 这个药主要是 <strong>祛痰</strong> ，味道比较清淡，孩子至少还是喝的。<br>
每次喝的时候，给孩子说 <strong>喝饮料</strong>，她自己就喝了。<br>
还喝了一个感冒药： <strong>小儿热速清颗粒</strong>，这个是兑水喝，<strong>比较苦</strong>，通过分散孩子的注意力喂药。让孩子看动画片，或者看
<strong>铃儿响叮当 - 动画</strong>，孩子都比较感兴趣，沉迷看的时候给喂药，孩子就不哭不闹了。</p>
<p>当然，晚上咳嗽也不是马上见效，大概过了 <strong>四五天</strong>，感冒就好了。</p>
<hr>
<h3 id="发烧"> 发烧</h3>
<p>孩子发烧，疫情期间发烧就很敏感，因为感染疫情的症状就是 <strong>发烧</strong>。<br>
为了控制疫情，各药店基本不让卖退烧药，只能去医院，到了医院，首先就是核酸检测，捅鼻子眼。<br>
大人还好，对孩子来说就是遭罪。这次因为家里还有退烧药 <strong>美林</strong>，因此也没有去医院，在家里发烧了<strong>4天</strong>的样子，然后就好了。退烧药美林是孩子烧到 38.5 才给吃的，没有烧的很高是不用给吃的。</p>
<p>去年，孩子也是发烧，症状是：发烧，咳嗽。<br>
去了 <strong>京都儿童医院</strong>，去了先做 <strong>核酸检测</strong>，判定下是否普通感冒，是普通感冒后，然后 <strong>验血</strong>，孩子抽血哭的一把鼻涕一把泪，血也弄的全身都是，很是受罪。</p>
<p>开药很贵：貌似是开了 <strong>二三百</strong> 的药，医院开药都是按 <strong>盒</strong> 开的，再加上验血、诊断等其他费用，大概花了 <strong>五百</strong> 左右。</p>
<p>然而，对一个1岁多点的孩子，开的药太苦，孩子都喝不下去，按住孩子灌药，孩子是哭的不行，看的心疼。并且太苦，即使是灌药，孩子也喝不下去，<strong>有多苦呢？我这个大人尝了一口，苦的我也喝不下去</strong>，也就是说买回的药，<strong>贵还没有用场，灌药都咽不下去</strong>。</p>
<p><strong>怎么办</strong></p>
<p>后来，让在老家的嫂子找的老家的医生，老家的医生看了大医院开的药，说：<strong>这些药都是好药，对孩子没副作用</strong>。但是孩子喝不下去，再好也没用啊，老家的医生就推荐我买了 <strong>鲜竹沥</strong>， 我买了一盒，才花了 <strong>十几块</strong> 钱，这个就是治疗咳嗽。至于发烧，就用的退烧药 <strong>美林</strong>。再加上一个 <strong>小儿热速清颗粒</strong>。</p>
<p><strong>鲜竹沥</strong> 和 <strong>美林</strong> 都不苦， <strong>小儿热速清颗粒</strong> 有点苦。</p>
<p><strong>美林</strong> 照片：<br>
<img src='/assets/life/meilin.jpg' style='width:400px'></img></p>
<p><strong>小儿热速清颗粒</strong> 照片：<br>
<img src='/assets/life/suqing.jpg' style='width:400px'></img>
<img src='/assets/life/suqing2.jpg' style='width:400px'></img></p>
<h3 id="呕吐"> 呕吐</h3>
<p>孩子快2岁了，2022年1月15日，冬天。吃了写草莓，车厘子。中午睡醒之后，开始呕吐，吃的水果之类的全部都吐了出来，<br>
一直到晚上，每隔一段时间都会吐一次。孩子太饿了，喝了些奶粉，不过还是被吐了出来。</p>
<p>孩子很是难受，吐的哭。</p>
<p>没有去医院，猜测是吃坏肚子了，在叮当快药上买了【丁桂儿脐贴】，贴在了孩子肚脐眼上。<br>
看网上类似病例的应该是 <strong>反季节水果</strong> 导致的。</p>
<p>小孩还是尽量不要吃 <strong>反季节水果</strong>，更不要吃 <strong>凉的</strong> 。</p>
<p>------------------------------- 以上记录于 2022年1月15日 -------------------------------</p>
]]></content:encoded>
    </item>
    <item>
      <title>首页</title>
      <link>https://shenqiangbin.github.io/</link>
      <guid>https://shenqiangbin.github.io/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">首页</source>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
    </item>
    <item>
      <title>Slide page</title>
      <link>https://shenqiangbin.github.io/slides/</link>
      <guid>https://shenqiangbin.github.io/slides/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Slide page</source>
      <pubDate>Sat, 11 Dec 2021 09:16:59 GMT</pubDate>
      <content:encoded><![CDATA[
<i>Not supported content</i>]]></content:encoded>
      <enclosure url="https://shenqiangbin.github.io/logo.svg" type="image/svg+xml"/>
    </item>
    <item>
      <title>docker-compose部署</title>
      <link>https://shenqiangbin.github.io/tech/back/docker/docker-compose/</link>
      <guid>https://shenqiangbin.github.io/tech/back/docker/docker-compose/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">docker-compose部署</source>
      <category>docker</category>
      <pubDate>Tue, 30 May 2023 03:09:31 GMT</pubDate>
      <content:encoded><![CDATA[<p>docker-compose 可以运行一系列的服务，服务定义在 docker-compose.yml 文件中。</p>
<h3 id="环境说明"> 环境说明</h3>
<table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
<th>查询命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>系统：</td>
<td>CentOS Linux release 7.9	cat</td>
<td>/etc/redhat-release</td>
</tr>
</tbody>
</table>
<h3 id="安装"> 安装</h3>
<div><pre><code>curl -L https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose 

chmod +x /usr/local/bin/docker-compose
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>命令解读：curl -L 下载指定文件，后面是一个网址。网址中有两个占位符，一个值是 uname -s，一个值是 uname -m。
文件下载后，保存到 /usr/local/bin/docker-compose，也就是说下载的文件改名成 docker-compose 了。然后再赋予文件可执行的权限。</p>
<p><span style="color:red;font-size:20px;">执行失败怎么办？</span></p>
<p>失败一般是由于无法下载文件导致的，我们可以先解析到文件网址，然后通过迅雷下载。<br>
我解析到的地址为：<br>
https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-Linux-x86_64</p>
<h3 id="查看版本"> 查看版本</h3>
<p>docker-compose version</p>
<h3 id="常用命令"> 常用命令</h3>
<p>docker-compose ps  	查看容器运行情况<br>
docker-compose down  	 停止并删除运行的容器<br>
docker-compose up 	启动容器<br>
docker-compose stop	
docker-compose build	
docker-compose rm	删除</p>
<h4 id="docker-compose-up-和-docker-compose-up-d"> docker-compose up 和 docker-compose up -d</h4>
<p>默认情况，docker-compose up 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。
当通过 Ctrl-C 停止命令时，所有容器将会停止。
如果使用 docker-compose up -d，将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。</p>
]]></content:encoded>
    </item>
    <item>
      <title>docker部署</title>
      <link>https://shenqiangbin.github.io/tech/back/docker/install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/docker/install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">docker部署</source>
      <category>docker</category>
      <pubDate>Tue, 30 May 2023 03:09:31 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="在线安装"> 在线安装</h2>
<h3 id="环境说明"> 环境说明</h3>
<table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
<th>查询命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>系统：</td>
<td>CentOS Linux release 7.9	cat</td>
<td>/etc/redhat-release</td>
</tr>
</tbody>
</table>
<h3 id="安装命令"> 安装命令</h3>
<div><pre><code>sudo yum install -y yum-utils device-mapper-persistent-data lvm2
sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
sudo yum -y install docker-ce docker-ce-cli containerd.io
systemctl start docker
systemctl enable docker

# 查看版本
docker -v
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>docker</title>
      <link>https://shenqiangbin.github.io/tech/back/docker/</link>
      <guid>https://shenqiangbin.github.io/tech/back/docker/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">docker</source>
      <pubDate>Tue, 30 May 2023 03:09:31 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>docker 相关内容</p>
]]></content:encoded>
    </item>
    <item>
      <title>.Net</title>
      <link>https://shenqiangbin.github.io/tech/back/dotnet/</link>
      <guid>https://shenqiangbin.github.io/tech/back/dotnet/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">.Net</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="net-技术"> .Net 技术</h2>
<p>.Net 技术 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>配置文件</title>
      <link>https://shenqiangbin.github.io/tech/back/es/config/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/config/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">配置文件</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="空间警告"> 空间警告</h2>
<blockquote>
<p>当磁盘空间使用到一定程度时，就变成只读状态，则不能再继续操作。</p>
</blockquote>
<p>在 elasticsearch.yml 中配置</p>
<div><pre><code>#当磁盘空间使用到 99% 时才变成只读状态。
cluster.routing.allocation.disk.watermark.flood_stage: 99%
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>!@#$1q2w3e4r</p>
<h2 id="跨域配置"> 跨域配置</h2>
<p>编辑 config/elasticsearch.yml 文件。<br>
添加如下内容：</p>
<div><pre><code>http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>如果没有配置，elasticsearch-head 则会因为跨域问题而无法连接上 ES。</p>
<h2 id="设置密码"> 设置密码</h2>
<div><pre><code>xpack.security.enabled: true
xpack.license.self_generated.type: basic
xpack.security.transport.ssl.enabled: true

http.cors.allow-headers: Authorization,X-Requested-With,Content-Type,Content-Length
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><strong>重启 ES 后</strong>，执行命令 <code>elasticsearch-setup-passwords interactive</code> 来设置密码。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Linux 下 ElasticSearch 的安装</title>
      <link>https://shenqiangbin.github.io/tech/back/es/linux-es-install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/linux-es-install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Linux 下 ElasticSearch 的安装</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>待补充</p>
]]></content:encoded>
    </item>
    <item>
      <title>Mac 下 ElasticSearch 的安装</title>
      <link>https://shenqiangbin.github.io/tech/back/es/mac-es-install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/mac-es-install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Mac 下 ElasticSearch 的安装</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>打开网址 <a href="https://elasticsearch.cn/download/" target="_blank" rel="noopener noreferrer">https://elasticsearch.cn/download/</a>，下载 Mac 版本的 ElasticSearch 压缩包。</p>
<p>下载解压后，在对应的 bin 目录下运行命令 <code>./elasticsearch</code> 即可。</p>
<p>在浏览器中打开网址 localhost:9200，如果出现以下类似内容，则说明 ElasticSearch 启动成功。</p>
<div><pre><code>{
  &quot;name&quot; : &quot;qian.local&quot;,
  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,
  &quot;cluster_uuid&quot; : &quot;cU28HAsRQZSL-Z3UNxfN5Q&quot;,
  &quot;version&quot; : {
    &quot;number&quot; : &quot;7.6.2&quot;,
    &quot;build_flavor&quot; : &quot;default&quot;,
    &quot;build_type&quot; : &quot;tar&quot;,
    &quot;build_hash&quot; : &quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;,
    &quot;build_date&quot; : &quot;2020-03-26T06:34:37.794943Z&quot;,
    &quot;build_snapshot&quot; : false,
    &quot;lucene_version&quot; : &quot;8.4.0&quot;,
    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,
    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;
  },
  &quot;tagline&quot; : &quot;You Know, for Search&quot;
}
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>ElasticSearch 常用语句</title>
      <link>https://shenqiangbin.github.io/tech/back/es/query/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/query/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">ElasticSearch 常用语句</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>待补充</p>
]]></content:encoded>
    </item>
    <item>
      <title>ElasticSearch</title>
      <link>https://shenqiangbin.github.io/tech/back/es/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">ElasticSearch</source>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>索引引擎 ElasticSearch</p>
<h2 id="基本介绍"> 基本介绍</h2>
<p>当我们基于数据库的检索达到瓶颈时，比如数据库中数据量特别大，SQL查询特别慢。或者基于数据库无法实现分词检索时，这时可以考虑使用索引引擎。</p>
<h2 id="elasticsearch-的安装"> ElasticSearch 的安装</h2>
<p>ES 的安装常见的有：Windows 下的安装，Mac 下的安装，Linux 下的安装，以及 Docker 的安装。</p>
<h2 id="相关产品"> 相关产品</h2>
<p>概念 ELK，即 ElasticSearch、Logstash、Kibana 三个产品的缩写。</p>
<h2 id="官方站点"> 官方站点</h2>

]]></content:encoded>
    </item>
    <item>
      <title>可视化工具</title>
      <link>https://shenqiangbin.github.io/tech/back/es/visual/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/visual/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">可视化工具</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>待补充</p>
]]></content:encoded>
    </item>
    <item>
      <title>Windows 下 ElasticSearch 的安装</title>
      <link>https://shenqiangbin.github.io/tech/back/es/win-es-install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/es/win-es-install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Windows 下 ElasticSearch 的安装</source>
      <category>ElasticSearch</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<p>待补充</p>
]]></content:encoded>
    </item>
    <item>
      <title>CSV读取导入终极解决方法</title>
      <link>https://shenqiangbin.github.io/tech/back/java/csv-handle/</link>
      <guid>https://shenqiangbin.github.io/tech/back/java/csv-handle/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">CSV读取导入终极解决方法</source>
      <category>java</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="问题"> 问题</h2>
<p>读取 CSV 文件，读取的数据不正确</p>
<h2 id="测试"> 测试</h2>
<p>CSV 文件导入，这是一个非常常见的功能，今天就来聊一聊它。</p>
<p>读取CSV文件的内容，最好不要自己去写，单纯的将文件中的内容读取出来然后每行数据按逗号分隔是不行的。这个没有考虑到数据里面也有逗号的情况。</p>
<p>我们做一个测试，测试文件是 test.csv 文件（因为某些原因暂不提供下载）</p>
<p>这是一个有 459 行数据的 CSV 文件，我们使用 WPS 或者 OFFICE 是可以正常查看的。</p>
<p>我们找了4个类库来读取这个文件，看哪个类库可以正常读取。</p>
<h3 id="类库1-opencsv"> 类库1：opencsv</h3>
<p>测试失败，识别成了 85 行数据</p>
<div><pre><code> <span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>com.opencsv<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>opencsv<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>4.6<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>测试代码位置：<br>
<a href="https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader1.java" target="_blank" rel="noopener noreferrer">https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader1.java
</a></p>
<h3 id="类库2-hutool"> 类库2：hutool</h3>
<p>测试失败，识别成了 85 行数据</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>cn.hutool<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>hutool-all<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>5.6.5<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>测试代码位置：<br>
<a href="https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader2.java" target="_blank" rel="noopener noreferrer">https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader2.java
</a></p>
<h3 id="类库3-supercvs"> 类库3：supercvs</h3>
<p>测试失败，直接报错了</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>net.sf.supercsv<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>super-csv<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>2.4.0<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>测试代码位置：<br>
<a href="https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader3.java" target="_blank" rel="noopener noreferrer">https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader3.java
</a></p>
<h3 id="类库4-fastcsv"> 类库4：fastCSV</h3>
<p>测试成功</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>de.siegmar<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>fastcsv<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>2.0.0<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>测试代码位置：<br>
https://gitee.com/sqber/javademo/blob/master/src/main/java/ExcelDemo/csv/CSVReader4.java</p>
<p>具体代码如下：</p>
<div><pre><code><span>String</span> file <span>=</span> <span>"/Users/adminqian/my/test.csv"</span><span>;</span>
<span>String</span> charset <span>=</span> <span>"utf-8"</span><span>;</span>

<span>CsvReader</span> csv <span>=</span> <span>CsvReader</span><span>.</span><span>builder</span><span>(</span><span>)</span><span>.</span><span>build</span><span>(</span><span>Paths</span><span>.</span><span>get</span><span>(</span>file<span>)</span><span>,</span> <span>Charset</span><span>.</span><span>forName</span><span>(</span>charset<span>)</span><span>)</span><span>;</span>
<span>int</span> i <span>=</span> <span>0</span><span>;</span>
<span>for</span> <span>(</span><span>CsvRow</span> item <span>:</span> csv<span>)</span> <span>{</span>
    i<span>++</span><span>;</span>
    <span>List</span><span><span>&lt;</span><span>String</span><span>></span></span> list <span>=</span> item<span>.</span><span>getFields</span><span>(</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>list<span>.</span><span>size</span><span>(</span><span>)</span> <span>!=</span> <span>9</span><span>)</span> <span>{</span>
        <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"here"</span><span>)</span><span>;</span>
    <span>}</span>
    <span>if</span><span>(</span>list<span>.</span><span>contains</span><span>(</span><span>"用人单位招聘服务"</span><span>)</span> <span>||</span> list<span>.</span><span>contains</span><span>(</span><span>"Y12_GL05ZW01076"</span><span>)</span><span>)</span><span>{</span>
        <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"here"</span><span>)</span><span>;</span>
    <span>}</span>

<span>}</span>
<span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span>i<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id="结论"> 结论</h2>
<p>fastcsv 是最合适的读取 CSV 文件的工具，兼容性最好。</p>
<p>测试项目地址：<br>
<a href="https://gitee.com/sqber/javademo/tree/master/src/main/java/ExcelDemo/csv" target="_blank" rel="noopener noreferrer">https://gitee.com/sqber/javademo/tree/master/src/main/java/ExcelDemo/csv</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>【漏洞预警】Log4j2执行漏洞</title>
      <link>https://shenqiangbin.github.io/tech/back/java/log4j2-problem/</link>
      <guid>https://shenqiangbin.github.io/tech/back/java/log4j2-problem/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">【漏洞预警】Log4j2执行漏洞</source>
      <category>漏洞</category>
      <pubDate>Tue, 14 Dec 2021 15:06:41 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="【漏洞预警】apache-log4j2-远程代码执行漏洞"> 【漏洞预警】Apache Log4j2 远程代码执行漏洞</h2>
<p>如果是 Spring Boot 项目，在 pom.xml 文件中指定 log4j2 使用最新版本即可。</p>
<div><pre><code><span><span><span>&lt;</span>log4j2.version</span><span>></span></span>2.16.0<span><span><span>&lt;/</span>log4j2.version</span><span>></span></span>
</code></pre>
<div><span>1</span><br></div></div><p>而关于 log4j2 版本的最新消息可以查看 github 和 mvnrepository。</p>
<p>网址如下：</p>
<p><a href="https://github.com/apache/logging-log4j2/tags" target="_blank" rel="noopener noreferrer">https://github.com/apache/logging-log4j2/tags</a>
<a href="https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core" target="_blank" rel="noopener noreferrer">https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Java</title>
      <link>https://shenqiangbin.github.io/tech/back/java/</link>
      <guid>https://shenqiangbin.github.io/tech/back/java/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Java</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="java技术"> Java技术</h2>
<p>Java 技术 相关内容</p>

]]></content:encoded>
    </item>
    <item>
      <title>ThreadLocal</title>
      <link>https://shenqiangbin.github.io/tech/back/java/threadlocal/</link>
      <guid>https://shenqiangbin.github.io/tech/back/java/threadlocal/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">ThreadLocal</source>
      <category>java</category>
      <pubDate>Sat, 07 May 2022 01:49:57 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="示例"> 示例</h2>
<p>这是 Spring 中用到的 ThreadLocal 的一个示例。这里将 SecurityContext 放到了 ThreadLocal 中。<br>
保证了每个线程都有自己的认证对象信息。</p>
<div><pre><code>
<span>package</span> <span>org<span>.</span>springframework<span>.</span>security<span>.</span>core<span>.</span>context</span><span>;</span>

<span>import</span> <span>org<span>.</span>springframework<span>.</span>util<span>.</span></span><span>Assert</span><span>;</span>

<span>/**
 * A &lt;code>ThreadLocal&lt;/code>-based implementation of
 * {@link SecurityContextHolderStrategy}.
 *
 * @author Ben Alex
 * @see java.lang.ThreadLocal
 * @see org.springframework.security.core.context.web.SecurityContextPersistenceFilter
 */</span>
<span>final</span> <span>class</span> <span>ThreadLocalSecurityContextHolderStrategy</span> <span>implements</span> <span>SecurityContextHolderStrategy</span> <span>{</span>

	<span>private</span> <span>static</span> <span>final</span> <span>ThreadLocal</span><span><span>&lt;</span><span>SecurityContext</span><span>></span></span> contextHolder <span>=</span> <span>new</span> <span>ThreadLocal</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>

	<span>@Override</span>
	<span>public</span> <span>void</span> <span>clearContext</span><span>(</span><span>)</span> <span>{</span>
		contextHolder<span>.</span><span>remove</span><span>(</span><span>)</span><span>;</span>
	<span>}</span>

	<span>@Override</span>
	<span>public</span> <span>SecurityContext</span> <span>getContext</span><span>(</span><span>)</span> <span>{</span>
		<span>SecurityContext</span> ctx <span>=</span> contextHolder<span>.</span><span>get</span><span>(</span><span>)</span><span>;</span>
		<span>if</span> <span>(</span>ctx <span>==</span> <span>null</span><span>)</span> <span>{</span>
			ctx <span>=</span> <span>createEmptyContext</span><span>(</span><span>)</span><span>;</span>
			contextHolder<span>.</span><span>set</span><span>(</span>ctx<span>)</span><span>;</span>
		<span>}</span>
		<span>return</span> ctx<span>;</span>
	<span>}</span>

	<span>@Override</span>
	<span>public</span> <span>void</span> <span>setContext</span><span>(</span><span>SecurityContext</span> context<span>)</span> <span>{</span>
		<span>Assert</span><span>.</span><span>notNull</span><span>(</span>context<span>,</span> <span>"Only non-null SecurityContext instances are permitted"</span><span>)</span><span>;</span>
		contextHolder<span>.</span><span>set</span><span>(</span>context<span>)</span><span>;</span>
	<span>}</span>

	<span>@Override</span>
	<span>public</span> <span>SecurityContext</span> <span>createEmptyContext</span><span>(</span><span>)</span> <span>{</span>
		<span>return</span> <span>new</span> <span>SecurityContextImpl</span><span>(</span><span>)</span><span>;</span>
	<span>}</span>

<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>k8s常用命令</title>
      <link>https://shenqiangbin.github.io/tech/back/k8s/common-cmd/</link>
      <guid>https://shenqiangbin.github.io/tech/back/k8s/common-cmd/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">k8s常用命令</source>
      <category>k8s</category>
      <pubDate>Wed, 31 Aug 2022 15:57:37 GMT</pubDate>
      <content:encoded><![CDATA[<table>
<thead>
<tr>
<th>作用</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>查看节点状态</td>
<td><code>kubectl get nodes</code></td>
<td></td>
</tr>
<tr>
<td>应用某个 yaml 文件</td>
<td><code>kubectl apply -f xxx.yaml</code></td>
<td></td>
</tr>
<tr>
<td>删除已经应用的 yaml 文件</td>
<td><code>kubectl delete -f xxx.yaml</code></td>
<td></td>
</tr>
<tr>
<td>查看 xxx 空间下的 pod</td>
<td><code>kubectl get pods -n xxx</code></td>
<td></td>
</tr>
<tr>
<td>查看 某个 pod 运行状态</td>
<td><code>kubectl get pod my-nginx-684bd4f4c-jnzdd -o wide -n test</code></td>
<td></td>
</tr>
<tr>
<td>查看 pod 详细信息</td>
<td><code>kubectl describe pod -n kube-system kube-flannel-ds-amd64-c4h6p</code></td>
<td><code>kube-system</code> 是空间名称，<code>kube-flannel-ds-amd64-c4h6p</code> 是 pod 名称。</td>
</tr>
</tbody>
</table>
<h2 id="空间命令"> 空间命令</h2>
<table>
<thead>
<tr>
<th>作用</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>列举所有空间</td>
<td><code>kubectl get ns</code></td>
<td>-</td>
</tr>
<tr>
<td>创建空间</td>
<td><code>kubectl create namespace test</code></td>
<td>创建一个名为 test 的空间</td>
</tr>
<tr>
<td>删除空间</td>
<td><code>kubectl delete namespaces test</code></td>
<td>删除名为 test 的空间</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>harbor部署</title>
      <link>https://shenqiangbin.github.io/tech/back/k8s/harbor-install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/k8s/harbor-install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">harbor部署</source>
      <category>k8s</category>
      <pubDate>Tue, 30 May 2023 03:09:31 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>联系作者</p>
<p>QQ：1969858717</p>
</div>
<p>私有镜像仓库的部署 Harbor (<strong>Docker 部署</strong>)</p>
<p>Harbor 官方网站：<a href="https://goharbor.io/" target="_blank" rel="noopener noreferrer">https://goharbor.io/</a></p>
<h2 id="目的"> 目的</h2>
<p>私有 K8S 平台要使用私有的镜像仓库拉取镜像，而不是使用公共镜像仓库进行拉取。</p>
<h2 id="整体步骤"> 整体步骤</h2>
<p>安装前提：已经安装好 Docker 和 Docker-compose，Harbor 的运行是使用 docker-compose 运行的。</p>
<p>Dokcer 和 Docker-compose 的安装方法：<br>
<a href="https://shenqiangbin.github.io/tech/back/docker/install/" target="_blank" rel="noopener noreferrer">Docker安装</a><br>
<a href="https://shenqiangbin.github.io/tech/back/docker/docker-compose/" target="_blank" rel="noopener noreferrer">Docker-compose安装</a></p>
<p>安装 Harbor</p>
<ol>
<li>环境说明</li>
<li>下载安装文件</li>
<li>修改配置文件（修改端口，修改 HTTPS 证书位置）</li>
<li>HTTPS 需要的 SSL 证书的生成</li>
<li>命令行安装</li>
<li>验证</li>
<li>上传镜像</li>
</ol>
<h3 id="环境说明"> 环境说明</h3>
<table>
<thead>
<tr>
<th>软件</th>
<th>版本</th>
<th>查询命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>系统：</td>
<td>CentOS Linux release 7.9	cat</td>
<td>/etc/redhat-release</td>
</tr>
<tr>
<td>Docker 版本：</td>
<td>24.0.1</td>
<td>docker version</td>
</tr>
<tr>
<td>Docker-compose 版本：</td>
<td>1.27.4</td>
<td>docker-compose version</td>
</tr>
<tr>
<td>Harbor 版本：</td>
<td>v2.8.1</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="下载安装文件"> 下载安装文件</h3>
<p>在网址 <a href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener noreferrer">https://github.com/goharbor/harbor/releases</a> 下载如下文件，并上传到服务器上。</p>
<p>或直接下载： <a href="https://github.com/goharbor/harbor/releases/download/v2.8.1/harbor-offline-installer-v2.8.1.tgz" target="_blank" rel="noopener noreferrer">https://github.com/goharbor/harbor/releases/download/v2.8.1/harbor-offline-installer-v2.8.1.tgz</a></p>
<p><img src='/assets/tech/harbor-download.png' style='width:800px;border:1px solid #3eb07c'></img></p>
<h3 id="修改配置文件"> 修改配置文件</h3>
<p>解压 harbor-offline-installer-v2.8.1.tgz 文件，复制一份配置模板文件，并进行配置。</p>
<div><pre><code><span># 解压</span>
<span>tar</span> -zxvf harbor-offline-installer-v2.8.1.tgz

<span># 进入harbor目录，并复制模板文件</span>
<span>cd</span> harbor <span>&amp;&amp;</span> <span>cp</span> harbor.yml.tmpl harbor.yml
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>按需修改 harbor.yml 文件</p>
<p>hostname：可以使用 IP 或者域名（推荐使用域名，然后使用 hosts 进行解析）<br>
http.port: 访问端口，默认是80<br>
https.certificate ：nginx 使用 HTTPS 协议需要的证书<br>
https.private_key: nginx 使用 HTTPS 协议需要的私钥<br>
harbor_admin_password：帐号的密码</p>
<p><strong>假设我们域名为：myharbor.com</strong>， 修改示例如下：</p>
<p><img src='/assets/tech/harbor-config.png' style='width:800px;border:1px solid #3eb07c'></img></p>
<h3 id="https-需要的-ssl-证书的生成"> HTTPS 需要的 SSL 证书的生成</h3>
<p>（也就是生成上面配置的 /home/harbor/certs/myharbor.com.cert 和 key 文件）<br>
创建一个 certs 目录保存生成的证书，HTTPS 的证书生成也可以称为签发证书，<br>
由于我们的不是真域名，因此我们使用的是自签发证书形式，而不是使用大家公认的颁布机构。</p>
<p>整体步骤：<br>
1、生成 CA 私钥<br>
2、生成 CA 证书<br>
3、生成应用证书私钥<br>
4、生成 SAN 文件<br>
5、生成应用证书（用到 CA 私钥、CA 证书、SAN文件、CSR文件）</p>
<p><strong>以下在 certs 目录下执行</strong></p>
<p>生成 CA 私钥</p>
<div><pre><code>openssl genrsa -out ca.key <span>4096</span>
</code></pre>
<div><span>1</span><br></div></div><p>自签发生成 CA 证书</p>
<div><pre><code>openssl req -x509 -new -nodes -sha512 -days <span>3650</span> <span>\</span>
-subj <span>"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=myharbor.com"</span> <span>\</span>
-key ca.key <span>\</span>
-out ca.crt
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>注意 CN 后面的 myharbor.com 是我们的服务器域名。</p>
<p>生成应用证书私钥</p>
<div><pre><code>openssl genrsa -out myharbor.com.key <span>4096</span>
</code></pre>
<div><span>1</span><br></div></div><p>生成 CSR 文件</p>
<div><pre><code>openssl req -sha512 -new <span>\</span>
-subj <span>"/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=myharbor.com"</span> <span>\</span>
-key myharbor.com.key <span>\</span>
-out myharbor.com.csr
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>生成 SAN 文件</p>
<p>生成一个ext文本文件，内容就是签发信息，把这些证书签发给哪些目标的域名
所以harbor的域名必须选择下面的三个域名，签发的证书只对下面三个域名有效</p>
<div><pre><code><span>cat</span> <span>></span> v3.ext <span>&lt;&lt;-</span><span>EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names
[alt_names]
DNS.1=myharbor.com
DNS.2=www.myharbor.com
DNS.3=harbor.magedu.local
EOF</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>生成应用证书</p>
<div><pre><code>openssl x509 -req -sha512 -days <span>3650</span> <span>\</span>
             -extfile v3.ext <span>\</span>
             -CA ca.crt -CAkey ca.key -CAcreateserial <span>\</span>
             -in myharbor.com.csr <span>\</span>
             -out myharbor.com.crt
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>效果</p>
<div><pre><code>[root@10server certs]# openssl x509 -req -sha512 -days 3650 \
&gt;              -extfile v3.ext \
&gt;              -CA ca.crt -CAkey ca.key -CAcreateserial \
&gt;              -in myharbor.com.csr \
&gt;              -out myharbor.com.crt
Signature ok
subject=/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=myharbor.com
Getting CA Private Key
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></div>
<h3 id="命令行安装"> 命令行安装</h3>
<p>在解压后的 harbor 目录下运行</p>
<div><pre><code>./install.sh --with-trivy 
</code></pre>
<div><span>1</span><br></div></div><p><img src='/assets/tech/harbor-success.png' style='width:800px;border:1px solid #3eb07c'></img></p>
<h3 id="验证"> 验证</h3>
<p>配置 HOSTS 文件，将域名 myharbor.com 解析到指定服务器。<br>
172.16.1.10 myharbor.com （我的服务器的 IP 是 172.16.1.10）</p>
<p>直接输入 IP 访问也可以。只是会显示不安全。 https://172.16.1.10/</p>
<p><img src='/assets/tech/harbor-web-ip.png' style='width:800px;border:1px solid #3eb07c'></img></p>
<p>将 myharbor.com.crt 证书下载到电脑上，<strong>安装证书</strong>并添加到<strong>始终信任</strong>，在浏览器输入 myharbor.com 进行访问浏览。</p>
<p><img src='/assets/tech/harbor-web.png' style='width:800px;border:1px solid #3eb07c'></img></p>
<h3 id="上传镜像"> 上传镜像</h3>
<p>登录之前，先要配置 hosts。（即使是当前服务器也要配置）<br>
172.16.1.10 myharbor.com</p>
<p>登录
<code>docker login -u admin -p Harbor12345 myharbor.com</code></p>
<p>直接去登录的话，会报错。</p>
<div><pre><code><span>[</span>root@10server harbor<span>]</span><span># docker login -u admin -p Harbor12345 myharbor.com</span>
WARNING<span>!</span> Using --password via the CLI is insecure. Use --password-stdin.
Error response from daemon: Get <span>"https://myharbor.com/v2/"</span><span>:</span> tls: failed to verify certificate: x509: certificate signed by unknown authority
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>有两种处理办法（选其一即可）：<br>
1、跳过 HTTPS 证书认证<br>
2、配置证书</p>
<h4 id="方法一-跳过-https-证书认证"> 方法一：跳过 HTTPS 证书认证</h4>
<p>如果要跳过 HTTPS 的话，配置 编辑 /etc/docker/daemon.json（如果没有此文件，那么就创建一下）</p>
<div><pre><code>{
&quot;registry-mirrors&quot;: [ &quot;http://hub-mirror.c.163.com&quot; ],
&quot;insecure-registries&quot;:[&quot;myharbor.com&quot;]
}
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>然后重启　dokcer： (注意，如果使用的是 Harbor 服务器，重启之后，注意查看 harbor 相关容器是否启动）</p>
<div><pre><code><span>sudo</span> systemctl daemon-reload
<span>sudo</span> systemctl restart docker
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>先在 Harbor 的页面上，创建一个 test 项目，然后推送到 test 项目上。</p>
<div><pre><code>登录
docker login -u admin -p Harbor12345 myharbor.com

拉取一个镜像进行测试
docker pull hello-world

打上标签
docker tag hello-world:latest myharbor.com/test/hello-world:0529

推送
docker push myharbor.com/test/hello-world:0529
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>在浏览器的 Harbor 上查看。</p>
<h4 id="方法二-配置证书"> 方法二：配置证书</h4>
<p>添加证书，证书目录为 /etc/docker/certs.d/myharbor.com ，其中最后一个目录必须为域名名称。</p>
<div><p>注意</p>
<p>certs.d 的下的目录名必须和域名相同</p>
</div>
<div><pre><code>创建目录
mkdir -p /etc/docker/certs.d/myharbor.com

拷贝证书到此目录
cp /home/harbor/certs/myharbor.com.crt /etc/docker/certs.d/myharbor.com/

使用上面的逻辑在测试一遍。
docker login -u admin -p Harbor12345 myharbor.com

换一个镜像再试一次
docker pull busybox

docker tag busybox:latest myharbor.com/test/busybox:0529
docker push myharbor.com/test/busybox:0529
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><p>在浏览器的 Harbor 上查看。</p>
<h2 id="其它"> 其它</h2>
<p>containerd 如何配置来访问私有镜像仓库 harbor ？</p>
<h2 id="参考"> 参考</h2>
<p>https://www.cnblogs.com/punchlinux/p/16499966.html</p>
<p>https://goharbor.io/docs/2.8.0/install-config/</p>
<h2 id="扩展"> 扩展</h2>
<p>关于证书生成中的 CSR 文件</p>
<h3 id="csr-文件"> CSR 文件</h3>
<p>CSR 是 Certificate Signing Request 的缩写，从字面意思可以理解成 证书签发请求。
CSR 文件是公钥证书原始文件，包含了我们的一些信息，比如服务器信息和单位信息，这些需要提交给 CA 认证中心进行审核。</p>
<p>CSR 文件如何生成？</p>
<p>使用 OpenSSL 工具生成 CSR 文件
生成命令为：<br>
<code>openssl req -new -nodes -sha256 -newkey rsa:2048 -keyout [$key_file] -out [$OpenSSL_CSR]</code></p>
<p>说明：<br>
-new：表明生成一个新的 CSR 文件<br>
-nodes：表明密钥文件不被加密<br>
-sha256：使用的sha256算法<br>
-newkey rsa:2048：生成新的私钥文件，且密钥使用 rsa 算法<br>
-keyout $key_file：私钥文件要存放的路径<br>
-out $OpenSSL_CSR：CSR文件在存放的路径</p>
<p>执行之后会要求输入一些必要信息：<br>
Organization Name：公司名称<br>
Organization Unit Name：部门名称<br>
Country Code：所属国家，中国的是 CN<br>
State or Province：州名或省份名称<br>
Locality：城市名称<br>
Common Name：申请 SSL 证书的域名<br>
Email Address：邮箱地址，可不写<br>
A challenge password：密码，可不写</p>
<p>上面这些也可以使用 -subj 参数来指定</p>
<p>-subj &quot;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=magedu.net&quot;</p>
<p>官方介绍： https://www.openssl.org/docs/man3.0/man1/openssl-req.html</p>
<p>示例：</p>
<div><pre><code>openssl genrsa -out key.pem <span>2048</span>
openssl req -new -key key.pem -out req.pem

等同于：

openssl req -newkey rsa:2048 -keyout key.pem -out req.pem 
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>同样，当我们的程序要使用 HTTPS 时，也可以使用上面这一套来操作。</p>
]]></content:encoded>
    </item>
    <item>
      <title>k8s部署</title>
      <link>https://shenqiangbin.github.io/tech/back/k8s/install/</link>
      <guid>https://shenqiangbin.github.io/tech/back/k8s/install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">k8s部署</source>
      <category>k8s</category>
      <pubDate>Wed, 31 Aug 2022 15:57:37 GMT</pubDate>
      <content:encoded><![CDATA[<p>参考：</p>
<ul>
<li><a href="https://blog.csdn.net/qq_45400861/article/details/125552537" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_45400861/article/details/125552537</a></li>
</ul>
<p>三台 Linux，一个 master，两个 node。</p>
<p>master: 172.16.1.10<br>
node1: 172.16.1.11<br>
node2: 172.16.1.12</p>
<h2 id="初始配置"> 初始配置</h2>
<p><strong>3 台均配置</strong></p>
<div><pre><code><span>#关闭防火墙</span>
systemctl stop firewalld
systemctl disable firewalld

<span># 关闭swap</span>
<span># 临时</span>
swapoff -a
<span># 永久关闭</span>
<span>sed</span> -ri <span>'s/.*swap.*/#&amp;/'</span> /etc/fstab

<span># 根据规划设置主机名【master节点上操作】</span>
hostnamectl set-hostname 10server
<span># 根据规划设置主机名【node1节点操作】</span>
hostnamectl set-hostname 11server
<span># 根据规划设置主机名【node2节点操作】</span>
hostnamectl set-hostname 12server

<span># 在master添加hosts</span>
<span>vi</span> /etc/hosts
<span>172.16</span>.1.10 10server
<span>172.16</span>.1.11 11server
<span>172.16</span>.1.12 12server

<span># 将桥接的IPv4流量传递到iptables的链</span>
<span>vi</span> /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables <span>=</span> <span>1</span>
net.bridge.bridge-nf-call-iptables <span>=</span> <span>1</span>

<span># 生效</span>
sysctl --system

<span># 时间同步</span>
yum <span>install</span> ntpdate -y
ntpdate time.windows.com
<span># 查看时间</span>
<span>date</span>


<span># 关闭selinux</span>
<span># 永久关闭</span>
<span>sed</span> -i <span>'s/enforcing/disabled/'</span> /etc/selinux/config

<span># 重启</span>
<span>reboot</span>

<span># 查看</span>
getenforce

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br></div></div><h2 id="安装-docker"> 安装 docker</h2>
<p><strong>3 台均安装</strong></p>
<h3 id="配置-yum-源"> 配置 yum 源</h3>
<div><pre><code><span>cat</span> <span>&lt;&lt;</span><span>EOF<span> <span>></span> /etc/yum.repos.d/docker.repo</span>
[docker-ce-edge]
name=Docker CE Edge - \<span>$basearch</span>
baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/7/\<span>$basearch</span>/edge
enabled=1
gpgcheck=1
gpgkey=https://mirrors.aliyun.com/docker-ce/linux/centos/gpg
EOF</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="yum-安装"> yum 安装</h3>
<div><pre><code><span># yum安装</span>
yum -y <span>install</span> docker-ce

<span># 查看docker版本</span>
docker -v
Docker version <span>19.03</span>.13, build 4484c46d9d

<span># 开机启动docker</span>
systemctl <span>enable</span> docker

<span># 启动docker</span>
systemctl start docker
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h3 id="镜像加速"> 镜像加速</h3>
<div><pre><code><span>touch</span> /etc/docker/daemon.json
<span>cat</span> <span>&lt;&lt;</span><span>EOF<span> <span>></span> /etc/docker/daemon.json</span>
{
    "registry-mirrors":[
      "https://registry.docker-cn.com",
      "https://docker.mirrors.ustc.edu.cn",
      "http://hub-mirror.c.163.com",
      "https://cr.console.aliyun.com/",
      "https://hub.docker.com/"
    ]
}
EOF</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><div><pre><code><span>cat</span> /etc/docker/daemon.json
systemctl restart docker
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="安装-k8s"> 安装 k8s</h2>
<p><strong>3 台均安装</strong></p>
<h3 id="配置-yum-源-2"> 配置 yum 源</h3>
<div><pre><code><span>cat</span> <span>&lt;&lt;</span><span>EOF<span> <span>></span> /etc/yum.repos.d/kubernetes.repo</span>
[kubernetes]
name=Kubernetes
baseurl=https://repo.huaweicloud.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://repo.huaweicloud.com/kubernetes/yum/doc/yum-key.gpg https://repo.huaweicloud.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h3 id="yum-安装-2"> yum 安装</h3>
<div><pre><code><span># 安装kubelet、kubeadm、kubectl，同时指定版本</span>
yum <span>install</span> -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0
<span># 设置开机启动</span>
systemctl <span>enable</span> kubelet
<span># 启动 kubelet</span>
systemctl start kubelet

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="部署-kubernetes-master"> 部署 Kubernetes Master</h2>
<p>在 master 节点服务器执行（172.16.1.10）</p>
<p>拷贝这个</p>
<div><pre><code>kubeadm init <span>\</span>
--apiserver-advertise-address<span>=</span><span>172.16</span>.1.10 <span>\</span>
--image-repository registry.aliyuncs.com/google_containers <span>\</span>
--kubernetes-version v1.18.0 <span>\</span>
--service-cidr<span>=</span><span>10.96</span>.0.0/12  <span>\</span>
--pod-network-cidr<span>=</span><span>10.244</span>.0.0/16  <span>\</span>
--ignore-preflight-errors<span>=</span>NumCPU
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>命令说明：</p>
<div><pre><code>kubeadm init <span>\</span>
--apiserver-advertise-address<span>=</span><span>172.16</span>.1.10 <span>\</span>		<span># 当前主机ip</span>
--image-repository registry.aliyuncs.com/google_containers <span>\</span>		<span># 镜像</span>
--kubernetes-version v1.18.0 <span>\</span>		<span># 版本</span>
--service-cidr<span>=</span><span>10.96</span>.0.0/12  <span>\</span>		<span># 这个参数后的IP地址直接就套用10.96.0.0/12 ,以后安装时也套用即可，不要更改</span>
--pod-network-cidr<span>=</span><span>10.244</span>.0.0/16	<span>#k8s内部的pod节点之间网络可以使用的IP段，不能和service-cidr写一样，如果不知道怎么配，就先用这个10.244.0.0/16</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>此命令会比较慢，因为会拉取镜像。<br>
当出现如下内容时，说明安装成功了。</p>
<div><pre><code><span>..</span><span>..</span><span>..</span><span>..</span><span>..</span><span>..</span>
<span>..</span><span>..</span><span>..</span><span>..</span><span>..</span><span>..</span>
<span>..</span><span>..</span><span>..</span><span>..</span><span>..</span><span>..</span>
Your Kubernetes control-plane has initialized successfully<span>!</span>

To start using your cluster, you need to run the following as a regular user:

  <span>mkdir</span> -p <span>$HOME</span>/.kube
  <span>sudo</span> <span>cp</span> -i /etc/kubernetes/admin.conf <span>$HOME</span>/.kube/config
  <span>sudo</span> <span>chown</span> <span><span>$(</span><span>id</span> -u<span>)</span></span><span>:</span><span><span>$(</span><span>id</span> -g<span>)</span></span> <span>$HOME</span>/.kube/config

You should now deploy a pod network to the cluster.
Run <span>"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can <span>join</span> any number of worker nodes by running the following on each as root:

kubeadm <span>join</span> <span>172.16</span>.1.10:6443 --token iip6dt.25hpm9mjgruhujd1 <span>\</span>
    --discovery-token-ca-cert-hash sha256:dac0bc358bb64e1f0ed00782e7d2ba3f8e2d707e26cda0c1fd699fc5ce2ba922
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>上面提示的命令执行一下。</p>
<div><pre><code><span>mkdir</span> -p <span>$HOME</span>/.kube
<span>sudo</span> <span>cp</span> -i /etc/kubernetes/admin.conf <span>$HOME</span>/.kube/config
<span>sudo</span> <span>chown</span> <span><span>$(</span><span>id</span> -u<span>)</span></span><span>:</span><span><span>$(</span><span>id</span> -g<span>)</span></span> <span>$HOME</span>/.kube/config
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>查看节点状态</p>
<div><pre><code>kubectl get nodes
NAME       STATUS     ROLES    AGE     VERSION
10server   NotReady   master   3m10s   v1.18.0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当前的主节点已经有了，另外两个节点没有加进来。执行上面提示的最后的命名，把其它节点加进来。</p>
<div><p>注意</p>
<p>注意拷贝自己显示的命令，如果 token 过期，使用 <code>kubeadm token create --print-join-command</code> 重新生成。</p>
</div>
<p>在 node1: 172.16.1.11 node2: 172.16.1.12 上执行如下命令：</p>
<div><pre><code>kubeadm <span>join</span> <span>172.16</span>.1.10:6443 --token iip6dt.25hpm9mjgruhujd1 <span>\</span>
    --discovery-token-ca-cert-hash sha256:dac0bc358bb64e1f0ed00782e7d2ba3f8e2d707e26cda0c1fd699fc5ce2ba922
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>再查看</p>
<div><pre><code>[root@10server yum.repos.d]# kubectl get nodes
NAME       STATUS     ROLES    AGE    VERSION
10server   NotReady   master   7m2s   v1.18.0
11server   NotReady   &lt;none&gt;   58s    v1.18.0
12server   NotReady   &lt;none&gt;   63s    v1.18.0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="部署-cni-网络插件"> 部署 CNI 网络插件</h2>
<p>上面的状态还是 NotReady，下面我们需要网络插件，来进行联网访问</p>
<div><pre><code>kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
这是删除应用。
kubectl delete -f kube-flannel.yml
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code># 查看状态 【kube-system是k8s中的最小单元】
kubectl get pods -n kube-system

如果一直是 pending，则说明 kube-flannel.yml 中的镜像一直没有拉下来。
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><pre><code>kubectl get nodes
NAME       STATUS     ROLES    AGE    VERSION
10server   NotReady   master   7m2s   v1.18.0
11server   NotReady   &lt;none&gt;   58s    v1.18.0
12server   NotReady   &lt;none&gt;   63s    v1.18.0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="q-node-是-notready-状态"> Q: node 是 notready 状态</h2>
<p>如果 node 节点是 ready 的状态，那么先通过 <code>docker images</code> 查看下是否有如下镜像了，其实这些镜像信息在文件 <code>kube-flannel.yml</code> 中已经体现了。
尤其是 flannel、flannel-cni-plugin、coredns 这三个要有。</p>
<div><pre><code><span>[</span>root@11server home<span>]</span><span># docker images</span>
REPOSITORY                                           TAG                 IMAGE ID            CREATED             SIZE
rancher/mirrored-flannelcni-flannel                  v0.19.1             252b2c3ee6c8        <span>3</span> weeks ago         <span>62</span>.3MB
rancher/mirrored-flannelcni-flannel-cni-plugin       v1.1.0              fcecffc7ad4a        <span>3</span> months ago        <span>8</span>.09MB
registry.aliyuncs.com/google_containers/kube-proxy   v1.18.0             43940c34f24f        <span>2</span> years ago         117MB
registry.aliyuncs.com/google_containers/pause        <span>3.2</span>                 80d28bedfe5d        <span>2</span> years ago         683kB
registry.aliyuncs.com/google_containers/coredns      <span>1.6</span>.7               67da37a9a360        <span>2</span> years ago         <span>43</span>.8MB
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>如果没有，从其它地方复制一份，然后导入进来即可。</p>
<div><pre><code><span># 导入命令</span>
docker load -i coredns.tar
docker load -i flannel.tar
docker load -i flannel-plugin.tar
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>导入之后，再通过命令 <code>kubectl get nodes</code> 查看，状态应该就会变成 ready 状态了。如下所示。</p>
<div><pre><code><span>[</span>root@10server ~<span>]</span><span># kubectl get nodes</span>
NAME       STATUS   ROLES    AGE     VERSION
10server   Ready    master   3d      v1.18.0
11server   Ready    <span>&lt;</span>none<span>></span>   2d22h   v1.18.0
12server   Ready    <span>&lt;</span>none<span>></span>   16m     v1.18.0
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>参考：https://blog.csdn.net/omaidb/article/details/123139301</p>
<p>kubectl describe pod -n kube-system kube-flannel-ds-amd64-c4h6p</p>
]]></content:encoded>
    </item>
    <item>
      <title>k8s</title>
      <link>https://shenqiangbin.github.io/tech/back/k8s/</link>
      <guid>https://shenqiangbin.github.io/tech/back/k8s/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">k8s</source>
      <pubDate>Wed, 31 Aug 2022 15:57:37 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>容器化技术。</p>
]]></content:encoded>
    </item>
    <item>
      <title>项目构建</title>
      <link>https://shenqiangbin.github.io/tech/back/maven/create-project/</link>
      <guid>https://shenqiangbin.github.io/tech/back/maven/create-project/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">项目构建</source>
      <category>项目构建</category>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="项目构建"> 项目构建</h2>
<h3 id="构建多模块-module-项目"> 构建多模块（Module）项目</h3>
<p>使用 IDEA 构建多模块项目，可以参照 https://github.com/shenqiangbin/sqber-demo 项目的结构。</p>
<p>本质上就是创建目录和添加对应的 pom.xml 文件。</p>
<p>因此，也可以不使用 IDEA 来创建多模块项目，直接创建目录和 pom.xml 文件也就可以的，然后用 IDEA 打开即可。<br>
目录和文件结构如下：</p>
<div><pre><code>-- sqber-demo
    -- pom.xml
    -- common-tool
        -- pom.xml
    -- spring-log4j-demo
        -- pom.xml
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>根目录的 sqber-demo 下的 pom.xml 文件的 packaging 为 pom，表示这是一个父级的 pom。<br>
此文件的内容如下：</p>
<div><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span><span><span>&lt;</span>project</span> <span>xmlns</span><span><span>=</span><span>"</span>http://maven.apache.org/POM/4.0.0<span>"</span></span>
         <span><span>xmlns:</span>xsi</span><span><span>=</span><span>"</span>http://www.w3.org/2001/XMLSchema-instance<span>"</span></span>
         <span><span>xsi:</span>schemaLocation</span><span><span>=</span><span>"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>modelVersion</span><span>></span></span>4.0.0<span><span><span>&lt;/</span>modelVersion</span><span>></span></span>

    <span><span><span>&lt;</span>groupId</span><span>></span></span>com.sqber<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>sqber-demo<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>1.0-SNAPSHOT<span><span><span>&lt;/</span>version</span><span>></span></span>
    <span><span><span>&lt;</span>packaging</span><span>></span></span>pom<span><span><span>&lt;/</span>packaging</span><span>></span></span>

    <span><span><span>&lt;</span>modules</span><span>></span></span>
        <span><span><span>&lt;</span>module</span><span>></span></span>spring-log4j-demo<span><span><span>&lt;/</span>module</span><span>></span></span>
        <span><span><span>&lt;</span>module</span><span>></span></span>cnki-dianzi-demo<span><span><span>&lt;/</span>module</span><span>></span></span>
        <span><span><span>&lt;</span>module</span><span>></span></span>common-tool<span><span><span>&lt;/</span>module</span><span>></span></span>
    <span><span><span>&lt;/</span>modules</span><span>></span></span>

    <span><span><span>&lt;</span>properties</span><span>></span></span>
        <span><span><span>&lt;</span>java.version</span><span>></span></span>1.8<span><span><span>&lt;/</span>java.version</span><span>></span></span>
        <span><span><span>&lt;</span>spring-boot.version</span><span>></span></span>2.3.3.RELEASE<span><span><span>&lt;/</span>spring-boot.version</span><span>></span></span>
        <span><span><span>&lt;</span>commons-logging.version</span><span>></span></span>1.2<span><span><span>&lt;/</span>commons-logging.version</span><span>></span></span>

        <span><span><span>&lt;</span>maven.compiler.source</span><span>></span></span>1.8<span><span><span>&lt;/</span>maven.compiler.source</span><span>></span></span>
        <span><span><span>&lt;</span>maven.compiler.target</span><span>></span></span>1.8<span><span><span>&lt;/</span>maven.compiler.target</span><span>></span></span>
        <span><span><span>&lt;</span>maven.compiler.compilerVersion</span><span>></span></span>1.8<span><span><span>&lt;/</span>maven.compiler.compilerVersion</span><span>></span></span>


    <span><span><span>&lt;/</span>properties</span><span>></span></span>

    <span><span><span>&lt;</span>dependencyManagement</span><span>></span></span>

        <span><span><span>&lt;</span>dependencies</span><span>></span></span>
            <span><span><span>&lt;</span>dependency</span><span>></span></span>
                <span><span><span>&lt;</span>groupId</span><span>></span></span>org.springframework.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
                <span><span><span>&lt;</span>artifactId</span><span>></span></span>spring-boot-dependencies<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
                <span><span><span>&lt;</span>version</span><span>></span></span>${spring-boot.version}<span><span><span>&lt;/</span>version</span><span>></span></span>
                <span><span><span>&lt;</span>type</span><span>></span></span>pom<span><span><span>&lt;/</span>type</span><span>></span></span>
                <span><span><span>&lt;</span>scope</span><span>></span></span>import<span><span><span>&lt;/</span>scope</span><span>></span></span>
            <span><span><span>&lt;/</span>dependency</span><span>></span></span>
        <span><span><span>&lt;/</span>dependencies</span><span>></span></span>

    <span><span><span>&lt;/</span>dependencyManagement</span><span>></span></span>
<span><span><span>&lt;/</span>project</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br></div></div><h3 id="复制模块"> 复制模块</h3>
<p>如果我们有多个 Spring Boot 模块，按部就班的创建就比较慢了，如果已经有了一个 Spring Boot 模块，则直接复制过来改一改就好了。</p>
<p>下面是操作步骤：</p>
<p>1、 IDEA 中选中模块，然后【复制】【粘贴】，重新命名。<br>
2、修改 pom.xml 中的 artifactId 和 build-finalName。<br>
3、右击 pom.xml 文件，选择 Add as Maven Project，让项目作为 Maven 项目加载进来。<br>
4、修改包名。<br>
5、修改启动文件的名字（如果有 BaseScan 注解，也需要修改下要扫描的包）。</p>
<p>视频示例：</p>
<p>这里复制一份 spring-log4j-demo 模块，并重命名为 spring-db-demo 模块。</p>
<iframe width="720" height="405" frameborder="0" src="https://www.ixigua.com/iframe/7031936639031050788?autoplay=0" referrerpolicy="unsafe-url" allowfullscreen></iframe>
]]></content:encoded>
    </item>
    <item>
      <title>Maven</title>
      <link>https://shenqiangbin.github.io/tech/back/maven/</link>
      <guid>https://shenqiangbin.github.io/tech/back/maven/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Maven</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>Maven 是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。<br>
使用 Maven 可以管理项目中使用的依赖包，比如我的项目使用到 log4j 包，就可以通过 Maven 来引入。<br>
通过 Maven 还可以发布自己的项目。</p>
<p>使用 Maven 可以构建 <strong>多模块</strong> 的项目。</p>
<p>Maven 主要是一个 pom.xml 文件。</p>
<h2 id="参照"> 参照</h2>
<ul>
<li><a href="https://maven.apache.org/" target="_blank" rel="noopener noreferrer">官网 https://maven.apache.org/</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>settings 配置</title>
      <link>https://shenqiangbin.github.io/tech/back/maven/setting/</link>
      <guid>https://shenqiangbin.github.io/tech/back/maven/setting/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">settings 配置</source>
      <category>项目构建</category>
      <pubDate>Tue, 14 Dec 2021 12:14:43 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="maven-配置"> Maven 配置</h2>
<p>Maven 的配置文件通常是在 settings.xml 文件中，一般放在当前用户的 .m2 目录下，而 .m2 目录一般是 <strong>隐藏</strong> 的。<br>
Windows 系统下需要配置显示隐藏目录。<br>
Mac 下使用快捷键 <code>Shift+Command+.</code> 可以显示隐藏目录。</p>
<h3 id="maven-依赖下载入慢"> Maven 依赖下载入慢</h3>
<p>项目依赖的包是从 Maven 仓库下载的，而仓库一般在国外，所以下载比较慢，因此我们会将下载仓库设置为国内的。</p>
<p>下面是将 Maven 仓库设置为阿里的 Maven 仓库，settings.xml 内容如下：</p>
<div><pre><code><span><span><span>&lt;</span>settings</span> <span><span>xsi:</span>schemaLocation</span><span><span>=</span><span>"</span>http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd<span>"</span></span><span>></span></span>
	<span><span><span>&lt;</span>mirrors</span><span>></span></span>
		<span>&lt;!-- mirror | Specifies a repository mirror site to use instead of a given 
			repository. The repository that | this mirror serves has an ID that matches 
			the mirrorOf element of this mirror. IDs are used | for inheritance and direct 
			lookup purposes, and must be unique across the set of mirrors. | --></span>
		<span><span><span>&lt;</span>mirror</span><span>></span></span>
			<span><span><span>&lt;</span>id</span><span>></span></span>nexus-aliyun<span><span><span>&lt;/</span>id</span><span>></span></span>
			<span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
			<span><span><span>&lt;</span>name</span><span>></span></span>Nexus aliyun<span><span><span>&lt;/</span>name</span><span>></span></span>
			<span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span><span><span>&lt;/</span>url</span><span>></span></span>
		<span><span><span>&lt;/</span>mirror</span><span>></span></span>
		<span><span><span>&lt;</span>mirror</span><span>></span></span>
			<span><span><span>&lt;</span>id</span><span>></span></span>nexus-aliyun-thirdparty<span><span><span>&lt;/</span>id</span><span>></span></span>
			<span><span><span>&lt;</span>mirrorOf</span><span>></span></span>thirdparty<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
			<span><span><span>&lt;</span>name</span><span>></span></span>Nexus aliyun thirdparty<span><span><span>&lt;/</span>name</span><span>></span></span>
			<span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/repositories/thirdparty/<span><span><span>&lt;/</span>url</span><span>></span></span>
		<span><span><span>&lt;/</span>mirror</span><span>></span></span>
	<span><span><span>&lt;/</span>mirrors</span><span>></span></span>
 
	<span><span><span>&lt;</span>profiles</span><span>></span></span>
		<span><span><span>&lt;</span>profile</span><span>></span></span>
			<span><span><span>&lt;</span>id</span><span>></span></span>default<span><span><span>&lt;/</span>id</span><span>></span></span>
			<span><span><span>&lt;</span>repositories</span><span>></span></span>
				<span><span><span>&lt;</span>repository</span><span>></span></span>
		            <span><span><span>&lt;</span>id</span><span>></span></span>central<span><span><span>&lt;/</span>id</span><span>></span></span>
		            <span><span><span>&lt;</span>url</span><span>></span></span>https://jitpack.io<span><span><span>&lt;/</span>url</span><span>></span></span>
		        <span><span><span>&lt;/</span>repository</span><span>></span></span>
				<span><span><span>&lt;</span>repository</span><span>></span></span>
					<span><span><span>&lt;</span>id</span><span>></span></span>nexus<span><span><span>&lt;/</span>id</span><span>></span></span>
					<span><span><span>&lt;</span>name</span><span>></span></span>local private nexus<span><span><span>&lt;/</span>name</span><span>></span></span>
					<span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span><span><span>&lt;/</span>url</span><span>></span></span>
					<span><span><span>&lt;</span>releases</span><span>></span></span>
						<span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
					<span><span><span>&lt;/</span>releases</span><span>></span></span>
					<span><span><span>&lt;</span>snapshots</span><span>></span></span>
						<span><span><span>&lt;</span>enabled</span><span>></span></span>false<span><span><span>&lt;/</span>enabled</span><span>></span></span>
					<span><span><span>&lt;/</span>snapshots</span><span>></span></span>
				<span><span><span>&lt;/</span>repository</span><span>></span></span>
			<span><span><span>&lt;/</span>repositories</span><span>></span></span>
			<span><span><span>&lt;</span>pluginRepositories</span><span>></span></span>
				<span><span><span>&lt;</span>pluginRepository</span><span>></span></span>
					<span><span><span>&lt;</span>id</span><span>></span></span>nexus<span><span><span>&lt;/</span>id</span><span>></span></span>
					<span><span><span>&lt;</span>name</span><span>></span></span>local private nexus<span><span><span>&lt;/</span>name</span><span>></span></span>
					<span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span><span><span>&lt;/</span>url</span><span>></span></span>
					<span><span><span>&lt;</span>releases</span><span>></span></span>
						<span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
					<span><span><span>&lt;/</span>releases</span><span>></span></span>
					<span><span><span>&lt;</span>snapshots</span><span>></span></span>
						<span><span><span>&lt;</span>enabled</span><span>></span></span>false<span><span><span>&lt;/</span>enabled</span><span>></span></span>
					<span><span><span>&lt;/</span>snapshots</span><span>></span></span>
				<span><span><span>&lt;/</span>pluginRepository</span><span>></span></span>
			<span><span><span>&lt;/</span>pluginRepositories</span><span>></span></span>
		<span><span><span>&lt;/</span>profile</span><span>></span></span>
	<span><span><span>&lt;/</span>profiles</span><span>></span></span>
<span><span><span>&lt;/</span>settings</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br></div></div><p>下面是一个比较全面的配置，包含了［本地仓库设置］、［私有仓库设置］以及［仓库镜像］设置。</p>
<p>［仓库镜像］设置就是解决加载慢的问题。</p>
<div><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8"?></span>


<span><span><span>&lt;</span>settings</span> <span>xmlns</span><span><span>=</span><span>"</span>http://maven.apache.org/SETTINGS/1.2.0<span>"</span></span>
          <span><span>xmlns:</span>xsi</span><span><span>=</span><span>"</span>http://www.w3.org/2001/XMLSchema-instance<span>"</span></span>
          <span><span>xsi:</span>schemaLocation</span><span><span>=</span><span>"</span>http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd<span>"</span></span><span>></span></span>



  <span>&lt;!-- interactiveMode
   | This will determine whether maven prompts you when it needs input. If set to false,
   | maven will use a sensible default value, perhaps based on some other setting, for
   | the parameter in question.
   |
   | Default: true
  &lt;interactiveMode>true&lt;/interactiveMode>
  --></span>
  <span>&lt;!-- 本地仓库地址 --></span>
<span><span><span>&lt;</span>localRepository</span><span>></span></span>C:/Users/cnki52/.m2/repository<span><span><span>&lt;/</span>localRepository</span><span>></span></span>
  <span>&lt;!-- offline
   | Determines whether maven should attempt to connect to the network when executing a build.
   | This will have an effect on artifact downloads, artifact deployment, and others.
   |
   | Default: false
  &lt;offline>false&lt;/offline>
  --></span>

  <span>&lt;!-- pluginGroups
   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.
   | when invoking a command line like "mvn prefix:goal". Maven will automatically add the group identifiers
   | "org.apache.maven.plugins" and "org.codehaus.mojo" if these are not already contained in the list.
   |--></span>
  <span><span><span>&lt;</span>pluginGroups</span><span>></span></span>
    <span>&lt;!-- pluginGroup
     | Specifies a further group identifier to use for plugin lookup.
    &lt;pluginGroup>com.your.plugins&lt;/pluginGroup>
    --></span>
  <span><span><span>&lt;/</span>pluginGroups</span><span>></span></span>

  <span>&lt;!-- proxies
   | This is a list of proxies which can be used on this machine to connect to the network.
   | Unless otherwise specified (by system property or command-line switch), the first proxy
   | specification in this list marked as active will be used.
   |--></span>
  <span><span><span>&lt;</span>proxies</span><span>></span></span>
    <span>&lt;!-- proxy
     | Specification for one proxy, to be used in connecting to the network.
     |
    &lt;proxy>
      &lt;id>optional&lt;/id>
      &lt;active>true&lt;/active>
      &lt;protocol>http&lt;/protocol>
      &lt;username>proxyuser&lt;/username>
      &lt;password>proxypass&lt;/password>
      &lt;host>proxy.host.net&lt;/host>
      &lt;port>80&lt;/port>
      &lt;nonProxyHosts>local.net|some.host.com&lt;/nonProxyHosts>
    &lt;/proxy>
    --></span>
  <span><span><span>&lt;/</span>proxies</span><span>></span></span>

  <span>&lt;!-- servers
   | This is a list of authentication profiles, keyed by the server-id used within the system.
   | Authentication profiles can be used whenever maven must make a connection to a remote server.
   |--></span>
  <span><span><span>&lt;</span>servers</span><span>></span></span>
    <span>&lt;!-- server
     | Specifies the authentication information to use when connecting to a particular server, identified by
     | a unique name within the system (referred to by the 'id' attribute below).
     |
     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are
     |       used together.
     |
    &lt;server>
      &lt;id>deploymentRepo&lt;/id>
      &lt;username>repouser&lt;/username>
      &lt;password>repopwd&lt;/password>
    &lt;/server>
    --></span>

    <span>&lt;!-- Another sample, using keys to authenticate.
    &lt;server>
      &lt;id>siteServer&lt;/id>
      &lt;privateKey>/path/to/private/key&lt;/privateKey>
      &lt;passphrase>optional; leave empty if not used.&lt;/passphrase>
    &lt;/server>
    --></span>
  <span><span><span>&lt;/</span>servers</span><span>></span></span>

  <span>&lt;!-- mirrors
   | This is a list of mirrors to be used in downloading artifacts from remote repositories.
   |
   | It works like this: a POM may declare a repository to use in resolving certain artifacts.
   | However, this repository may have problems with heavy traffic at times, so people have mirrored
   | it to several places.
   |
   | That repository definition will have a unique id, so we can create a mirror reference for that
   | repository, to be used as an alternate download site. The mirror site will be the preferred
   | server for that repository.
   |--></span>
  <span><span><span>&lt;</span>mirrors</span><span>></span></span>
  
    <span>&lt;!-- 中心仓库 central 得镜像仓库地址，mirrorOf 即为是哪个得镜像 --></span>
    <span><span><span>&lt;</span>mirror</span><span>></span></span>
	    <span><span><span>&lt;</span>id</span><span>></span></span>nexus-aliyun<span><span><span>&lt;/</span>id</span><span>></span></span>
        <span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
        <span><span><span>&lt;</span>name</span><span>></span></span>Nexus aliyun<span><span><span>&lt;/</span>name</span><span>></span></span>
        <span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public<span><span><span>&lt;/</span>url</span><span>></span></span>
    <span><span><span>&lt;/</span>mirror</span><span>></span></span>
  <span><span><span>&lt;/</span>mirrors</span><span>></span></span>


  <span>&lt;!-- profiles
   | This is a list of profiles which can be activated in a variety of ways, and which can modify
   | the build process. Profiles provided in the settings.xml are intended to provide local machine-
   | specific paths and repository locations which allow the build to work in the local environment.
   |
   | For example, if you have an integration testing plugin - like cactus - that needs to know where
   | your Tomcat instance is installed, you can provide a variable here such that the variable is
   | dereferenced during the build process to configure the cactus plugin.
   |
   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles
   | section of this document (settings.xml) - will be discussed later. Another way essentially
   | relies on the detection of a system property, either matching a particular value for the property,
   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a
   | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.
   | Finally, the list of active profiles can be specified directly from the command line.
   |
   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact
   |       repositories, plugin repositories, and free-form properties to be used as configuration
   |       variables for plugins in the POM.
   |
   |--></span>
  <span><span><span>&lt;</span>profiles</span><span>></span></span>
    <span>&lt;!-- profile
     | Specifies a set of introductions to the build process, to be activated using one or more of the
     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/>
     | or the command line, profiles have to have an ID that is unique.
     |
     | An encouraged best practice for profile identification is to use a consistent naming convention
     | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.
     | This will make it more intuitive to understand what the set of introduced profiles is attempting
     | to accomplish, particularly when you only have a list of profile id's for debug.
     |
     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.
    &lt;profile>
      &lt;id>jdk-1.4&lt;/id>

      &lt;activation>
        &lt;jdk>1.4&lt;/jdk>
      &lt;/activation>

      &lt;repositories>
        &lt;repository>
          &lt;id>jdk14&lt;/id>
          &lt;name>Repository for JDK 1.4 builds&lt;/name>
          &lt;url>http://www.myhost.com/maven/jdk14&lt;/url>
          &lt;layout>default&lt;/layout>
          &lt;snapshotPolicy>always&lt;/snapshotPolicy>
        &lt;/repository>
      &lt;/repositories>
    &lt;/profile>
    --></span>

    <span>&lt;!--
     | Here is another profile, activated by the system property 'target-env' with a value of 'dev',
     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration
     | might hypothetically look like:
     |
     | ...
     | &lt;plugin>
     |   &lt;groupId>org.myco.myplugins&lt;/groupId>
     |   &lt;artifactId>myplugin&lt;/artifactId>
     |
     |   &lt;configuration>
     |     &lt;tomcatLocation>${tomcatPath}&lt;/tomcatLocation>
     |   &lt;/configuration>
     | &lt;/plugin>
     | ...
     |
     | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to
     |       anything, you could just leave off the &lt;value/> inside the activation-property.
     |
    &lt;profile>
      &lt;id>env-dev&lt;/id>

      &lt;activation>
        &lt;property>
          &lt;name>target-env&lt;/name>
          &lt;value>dev&lt;/value>
        &lt;/property>
      &lt;/activation>

      &lt;properties>
        &lt;tomcatPath>/path/to/tomcat/instance&lt;/tomcatPath>
      &lt;/properties>
    &lt;/profile>
    --></span>

    <span>&lt;!-- 文档（文档下可以设置自定义仓库） --></span>
    <span><span><span>&lt;</span>profile</span><span>></span></span>
		
      <span>&lt;!-- 文档的唯一标识，下面的[激活文档]配置会使用到。 --></span>
    	<span><span><span>&lt;</span>id</span><span>></span></span>test<span><span><span>&lt;/</span>id</span><span>></span></span>
      <span><span><span>&lt;</span>repositories</span><span>></span></span>

        <span>&lt;!-- 下面定义了 3 个自定义仓库 --></span>
        <span><span><span>&lt;</span>repository</span><span>></span></span>
          <span><span><span>&lt;</span>id</span><span>></span></span>codehausSnapshots<span><span><span>&lt;/</span>id</span><span>></span></span>
          <span><span><span>&lt;</span>name</span><span>></span></span>Codehaus Snapshots<span><span><span>&lt;/</span>name</span><span>></span></span>
          <span><span><span>&lt;</span>releases</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>always<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>warn<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>releases</span><span>></span></span>
          <span><span><span>&lt;</span>snapshots</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>never<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>fail<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>snapshots</span><span>></span></span>
          <span>&lt;!-- 自定义仓库地址 --></span>
          <span><span><span>&lt;</span>url</span><span>></span></span>http://10.120.150.159:8081/repository/cnki-public/<span><span><span>&lt;/</span>url</span><span>></span></span>
          <span><span><span>&lt;</span>layout</span><span>></span></span>default<span><span><span>&lt;/</span>layout</span><span>></span></span>
        <span><span><span>&lt;/</span>repository</span><span>></span></span>

        <span><span><span>&lt;</span>repository</span><span>></span></span>
          <span><span><span>&lt;</span>id</span><span>></span></span>codehausSnapshots2<span><span><span>&lt;/</span>id</span><span>></span></span>
          <span><span><span>&lt;</span>name</span><span>></span></span>Codehaus Snapshots2<span><span><span>&lt;/</span>name</span><span>></span></span>
          <span><span><span>&lt;</span>releases</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>always<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>warn<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>releases</span><span>></span></span>
          <span><span><span>&lt;</span>snapshots</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>never<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>fail<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>snapshots</span><span>></span></span>
          <span><span><span>&lt;</span>url</span><span>></span></span>http://10.120.150.159:8081/repository/cnki/<span><span><span>&lt;/</span>url</span><span>></span></span>
          <span><span><span>&lt;</span>layout</span><span>></span></span>default<span><span><span>&lt;/</span>layout</span><span>></span></span>
        <span><span><span>&lt;/</span>repository</span><span>></span></span>

        <span><span><span>&lt;</span>repository</span><span>></span></span>
          <span><span><span>&lt;</span>id</span><span>></span></span>codehausSnapshots3<span><span><span>&lt;/</span>id</span><span>></span></span>
          <span><span><span>&lt;</span>name</span><span>></span></span>Codehaus Snapshots3<span><span><span>&lt;/</span>name</span><span>></span></span>
          <span><span><span>&lt;</span>releases</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>always<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>warn<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>releases</span><span>></span></span>
          <span><span><span>&lt;</span>snapshots</span><span>></span></span>
            <span><span><span>&lt;</span>enabled</span><span>></span></span>true<span><span><span>&lt;/</span>enabled</span><span>></span></span>
            <span><span><span>&lt;</span>updatePolicy</span><span>></span></span>never<span><span><span>&lt;/</span>updatePolicy</span><span>></span></span>
            <span><span><span>&lt;</span>checksumPolicy</span><span>></span></span>fail<span><span><span>&lt;/</span>checksumPolicy</span><span>></span></span>
          <span><span><span>&lt;/</span>snapshots</span><span>></span></span>
          <span><span><span>&lt;</span>url</span><span>></span></span>http://10.120.150.159:8081/repository/cnki-releases/<span><span><span>&lt;/</span>url</span><span>></span></span>
          <span><span><span>&lt;</span>layout</span><span>></span></span>default<span><span><span>&lt;/</span>layout</span><span>></span></span>
        <span><span><span>&lt;/</span>repository</span><span>></span></span>

      <span><span><span>&lt;/</span>repositories</span><span>></span></span>
    <span><span><span>&lt;/</span>profile</span><span>></span></span>
  <span><span><span>&lt;/</span>profiles</span><span>></span></span>

  <span>&lt;!-- activeProfiles
   | List of profiles that are active for all builds.
   |
  --></span>

  <span>&lt;!-- 要激活的文档，这里使用上面的文档　id --></span>
  <span><span><span>&lt;</span>activeProfiles</span><span>></span></span>
    <span><span><span>&lt;</span>activeProfile</span><span>></span></span>test<span><span><span>&lt;/</span>activeProfile</span><span>></span></span>
  <span><span><span>&lt;/</span>activeProfiles</span><span>></span></span>

<span><span><span>&lt;/</span>settings</span><span>></span></span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br><span>134</span><br><span>135</span><br><span>136</span><br><span>137</span><br><span>138</span><br><span>139</span><br><span>140</span><br><span>141</span><br><span>142</span><br><span>143</span><br><span>144</span><br><span>145</span><br><span>146</span><br><span>147</span><br><span>148</span><br><span>149</span><br><span>150</span><br><span>151</span><br><span>152</span><br><span>153</span><br><span>154</span><br><span>155</span><br><span>156</span><br><span>157</span><br><span>158</span><br><span>159</span><br><span>160</span><br><span>161</span><br><span>162</span><br><span>163</span><br><span>164</span><br><span>165</span><br><span>166</span><br><span>167</span><br><span>168</span><br><span>169</span><br><span>170</span><br><span>171</span><br><span>172</span><br><span>173</span><br><span>174</span><br><span>175</span><br><span>176</span><br><span>177</span><br><span>178</span><br><span>179</span><br><span>180</span><br><span>181</span><br><span>182</span><br><span>183</span><br><span>184</span><br><span>185</span><br><span>186</span><br><span>187</span><br><span>188</span><br><span>189</span><br><span>190</span><br><span>191</span><br><span>192</span><br><span>193</span><br><span>194</span><br><span>195</span><br><span>196</span><br><span>197</span><br><span>198</span><br><span>199</span><br><span>200</span><br><span>201</span><br><span>202</span><br><span>203</span><br><span>204</span><br><span>205</span><br><span>206</span><br><span>207</span><br><span>208</span><br><span>209</span><br><span>210</span><br><span>211</span><br><span>212</span><br><span>213</span><br><span>214</span><br><span>215</span><br><span>216</span><br><span>217</span><br><span>218</span><br><span>219</span><br><span>220</span><br><span>221</span><br><span>222</span><br><span>223</span><br><span>224</span><br><span>225</span><br><span>226</span><br><span>227</span><br><span>228</span><br><span>229</span><br><span>230</span><br><span>231</span><br><span>232</span><br><span>233</span><br><span>234</span><br><span>235</span><br><span>236</span><br><span>237</span><br><span>238</span><br><span>239</span><br><span>240</span><br><span>241</span><br><span>242</span><br><span>243</span><br><span>244</span><br><span>245</span><br><span>246</span><br><span>247</span><br><span>248</span><br><span>249</span><br><span>250</span><br><span>251</span><br><span>252</span><br><span>253</span><br><span>254</span><br><span>255</span><br><span>256</span><br><span>257</span><br><span>258</span><br><span>259</span><br><span>260</span><br><span>261</span><br><span>262</span><br><span>263</span><br><span>264</span><br><span>265</span><br><span>266</span><br><span>267</span><br><span>268</span><br><span>269</span><br><span>270</span><br><span>271</span><br><span>272</span><br><span>273</span><br><span>274</span><br><span>275</span><br></div></div><h3 id="在项目中配置仓库地址"> 在项目中配置仓库地址</h3>
<p>在　pom.xml　中添加如下配置</p>
<div><pre><code><span><span><span>&lt;</span>project</span><span>></span></span>

  .....

  <span><span><span>&lt;</span>repositories</span><span>></span></span>
    <span><span><span>&lt;</span>repository</span><span>></span></span>
      <span><span><span>&lt;</span>id</span><span>></span></span>company-repo<span><span><span>&lt;/</span>id</span><span>></span></span>
      <span><span><span>&lt;</span>url</span><span>></span></span>http://10.120.150.159:8081/repository/cnki-releases/<span><span><span>&lt;/</span>url</span><span>></span></span>
    <span><span><span>&lt;/</span>repository</span><span>></span></span>
    <span><span><span>&lt;</span>repository</span><span>></span></span>
      <span><span><span>&lt;</span>id</span><span>></span></span>ali-repo<span><span><span>&lt;/</span>id</span><span>></span></span>
      <span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public<span><span><span>&lt;/</span>url</span><span>></span></span>
    <span><span><span>&lt;/</span>repository</span><span>></span></span>
    <span><span><span>&lt;</span>repository</span><span>></span></span>
      <span><span><span>&lt;</span>id</span><span>></span></span>company-repo2<span><span><span>&lt;/</span>id</span><span>></span></span>
      <span><span><span>&lt;</span>url</span><span>></span></span>http://10.120.150.159:8081/repository/cnki-public/<span><span><span>&lt;/</span>url</span><span>></span></span>
    <span><span><span>&lt;/</span>repository</span><span>></span></span>
  <span><span><span>&lt;/</span>repositories</span><span>></span></span>

<span><span><span>&lt;/</span>project</span><span>></span></span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>执行bat/sh命令</title>
      <link>https://shenqiangbin.github.io/tech/back/myutil/cmdUtil/</link>
      <guid>https://shenqiangbin.github.io/tech/back/myutil/cmdUtil/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">执行bat/sh命令</source>
      <category>工具</category>
      <pubDate>Tue, 21 Dec 2021 03:27:15 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="场景"> 场景</h2>
<p>通过程序动态生成 bat/sh 命令并执行</p>
<h2 id="代码"> 代码</h2>
<div><pre><code>
<span>package</span> <span>cnki<span>.</span>cqsd<span>.</span>base</span><span>;</span>

<span>import</span> <span>org<span>.</span>slf4j<span>.</span></span><span>Logger</span><span>;</span>
<span>import</span> <span>org<span>.</span>slf4j<span>.</span></span><span>LoggerFactory</span><span>;</span>

<span>import</span> <span>java<span>.</span>io<span>.</span></span><span>BufferedReader</span><span>;</span>
<span>import</span> <span>java<span>.</span>io<span>.</span></span><span>IOException</span><span>;</span>
<span>import</span> <span>java<span>.</span>io<span>.</span></span><span>InputStreamReader</span><span>;</span>

<span>public</span> <span>class</span> <span>CmdUtil</span> <span>{</span>
    <span>private</span> <span>static</span> <span>final</span> <span>Logger</span> LOG <span>=</span> <span>LoggerFactory</span><span>.</span><span>getLogger</span><span>(</span><span>CmdUtil</span><span>.</span><span>class</span><span>)</span><span>;</span>

    <span>public</span> <span>static</span> <span>String</span> <span>execCmdSync</span><span>(</span><span>String</span> cmd<span>,</span> <span>CmdExecResult</span> callback<span>)</span> <span>throws</span> <span><span>java<span>.</span>io<span>.</span></span>IOException</span><span>,</span> <span>InterruptedException</span> <span>{</span>

        <span>Runtime</span> rt <span>=</span> <span>Runtime</span><span>.</span><span>getRuntime</span><span>(</span><span>)</span><span>;</span>
        <span>Process</span> proc <span>=</span> rt<span>.</span><span>exec</span><span>(</span>cmd<span>)</span><span>;</span>

        <span>BufferedReader</span> stdInput <span>=</span> <span>new</span> <span>BufferedReader</span><span>(</span><span>new</span> <span>InputStreamReader</span><span>(</span>proc<span>.</span><span>getInputStream</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
        <span>BufferedReader</span> stdError <span>=</span> <span>new</span> <span>BufferedReader</span><span>(</span><span>new</span> <span>InputStreamReader</span><span>(</span>proc<span>.</span><span>getErrorStream</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>

        <span>StringBuffer</span> stdout <span>=</span> <span>new</span> <span>StringBuffer</span><span>(</span><span>)</span><span>;</span>
        <span>StringBuffer</span> errout <span>=</span> <span>new</span> <span>StringBuffer</span><span>(</span><span>)</span><span>;</span>

        <span>String</span> s <span>=</span> <span>null</span><span>;</span>
        <span>while</span> <span>(</span><span>(</span>s <span>=</span> stdInput<span>.</span><span>readLine</span><span>(</span><span>)</span><span>)</span> <span>!=</span> <span>null</span><span>)</span> <span>{</span>
            stdout<span>.</span><span>append</span><span>(</span>s<span>)</span><span>;</span>
        <span>}</span>

        <span>while</span> <span>(</span><span>(</span>s <span>=</span> stdError<span>.</span><span>readLine</span><span>(</span><span>)</span><span>)</span> <span>!=</span> <span>null</span><span>)</span> <span>{</span>
            errout<span>.</span><span>append</span><span>(</span>s<span>)</span><span>;</span>
        <span>}</span>

        <span>if</span> <span>(</span>callback <span>==</span> <span>null</span><span>)</span> <span>{</span>
            <span>return</span> stdInput<span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>int</span> exitVal <span>=</span> proc<span>.</span><span>waitFor</span><span>(</span><span>)</span><span>;</span>
        callback<span>.</span><span>onComplete</span><span>(</span>exitVal <span>==</span> <span>0</span><span>,</span> exitVal<span>,</span> errout<span>.</span><span>toString</span><span>(</span><span>)</span><span>,</span> stdout<span>.</span><span>toString</span><span>(</span><span>)</span><span>,</span> cmd<span>)</span><span>;</span>

        <span>return</span> stdInput<span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>interface</span> <span>CmdExecResult</span><span>{</span>
        <span>void</span> <span>onComplete</span><span>(</span><span>boolean</span> success<span>,</span> <span>int</span> exitVal<span>,</span> <span>String</span> error<span>,</span> <span>String</span> output<span>,</span> <span>String</span> originalCmd<span>)</span> <span>throws</span> <span>IOException</span><span>;</span>
    <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br></div></div><h2 id="使用"> 使用</h2>
<div><pre><code>
<span>String</span> cmd <span>=</span> <span>""</span><span>;</span>
<span>CmdUtil</span><span>.</span><span>execCmdSync</span><span>(</span>cmd<span>,</span> <span>(</span>success<span>,</span> exitVal<span>,</span> error<span>,</span> output<span>,</span> originalCmd<span>)</span> <span>-></span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span>success<span>)</span> <span>{</span>
        logger<span>.</span><span>debug</span><span>(</span><span>"cmd fail"</span><span>,</span> error<span>)</span><span>;</span>
        <span>throw</span> <span>new</span> <span>IOException</span><span>(</span>error<span>)</span><span>;</span>
    <span>}</span>
<span>}</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="感悟"> 感悟</h2>
<p>执行 cmd/sh 命令后，对结果会有一个处理操作，因此我们想把 <strong>一个方法当参数传递进去</strong>。
这里就是将方法定义到一个接口中，参数就是接口即可。</p>
<p>同样的处理形式，还会在 EXCEL 的帮助类中使用。</p>
]]></content:encoded>
    </item>
    <item>
      <title>平台判断</title>
      <link>https://shenqiangbin.github.io/tech/back/myutil/myplatform/</link>
      <guid>https://shenqiangbin.github.io/tech/back/myutil/myplatform/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">平台判断</source>
      <category>工具</category>
      <pubDate>Tue, 21 Dec 2021 02:52:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="场景"> 场景</h2>
<p>在动态生成某些命令的时候，不同操作系统可能有某些特殊字符需要处理。
比如 mysqldump 时，使用的 &gt; 在 Windows 下则会有问题，因此就需要判断系统类型。</p>
<h2 id="判断是-windows-系统还是-linux-系统"> 判断是 Windows 系统还是 Linux 系统</h2>
<p>找的一个 github 上的现有的 java 文件（来源已经忘记了）。内容如下：</p>
<div><pre><code>
<span>package</span> <span>com<span>.</span>sqber</span><span>;</span>
<span>import</span> <span>java<span>.</span>io<span>.</span></span><span>File</span><span>;</span>

<span>public</span> <span>class</span> <span>Platform</span> <span>{</span>

    <span>private</span> <span>static</span> <span>final</span> <span>String</span> OS_NAME <span>=</span> <span>System</span><span>.</span><span>getProperty</span><span>(</span><span>"os.name"</span><span>,</span> <span>""</span><span>)</span><span>;</span>

    <span>public</span> <span>enum</span> OS <span>{</span>
        WINDOWS<span>,</span>
        LINUX<span>,</span>
        MACOS<span>,</span>
    <span>}</span>

    <span>private</span> <span>static</span> <span>OS</span> os<span>;</span>
    <span>static</span> <span>{</span>
        <span>if</span> <span>(</span><span>Platform</span><span>.</span><span>isLinux</span><span>(</span><span>)</span><span>)</span> <span>{</span>
            os <span>=</span> OS<span>.</span>LINUX<span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>Platform</span><span>.</span><span>isWindows</span><span>(</span><span>)</span><span>)</span> <span>{</span>
            os <span>=</span> OS<span>.</span>WINDOWS<span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>Platform</span><span>.</span><span>isMacOSX</span><span>(</span><span>)</span><span>)</span> <span>{</span>
            os <span>=</span> OS<span>.</span>MACOS<span>;</span>
        <span>}</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>boolean</span> <span>isUnix</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>File</span><span>.</span>separatorChar <span>==</span> <span>'/'</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>boolean</span> <span>isWindows</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>File</span><span>.</span>separatorChar <span>==</span> <span>'\\'</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>boolean</span> <span>isLinux</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>isUnix</span><span>(</span><span>)</span> <span>&amp;&amp;</span> OS_NAME<span>.</span><span>toLowerCase</span><span>(</span><span>)</span><span>.</span><span>contains</span><span>(</span><span>"linux"</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>boolean</span> <span>isMacOSX</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>isUnix</span><span>(</span><span>)</span> <span>&amp;&amp;</span> <span>(</span>OS_NAME<span>.</span><span>startsWith</span><span>(</span><span>"Mac"</span><span>)</span> <span>||</span> OS_NAME<span>.</span><span>startsWith</span><span>(</span><span>"Darwin"</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>boolean</span> <span>isSolaris</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>isUnix</span><span>(</span><span>)</span> <span>&amp;&amp;</span> <span>(</span>OS_NAME<span>.</span><span>startsWith</span><span>(</span><span>"SunOS"</span><span>)</span> <span>||</span> OS_NAME<span>.</span><span>startsWith</span><span>(</span><span>"Solaris"</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>OS</span> <span>getOs</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> os<span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div><h3 id="使用"> 使用</h3>
<div><pre><code>
<span>Platform</span><span>.</span>OS os <span>=</span> <span>Platform</span><span>.</span><span>getOs</span><span>(</span><span>)</span><span>;</span>

<span>String</span> redirectStr <span>=</span> <span>Platform</span><span>.</span><span>isWindows</span><span>(</span><span>)</span> <span>?</span> <span>"-r"</span> <span>:</span> <span>">"</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>工具类</title>
      <link>https://shenqiangbin.github.io/tech/back/myutil/</link>
      <guid>https://shenqiangbin.github.io/tech/back/myutil/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">工具类</source>
      <pubDate>Mon, 20 Dec 2021 09:43:33 GMT</pubDate>
      <content:encoded><![CDATA[<ul>
<li><a href="./myplatform.html">平台，判断系统类型 Windows 或 linux</a></li>
<li><a href="./cmdUtil.html">执行bat/sh命令</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>nacos介绍</title>
      <link>https://shenqiangbin.github.io/tech/back/nacos/intro/</link>
      <guid>https://shenqiangbin.github.io/tech/back/nacos/intro/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">nacos介绍</source>
      <category>微服务</category>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>Nacos 是一个服务发现、配置管理和服务管理的平台。可以帮助我们更容易的构建、交付和管理微服务平台。Nacos支持几乎所有主流的“服务”的发现、配置和管理。</p>
<p>比如这些服务：</p>
<ul>
<li>Kubernetes Service</li>
<li>gRPC &amp; Dubbo RPC Service</li>
<li>Spring Cloud RESTful Service</li>
</ul>
<p>Nacos的关键特性：
服务发现和服务健康监测
动态配置服务</p>
<h2 id="你的项目是否需要使用-nacos"> 你的项目是否需要使用 Nacos</h2>
<h2 id="安装"> 安装</h2>
<h3 id="windows系统"> Windows系统</h3>
<p>下载压缩包：nacos-server-1.4.1.zip
解压后，执行命令（standalone代表单机模式运行）</p>
<div><pre><code>D:<span>\</span>nacos-server-1.4.1<span>\</span>nacos<span>\</span>bin<span>></span>startup.cmd -m standalone
</code></pre>
<div><span>1</span><br></div></div><p>启动之后，可以访问 http://127.0.0.1:8848/nacos/ 进入管理页面，账号密码：nacos 和 nacos</p>
<p>关闭 nacos：
双击 shutdown.cmd 文件即可。</p>
<h3 id="liunx-系统"> Liunx 系统</h3>
<div><p>注意</p>
<p>需要安装 Java JDK，版本需要是 1.8，其它版本的可能会有问题。</p>
</div>
<p>解压 nacos-server-1.4.1.tar.gz
进入 bin 目录，执行命令（6/
.模式运行）</p>
<div><pre><code><span>sh</span> startup.sh -m standalone
</code></pre>
<div><span>1</span><br></div></div><p>关闭 nacos：
sh shutdown.sh</p>
<h2 id="官网"> 官网</h2>
<p>官方网址
<a href="https://nacos.io/zh-cn/index.html" target="_blank" rel="noopener noreferrer">https://nacos.io/zh-cn/index.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Nacos</title>
      <link>https://shenqiangbin.github.io/tech/back/nacos/</link>
      <guid>https://shenqiangbin.github.io/tech/back/nacos/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Nacos</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="nacos"> Nacos</h2>
<p>Nacos 相关内容</p>

]]></content:encoded>
    </item>
    <item>
      <title>后端技术</title>
      <link>https://shenqiangbin.github.io/tech/back/</link>
      <guid>https://shenqiangbin.github.io/tech/back/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">后端技术</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="后端技术"> 后端技术</h2>
<p>后端技术 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>启用 HTTPS</title>
      <link>https://shenqiangbin.github.io/tech/back/security/https/</link>
      <guid>https://shenqiangbin.github.io/tech/back/security/https/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">启用 HTTPS</source>
      <category>安全</category>
      <pubDate>Thu, 23 Dec 2021 15:25:29 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="ssl协议"> SSL协议</h2>
<p>HTTPS 本质就是使用 SSL 协议来加密网络传输内容。</p>
<h2 id="证书"> 证书</h2>
<p>证书有【自签名证书】，虽然也可加密，但浏览器不认识这个证书，所以显示的不是一个绿锁。
和【自签名证书】相对应的则是【CA机构颁布的证书】。<br>
所以如果是企业用，还是花钱购买证书比较好。如果是个人用，可以申请免费的证书。</p>
<p>免费的签名证书可以参照这个站点的证书：
<a href="https://wangwenbo.cn/blog/archives/10.html" target="_blank" rel="noopener noreferrer">https://wangwenbo.cn/blog/archives/10.html</a><br>
在阿里云上可以免费申请证书，且上面还有相关的使用文档。</p>
<h2 id="nginx-配置-https"> nginx 配置 https</h2>
<p>80 端口 nginx 配置
非 80 端口 nginx 的 https 配置</p>
<p>nginx 配置如下</p>
<div><pre><code>
<span><span>user</span>  nginx</span><span>;</span>
<span><span>worker_processes</span>  auto</span><span>;</span>

<span><span>error_log</span>  /var/log/nginx/error.log notice</span><span>;</span>
<span><span>pid</span>        /var/run/nginx.pid</span><span>;</span>


<span><span>events</span></span> <span>{</span>
    <span><span>worker_connections</span>  <span>1024</span></span><span>;</span>
<span>}</span>


<span><span>http</span></span> <span>{</span>
    <span><span>include</span>       /etc/nginx/mime.types</span><span>;</span>
    <span><span>default_type</span>  application/octet-stream</span><span>;</span>

    <span><span>log_format</span>  main  <span>'<span>$remote_addr</span> - <span>$remote_user</span> [<span>$time_local]</span> "<span>$request</span>" '</span>
                      <span>'<span>$status</span> <span>$body_bytes_sent</span> "<span>$http_referer</span>" '</span>
                      <span>'"<span>$http_user_agent</span>" "<span>$http_x_forwarded_for</span>"'</span></span><span>;</span>

    <span><span>access_log</span>  /var/log/nginx/access.log  main</span><span>;</span>

    <span><span>sendfile</span>        <span>on</span></span><span>;</span>
    <span>#tcp_nopush     on;</span>

    <span><span>keepalive_timeout</span>  <span>65</span></span><span>;</span>

    <span>#gzip  on;</span>

    <span><span>include</span> /etc/nginx/conf.d/*.conf</span><span>;</span>

    <span><span>server</span></span><span>{</span>
    	<span><span>listen</span> <span>443</span> ssl</span><span>;</span>
    	<span><span>server_name</span> localhost</span><span>;</span>
            <span><span>ssl_certificate</span>      server.crt</span><span>;</span>
            <span><span>ssl_certificate_key</span>  server.key</span><span>;</span>
            <span><span>ssl_session_cache</span>    shared:SSL:1m</span><span>;</span>
            <span><span>ssl_session_timeout</span>  <span>5m</span></span><span>;</span>

            <span><span>ssl_ciphers</span>  HIGH:!aNULL:!MD5</span><span>;</span>
            <span><span>ssl_prefer_server_ciphers</span>  <span>on</span></span><span>;</span>

    	<span><span>location</span> /</span> <span>{</span>
    		<span><span>root</span> /home/test</span><span>;</span>
    		<span><span>index</span> index.html index.htm</span><span>;</span>
    		<span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.html</span><span>;</span>
    		<span><span>proxy_http_version</span> 1.1</span><span>;</span>
    	<span>}</span>
    <span>}</span>


    <span><span>server</span></span><span>{</span>
        <span><span>listen</span> <span>8081</span> ssl</span><span>;</span>
        <span><span>server_name</span> localhost</span><span>;</span>


        <span><span>ssl_certificate</span>      server.crt</span><span>;</span>
        <span><span>ssl_certificate_key</span>  server.key</span><span>;</span>
        <span><span>ssl_session_cache</span>    shared:SSL:1m</span><span>;</span>
        <span><span>ssl_session_timeout</span>  <span>5m</span></span><span>;</span>

        <span><span>ssl_ciphers</span>  HIGH:!aNULL:!MD5</span><span>;</span>
        <span><span>ssl_prefer_server_ciphers</span>  <span>on</span></span><span>;</span>

        <span><span>location</span> /</span> <span>{</span>
                <span><span>root</span> /home/test</span><span>;</span>
                <span><span>index</span> index.html index.htm</span><span>;</span>
                <span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.html</span><span>;</span>
                <span><span>proxy_http_version</span> 1.1</span><span>;</span>
        <span>}</span>
    <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br></div></div><h2 id="参照"> 参照</h2>
<p><a href="https://cloud.tencent.com/developer/article/1155967?from=article.detail.1452987" target="_blank" rel="noopener noreferrer">GitHub Pages 服务为自定义域名提供 HTTPS 支持</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>接口安全</title>
      <link>https://shenqiangbin.github.io/tech/back/security/interface/</link>
      <guid>https://shenqiangbin.github.io/tech/back/security/interface/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">接口安全</source>
      <category>安全</category>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="接口安全"> 接口安全</h2>
<ul>
<li>接口安全使用<strong>签名方式</strong></li>
<li>调用方需要申请 appKey 和 appSecret 来访问接口</li>
</ul>
<p>接口签名规则参照了微信支持接口的签名规则，但稍有不同。参照地址：
<a href="https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=4_3" target="_blank" rel="noopener noreferrer">https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=4_3</a></p>
<p>签名形式：</p>
<p>1、将发送参照按钮字典序排序<br>
2、使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串 stringA<br>
3、在 stringA 最后拼接上 appSecret 得到 stringSignTemp 字符串，并对 stringSignTemp 进行 HMAC-SHA256 运算，再将得到的字符串所有字符转换为大写，得到 sign 值。</p>
<p>示例：</p>
<p>假如参数传递如下：</p>
<ul>
<li>appKey：wxd930ea5d5a258f4f （appKey）</li>
<li>nonce：ibuaiVcKdpRxkhJA  （随机数）</li>
<li>timestamp：1637714827254  (时间戳)</li>
<li>dataid：10000100 (业务参数)</li>
<li>params：{&quot;name&quot;:&quot;test&quot;,&quot;age&quot;:&quot;1000&quot;} （业务参数）</li>
</ul>
<p>(参数没有数据时，传空字符串即可)</p>
<p>排序后的 stringA 为：<br>
<code>appKey=wxd930ea5d5a258f4f&amp;dataid=10000100&amp;nonce=ibuaiVcKdpRxkhJA&amp;params={&quot;name&quot;:&quot;test&quot;,&quot;age&quot;:&quot;1000&quot;}&amp;timestamp=1637714827254</code></p>
<p>stringA 拼接上 appSecret 得到 stringSignTemp :
<code>appKey=wxd930ea5d5a258f4f&amp;dataid=10000100&amp;nonce=ibuaiVcKdpRxkhJA&amp;params={&quot;name&quot;:&quot;test&quot;,&quot;age&quot;:&quot;1000&quot;}&amp;timestamp=1637714827254&amp;key=192006250b4c09247ec02edce69f6a2d</code></p>
<p>然后对 stringSignTemp 进行 HMAC-SHA256 加密 并 转大写得到签名：<code>00451B052AD905C4D5C8A665D09BB20FB50912AC4BBA28AD0967DE3A7E467175</code></p>
<p>最终得的发送给接口的数据为：</p>
<ul>
<li>appKey：wxd930ea5d5a258f4f （appKey）</li>
<li>nonce：ibuaiVcKdpRxkhJA  （随机数）</li>
<li>timestamp：1637714827254  (时间戳)</li>
<li>dataid：10000100 (业务参数)</li>
<li>params：{&quot;name&quot;:&quot;test&quot;,&quot;age&quot;:&quot;1000&quot;} （业务参数）</li>
<li>sign： 00451B052AD905C4D5C8A665D09BB20FB50912AC4BBA28AD0967DE3A7E467175</li>
</ul>
<p>必传参数：
appKey、nonce、timestamp、sign</p>
<p>代码示例：</p>
<div><pre><code><span>import</span> <span>org<span>.</span>apache<span>.</span>commons<span>.</span>codec<span>.</span>digest<span>.</span></span><span>HmacAlgorithms</span><span>;</span>
<span>import</span> <span>org<span>.</span>apache<span>.</span>commons<span>.</span>codec<span>.</span>digest<span>.</span></span><span>HmacUtils</span><span>;</span>

<span>import</span> <span>java<span>.</span>io<span>.</span></span><span>IOException</span><span>;</span>
<span>import</span> <span>java<span>.</span>util<span>.</span></span><span>*</span><span>;</span>


<span>public</span> <span>class</span> <span>SignUtil</span> <span>{</span>

    <span>public</span> <span>static</span> <span>void</span> <span>main</span><span>(</span><span>String</span><span>[</span><span>]</span> args<span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>
        <span>test</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>void</span> <span>test</span><span>(</span><span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>

        <span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> paraMap <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
        paraMap<span>.</span><span>put</span><span>(</span><span>"name"</span><span>,</span> <span>"test"</span><span>)</span><span>;</span>
        paraMap<span>.</span><span>put</span><span>(</span><span>"age"</span><span>,</span> <span>"1000"</span><span>)</span><span>;</span>
        <span>String</span> json <span>=</span> <span>JSONUtil</span><span>.</span><span>toString</span><span>(</span>paraMap<span>)</span><span>;</span>

        <span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
        map<span>.</span><span>put</span><span>(</span><span>"dataid"</span><span>,</span> <span>"10000100"</span><span>)</span><span>;</span>
        map<span>.</span><span>put</span><span>(</span><span>"params"</span><span>,</span> json<span>)</span><span>;</span>

        <span>String</span> url <span>=</span> <span>"/share/v1/dataMeta"</span><span>;</span>
        <span>post</span><span>(</span>url<span>,</span> map<span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>void</span> <span>post</span><span>(</span><span>String</span> url<span>,</span> <span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> paraMap<span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>
        <span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
        map<span>.</span><span>put</span><span>(</span><span>"appKey"</span><span>,</span> <span>"wxd930ea5d5a258f4f"</span><span>)</span><span>;</span>
        map<span>.</span><span>put</span><span>(</span><span>"nonce"</span><span>,</span> <span>"ibuaiVcKdpRxkhJA"</span><span>)</span><span>;</span>
        <span>long</span> time <span>=</span> <span>System</span><span>.</span><span>currentTimeMillis</span><span>(</span><span>)</span><span>;</span>
        time <span>=</span> <span>1637714827254L</span><span>;</span>
        map<span>.</span><span>put</span><span>(</span><span>"timestamp"</span><span>,</span> time<span>)</span><span>;</span>

        map<span>.</span><span>putAll</span><span>(</span>paraMap<span>)</span><span>;</span>

        <span>String</span> appSecret <span>=</span> <span>"192006250b4c09247ec02edce69f6a2d"</span><span>;</span>
        <span>String</span> result <span>=</span> <span>sign</span><span>(</span>map<span>,</span> appSecret<span>)</span><span>;</span>
        <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span>result<span>)</span><span>;</span> 
        <span>// result: 00451B052AD905C4D5C8A665D09BB20FB50912AC4BBA28AD0967DE3A7E467175</span>

        map<span>.</span><span>put</span><span>(</span><span>"sign"</span><span>,</span> result<span>)</span><span>;</span>

        
        <span>HttpHelper</span><span>.</span><span>httpPost</span><span>(</span>url<span>,</span> map<span>,</span> <span>null</span><span>)</span><span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>String</span> <span>sign</span><span>(</span><span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> map<span>,</span> <span>String</span> key<span>)</span> <span>{</span>
        <span>String</span> sortStr <span>=</span> <span>getSortStr</span><span>(</span>map<span>)</span><span>;</span>
        <span>String</span> str <span>=</span> sortStr <span>+</span> <span>"&amp;key="</span> <span>+</span> key<span>;</span>
        <span>String</span> hmacSha256 <span>=</span> <span>new</span> <span>HmacUtils</span><span>(</span><span>HmacAlgorithms</span><span>.</span>HMAC_SHA_256<span>,</span> key<span>)</span><span>.</span><span>hmacHex</span><span>(</span>str<span>)</span><span>.</span><span>toUpperCase</span><span>(</span><span>)</span><span>;</span>
        <span>return</span> hmacSha256<span>;</span>
    <span>}</span>

    <span>public</span> <span>static</span> <span>String</span> <span>getSortStr</span><span>(</span><span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span></span> map<span>)</span> <span>{</span>
        <span>List</span><span><span>&lt;</span><span>String</span><span>></span></span> keys <span>=</span> <span>new</span> <span>ArrayList</span><span>(</span>map<span>.</span><span>keySet</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>Collections</span><span>.</span><span>sort</span><span>(</span>keys<span>)</span><span>;</span>
        <span>StringBuilder</span> content <span>=</span> <span>new</span> <span>StringBuilder</span><span>(</span><span>)</span><span>;</span>

        <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> keys<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> <span>++</span>i<span>)</span> <span>{</span>
            <span>String</span> key <span>=</span> keys<span>.</span><span>get</span><span>(</span>i<span>)</span><span>;</span>
            <span>String</span> value <span>=</span> map<span>.</span><span>get</span><span>(</span>key<span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>i <span>==</span> keys<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>{</span>
                content<span>.</span><span>append</span><span>(</span>key<span>)</span><span>.</span><span>append</span><span>(</span><span>"="</span><span>)</span><span>.</span><span>append</span><span>(</span>value<span>)</span><span>;</span>
            <span>}</span> <span>else</span> <span>{</span>
                content<span>.</span><span>append</span><span>(</span>key<span>)</span><span>.</span><span>append</span><span>(</span><span>"="</span><span>)</span><span>.</span><span>append</span><span>(</span>value<span>)</span><span>.</span><span>append</span><span>(</span><span>"&amp;"</span><span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>
        <span>return</span> content<span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br></div></div><h2 id="数据交换接口"> 数据交换接口</h2>
<p>中台是动态创建的分享资源，每个资源对应的分享接口的参数和结果可能不同。
因此，可以通过接口元数据接口获取资源接口参数信息。</p>
<h3 id="接口元数据"> 接口元数据</h3>
<p>POST <code>/share/v1/dataMeta</code><br>
<code>Content-Type: application/x-www-form-urlencoded</code></p>
<p>参数：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名</th>
<th style="text-align:left">必选</th>
<th style="text-align:left">类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">appKey</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>应用标识</td>
</tr>
<tr>
<td style="text-align:left">nonce</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>随机数</td>
</tr>
<tr>
<td style="text-align:left">timestamp</td>
<td style="text-align:left">是</td>
<td style="text-align:left">long</td>
<td>时间戳</td>
</tr>
<tr>
<td style="text-align:left">sign</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>签名</td>
</tr>
<tr>
<td style="text-align:left">dataid</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>资源标识</td>
</tr>
</tbody>
</table>
<p>返回结果：</p>
<div><pre><code> <span>{</span>
    <span>"code"</span><span>:</span> <span>200</span><span>,</span> <span>// 返回码</span>
    <span>"data"</span><span>:</span> <span>{</span>
        <span>"params"</span><span>:</span> xxx<span>,</span> <span>// 参数信息</span>
        <span>"result"</span><span>:</span> xxx <span>// 返回结果</span>
    <span>}</span><span>,</span>
    <span>"msg"</span><span>:</span> <span>""</span> <span>// 消息</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>返回结果包含了 <strong>参数信息</strong> 和 <strong>返回结果</strong></p>
<p><strong>示例：</strong></p>
<p>假如中台开放了一个 <strong>用户资源</strong> 。 且此资源的配置示例如下(管理员配置的)：</p>
<p><strong>资源标识</strong> ： user001<br>
<strong>资源说明</strong>： 用户资源<br>
xxxx 省略 （哪个库，哪个表，或者其它）<br>
<strong>返回结果配置</strong>：</p>
<div><pre><code><span>[</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"id"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"String"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"唯一标识"</span>
    <span>}</span><span>,</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"name"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"String"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"姓名"</span>
    <span>}</span><span>,</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"age"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"int"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"年龄"</span>
    <span>}</span>
<span>]</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p><strong>请求参数配置</strong>：</p>
<div><pre><code><span>[</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"name"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"String"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"姓名"</span><span>,</span>
        <span>"oper"</span><span>:</span> <span>"精确"</span><span>,</span>
        <span>"filed"</span><span>:</span> <span>"name"</span><span>,</span>
        <span>"demo"</span><span>:</span> <span>"张三"</span><span>,</span>
        <span>"remark"</span><span>:</span> <span>"根据姓名过滤"</span><span>,</span>
        <span>"must"</span><span>:</span> <span>"否"</span>
    <span>}</span><span>,</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"age"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"int"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"年龄"</span><span>,</span>
        <span>"oper"</span><span>:</span> <span>"精确"</span><span>,</span>
        <span>"filed"</span><span>:</span> <span>"name"</span><span>,</span>
        <span>"demo"</span><span>:</span> <span>"10"</span><span>,</span>
        <span>"remark"</span><span>:</span> <span>"根据年龄过滤"</span><span>,</span>
        <span>"must"</span><span>:</span> <span>"否"</span>
    <span>}</span><span>,</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"beginTime"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"String"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"起始时间"</span><span>,</span>
        <span>"oper"</span><span>:</span> <span>"大于等于"</span><span>,</span>
        <span>"filed"</span><span>:</span> <span>"业务创建时间字段"</span><span>,</span>
        <span>"demo"</span><span>:</span> <span>"2010-10-10 10:10:10"</span><span>,</span>
        <span>"remark"</span><span>:</span> <span>"其它说明"</span><span>,</span>
        <span>"must"</span><span>:</span> <span>"否"</span>
    <span>}</span><span>,</span>
    <span>{</span>
        <span>"para"</span><span>:</span> <span>"endTime"</span><span>,</span>
        <span>"paraCate"</span><span>:</span> <span>"String"</span><span>,</span>
        <span>"name"</span><span>:</span> <span>"结束时间"</span><span>,</span>
        <span>"oper"</span><span>:</span> <span>"小于等于"</span><span>,</span>
        <span>"filed"</span><span>:</span> <span>"业务创建时间字段"</span><span>,</span>
        <span>"demo"</span><span>:</span> <span>"2010-10-10 10:10:10"</span><span>,</span>
        <span>"remark"</span><span>:</span> <span>"其它说明"</span><span>,</span>
        <span>"must"</span><span>:</span> <span>"否"</span>
    <span>}</span> 
<span>]</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div><blockquote>
<p>时间过滤使用的可以是原始记录的时间，也可以是进入中台的时间(假如能生成)</p>
</blockquote>
<p>则调用 **用户资源接口 ** 的元数据信息，则返回结果示例如下：</p>
<p>参数信息：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名</th>
<th style="text-align:left">必选</th>
<th style="text-align:left">类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">否</td>
<td style="text-align:left">string</td>
<td>根据姓名过滤</td>
</tr>
<tr>
<td style="text-align:left">age</td>
<td style="text-align:left">否</td>
<td style="text-align:left">string</td>
<td>根据年龄过滤</td>
</tr>
<tr>
<td style="text-align:left">beginTime</td>
<td style="text-align:left">否</td>
<td style="text-align:left">string</td>
<td>起始时间</td>
</tr>
<tr>
<td style="text-align:left">endTime</td>
<td style="text-align:left">否</td>
<td style="text-align:left">string</td>
<td>结束时间</td>
</tr>
</tbody>
</table>
<p>返回结果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名</th>
<th style="text-align:left">类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">id</td>
<td style="text-align:left">long</td>
<td>唯一标识</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">string</td>
<td>名称</td>
</tr>
<tr>
<td style="text-align:left">age</td>
<td style="text-align:left">int</td>
<td>年龄</td>
</tr>
</tbody>
</table>
<h3 id="数据接口"> 数据接口</h3>
<p>接口需要考虑的因素：</p>
<p>1、数据量较大时，一次性调用获取所有数据不可取，因此接口需要支持 <strong>分批获取</strong>。<br>
2、调用方分批获取时需要知道 <strong>数据总量</strong>，方可知道调用次数。<br>
3、调用方可能需要增量获取数据，因此接口需要支持按 <strong>时间段</strong> 获取数据。</p>
<p>POST <code>/share/v1/data</code><br>
<code>Content-Type: application/x-www-form-urlencoded</code></p>
<p>参数：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名</th>
<th style="text-align:left">必选</th>
<th style="text-align:left">类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">appKey</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>应用标识</td>
</tr>
<tr>
<td style="text-align:left">nonce</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>随机数</td>
</tr>
<tr>
<td style="text-align:left">timestamp</td>
<td style="text-align:left">是</td>
<td style="text-align:left">long</td>
<td>时间戳</td>
</tr>
<tr>
<td style="text-align:left">sign</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>签名</td>
</tr>
<tr>
<td style="text-align:left">dataid</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>资源标识</td>
</tr>
<tr>
<td style="text-align:left">pageIndex</td>
<td style="text-align:left">是</td>
<td style="text-align:left">int</td>
<td>当前页(批次)</td>
</tr>
<tr>
<td style="text-align:left">pageSize</td>
<td style="text-align:left">是</td>
<td style="text-align:left">int</td>
<td>每页数据(批次数量)</td>
</tr>
<tr>
<td style="text-align:left">params</td>
<td style="text-align:left">否</td>
<td style="text-align:left">String</td>
<td>其它参数（参数信息从元数据接口获取）JSON形式传递：{&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:&quot;10&quot;,&quot;beginTime:&quot;2020-10-10 10:10:10&quot;,&quot;endTime&quot;:&quot;2021-11-11 10:10:10&quot;}</td>
</tr>
</tbody>
</table>
<div><p>注意</p>
<p>数据接口实现 ** 时间段 ** 的参数传递是通过 params 参数传递的，因为时间段过滤所使用的字段需要资操作人员去配置。</p>
</div>
<p>返回结果：</p>
<div><pre><code> <span>{</span>
    <span>"code"</span><span>:</span> <span>200</span><span>,</span> <span>// 返回码</span>
    <span>"data"</span><span>:</span> <span>[</span>  <span>// 具体数据</span>
        <span>{</span>
            <span>// 返回结果在接口元数据中查看</span>
            xxx <span>:</span> xxx<span>,</span>
            xxx <span>:</span> xxx<span>,</span>
            xxx <span>:</span> xxx<span>,</span>
        <span>}</span>
    <span>]</span><span>,</span>
    <span>"msg"</span><span>:</span> <span>""</span> <span>// 消息</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h3 id="数据总量接口"> 数据总量接口</h3>
<p>POST <code>/share/v1/dataCount</code><br>
<code>Content-Type: application/x-www-form-urlencoded</code></p>
<p>参数：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名</th>
<th style="text-align:left">必选</th>
<th style="text-align:left">类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">appKey</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>应用标识</td>
</tr>
<tr>
<td style="text-align:left">nonce</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>随机数</td>
</tr>
<tr>
<td style="text-align:left">timestamp</td>
<td style="text-align:left">是</td>
<td style="text-align:left">long</td>
<td>时间戳</td>
</tr>
<tr>
<td style="text-align:left">sign</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>签名</td>
</tr>
<tr>
<td style="text-align:left">dataid</td>
<td style="text-align:left">是</td>
<td style="text-align:left">string</td>
<td>资源标识</td>
</tr>
<tr>
<td style="text-align:left">params</td>
<td style="text-align:left">否</td>
<td style="text-align:left">String</td>
<td>其它参数（参数信息从元数据接口获取）JSON形式传递：{&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:&quot;10&quot;}</td>
</tr>
</tbody>
</table>
<p>返回结果：</p>
<div><pre><code> <span>{</span>
    <span>"code"</span><span>:</span> <span>200</span><span>,</span> <span>// 返回码</span>
    <span>"data"</span><span>:</span> <span>100000</span><span>,</span> <span>// 总数</span>
    <span>"msg"</span><span>:</span> <span>""</span> <span>// 消息</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="调用伪代码"> 调用伪代码</h2>
<div><pre><code><span>int</span> pageSize <span>=</span> <span>1000</span><span>;</span>
<span>long</span> count <span>=</span> <span>dataCount</span><span>(</span>dataid<span>,</span>params<span>)</span><span>;</span>
<span>long</span> totalPage <span>=</span> count <span>/</span> pageSize <span>+</span> <span>(</span>totalCount <span>%</span> pageSize <span>==</span> <span>0</span> <span>?</span> <span>0</span> <span>:</span> <span>1</span><span>)</span><span>;</span>
<span>for</span><span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;=</span> totalPage<span>;</span> i<span>++</span><span>)</span><span>{</span>
    <span>PageData</span> data <span>=</span> <span>data</span><span>(</span>dataid<span>,</span>i<span>,</span>pageSize<span>,</span>params<span>)</span><span>;</span>
    <span>// PageData 业务处理，还可以根据唯一标识（如果业务数据有）判重。</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="错误码"> 错误码</h2>
<table>
<thead>
<tr>
<th style="text-align:left">错误码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">200</td>
<td>成功</td>
</tr>
<tr>
<td style="text-align:left">500</td>
<td>系统错误</td>
</tr>
<tr>
<td style="text-align:left">400</td>
<td>参数错误</td>
</tr>
<tr>
<td style="text-align:left">401</td>
<td>签名验证失败</td>
</tr>
<tr>
<td style="text-align:left">403</td>
<td>没有权限</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>安全设计</title>
      <link>https://shenqiangbin.github.io/tech/back/security/</link>
      <guid>https://shenqiangbin.github.io/tech/back/security/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">安全设计</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="安全设计"> 安全设计</h2>
<p>安全设计 相关内容</p>
]]></content:encoded>
    </item>
    <item>
      <title>Linux修改SSH默认22端口(视频+脚本)</title>
      <link>https://shenqiangbin.github.io/tech/back/security/test-linux22/</link>
      <guid>https://shenqiangbin.github.io/tech/back/security/test-linux22/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Linux修改SSH默认22端口(视频+脚本)</source>
      <pubDate>Sun, 07 Aug 2022 17:14:42 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="openssh"> OpenSSH</h2>
<p>我们能够远程连接 Linux 服务器，是因为 SSH 协议。SSH 协议的默认端口就是 TCP 22 端口。<br>
OpenSSH 是一款用于远程登录的连接工具，一般情况下，Liunx 就是安装的此服务来实现远程登录的。</p>
<p>使用命令 <code>rpm -qa | grep ssh</code> 查看是否安装了 OpenSSH</p>
<div><pre><code><span># 查看 OpenSSH</span>
<span>[</span>root@113localhost ~<span>]</span><span># rpm -qa | grep ssh</span>
libssh2-1.8.0-4.el7.x86_64
openssh-7.4p1-22.el7_9.x86_64
openssh-server-7.4p1-22.el7_9.x86_64
openssh-clients-7.4p1-22.el7_9.x86_64
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>安装了 OpenSSH 之后，我们就可以使用 ssh 命令连接 linux 了。</p>
<div><pre><code># 使用默认端口，以 root 账号登录
ssh root@192.168.3.18

# 使用23端口，以 root 账号登录
ssh -p23 root@192.168.3.18
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="查看-openssh-配置文件"> 查看 OpenSSH 配置文件</h2>
<p>通过上面的查询，我们知道了 <code>openssh-server-7.4p1-22.el7_9.x86_64</code> 的这个服务名称。<br>
使用命令 <code>rpm -ql xxx</code> 可以查看服务的相关文件。</p>
<div><div><br><br><div>&nbsp;</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span>[</span>root@113localhost ~<span>]</span><span># rpm -ql openssh-server-7.4p1-22.el7_9.x86_64</span>
/etc/pam.d/sshd
/etc/ssh/sshd_config
/etc/sysconfig/sshd
/usr/lib/systemd/system/sshd-keygen.service
/usr/lib/systemd/system/sshd.service
/usr/lib/systemd/system/sshd.socket
/usr/lib/systemd/system/sshd@.service
/usr/lib64/fipscheck/sshd.hmac
/usr/libexec/openssh/sftp-server
/usr/sbin/sshd
/usr/sbin/sshd-keygen
/usr/share/man/man5/moduli.5.gz
/usr/share/man/man5/sshd_config.5.gz
/usr/share/man/man8/sftp-server.8.gz
/usr/share/man/man8/sshd.8.gz
/var/empty/sshd
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id="修改配置文件"> 修改配置文件</h2>
<p>22 端口的配置就在 <code>/etc/ssh/sshd_config</code> 文件中。</p>
<div><p>注意</p>
<p>为了安全起见，我们先保留 22 端口，防止再也无法远程上服务器。</p>
</div>
<p>假如要把 22 端口修改成 1032 端口，那么在 Port 22 下面加上 Port 1032 端口，先临时保留 22 端口。</p>
<p>编辑配置文件命令：<code>vi /etc/ssh/sshd_config</code>，修改成如下内容。</p>
<div><pre><code><span># If you want to change the port on a SELinux system, you have to tell</span>
<span># SELinux about this change.</span>
<span># semanage port -a -t ssh_port_t -p tcp #PORTNUMBER</span>
Port <span>22</span>
Port <span>1032</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="关闭-selinux-防火墙"> 关闭 SELinux 防火墙</h2>
<p>关闭 SELinux 防火墙，否则重启 sshd 服务时，会提示权限被拒绝。<br>
一定要永久关闭 SELinux 防火墙，否则服务器重启后，因端口未开放会无法连接上服务器。
修改文件：<code>/etc/sysconfig/selinux</code>  改为 disable。
临时关闭命令： <code>setenforce 0</code>。</p>
<p>报错信息如下：</p>
<div><div><br><br><br><br><br><br><br><br><br><br><br><br><br><div>&nbsp;</div><div>&nbsp;</div><br><br><br><br></div><pre><code><span>[</span>root@114localhost ssh<span>]</span><span># systemctl status sshd</span>
● sshd.service - OpenSSH server daemon
   Loaded: loaded <span>(</span>/usr/lib/systemd/system/sshd.service<span>;</span> enabled<span>;</span> vendor preset: enabled<span>)</span>
   Active: active <span>(</span>running<span>)</span> since 一 <span>2022</span>-08-08 09:39:17 CST<span>;</span> 35s ago
     Docs: man:sshd<span>(</span><span>8</span><span>)</span>
           man:sshd_config<span>(</span><span>5</span><span>)</span>
 Main PID: <span>1917</span> <span>(</span>sshd<span>)</span>
   CGroup: /system.slice/sshd.service
           └─1917 /usr/sbin/sshd -D

localdomain systemd<span>[</span><span>1</span><span>]</span>: Stopping OpenSSH server daemon<span>..</span>.
localdomain systemd<span>[</span><span>1</span><span>]</span>: Stopped OpenSSH server daemon.
localdomain systemd<span>[</span><span>1</span><span>]</span>: Starting OpenSSH server daemon<span>..</span>.
localdomain sshd<span>[</span><span>1917</span><span>]</span>: error: Bind to port <span>1032</span> on <span>0.0</span>.0.0 failed: Permission denied.
localdomain sshd<span>[</span><span>1917</span><span>]</span>: error: Bind to port <span>1032</span> on :: failed: Permission denied.
localdomain sshd<span>[</span><span>1917</span><span>]</span>: Server listening on <span>0.0</span>.0.0 port <span>22</span>.
localdomain sshd<span>[</span><span>1917</span><span>]</span>: Server listening on :: port <span>22</span>.
localdomain systemd<span>[</span><span>1</span><span>]</span>: Started OpenSSH server daemon.
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id="重启-sshd-服务"> 重启 sshd 服务</h2>
<p>配置文件修改之后，重启 sshd 服务即可。</p>
<div><pre><code>systemctl restart sshd
</code></pre>
<div><span>1</span><br></div></div><h2 id="防火墙开放新端口"> 防火墙开放新端口</h2>
<p>既然要把 22 端口修改成 1032 端口，那么 1032 端口一定要对外开放。</p>
<div><pre><code><span># 开放 1032 端口</span>
firewall-cmd --zone<span>=</span>public --permanent --add-port<span>=</span><span>1032</span>/tcp

<span># 重启防火墙</span>
systemctl restart firewalld 
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>确认是否已经开放 1032 端口</p>
<div><pre><code>firewall-cmd --zone<span>=</span>public --list-ports
</code></pre>
<div><span>1</span><br></div></div><h2 id="使用新端口连接"> 使用新端口连接</h2>
<p>使用 SSH 命令（或者 SSH 远程工具）连接服务器，看是否能远程成功。</p>
<div><pre><code><span>ssh</span> -p1032 root@192.168.3.18
</code></pre>
<div><span>1</span><br></div></div><h2 id="注释-22-端口"> 注释 22 端口</h2>
<p>重新编辑 <code>/etc/ssh/sshd_config</code> 文件，注释 22 端口。</p>
<p>重启 sshd 服务。</p>
<h2 id="【一键脚本】"> 【一键脚本】</h2>
<p>在了解基本的操作流程后，我们可以将处理过程写成一个脚本。复制以下代码到一个 sh 脚本，执行即可。</p>
<div><pre><code><span>#!/bin/bash</span>
<span># 一键修改 22 默认端口</span>

<span>echo</span> -e <span>"建议永久关闭 SELinux<span title="\n">\n</span>"</span>
setenforce <span>0</span>

<span># 新端口为 1032 端口</span>
<span>newPortNum</span><span>=</span><span>1032</span>
<span>newPort</span><span>=</span><span>'Port 22\nPort ${newPortNum}'</span>
<span>echo</span> -e <span>"查看/etc/ssh/sshd_config端口配置信息<span title="\n">\n</span>"</span>

<span>a</span><span>=</span><span><span>`</span><span>grep</span> <span>"Port 22"</span> /etc/ssh/sshd_config<span>`</span></span>
<span>echo</span> <span>"result is: <span>$a</span>"</span>

<span>echo</span> -e <span>"打开22端口，添加一个新端口<span title="\n">\n</span>"</span>
<span>echo</span> <span>"sed -i 's/<span>$a</span>/<span>$newPort</span>/' /etc/ssh/sshd_config"</span>
<span>sed</span> -i <span>"s/<span>$a</span>/<span>$newPort</span>/"</span> /etc/ssh/sshd_config

<span>echo</span> -e <span>"查看处理结果<span title="\n">\n</span>"</span>
<span>b</span><span>=</span><span><span>`</span><span>grep</span> -n <span>"Port"</span> /etc/ssh/sshd_config<span>`</span></span>
<span>echo</span> -e <span>"result is:<span title="\n">\n</span><span>$b</span>"</span>

<span>echo</span> -e <span>"重启 sshd 服务<span title="\n">\n</span>"</span>
systemctl restart sshd

<span>echo</span> -e <span>"重启 firewalld 服务<span title="\n">\n</span>"</span>
systemctl restart firewalld

<span>echo</span> -e <span>"防火墙开放端口 <span>${newPortNum}</span> <span title="\n">\n</span>"</span>
firewall-cmd --zone<span>=</span>public --permanent --add-port<span>=</span><span>${newPortNum}</span>/tcp

<span>echo</span> -e <span>"重启 firewalld 服务<span title="\n">\n</span>"</span>
systemctl restart firewalld

<span>echo</span> -e <span>"查看已经开放的端口 <span title="\n">\n</span> "</span>
firewall-cmd --zone<span>=</span>public --list-ports
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>JdbcTemplate 数据库访问</title>
      <link>https://shenqiangbin.github.io/tech/back/spring/jdbcTemplate/</link>
      <guid>https://shenqiangbin.github.io/tech/back/spring/jdbcTemplate/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">JdbcTemplate 数据库访问</source>
      <category>JdbcTemplate</category>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据库访问"> 数据库访问</h2>
<p>访问数据库数据是最常用的功能。常见的有 MyBatis，然而个人不太喜欢。</p>
<p>1、其对数据库的访问功能进行了封装，并不是封装不好，而是排查问题不方便；<br>
2、生成复杂的语句时，通过代码生成语句比写在 XML 中方便；<br>
3、查询某个方法使用的 SQL 时，还要跳转到 XML 文件中，不能快速定位。<br>
4、批量导入还是通过写代码的形式，且没有 JdbcTemplate 简单。</p>
<p>技术选型应该是用最简单的方法实现功能，且易于排查问题。</p>
<p>我们来看下 Spring 自家的 JdbcTemplate 是如何实现数据库查询的。</p>
<h2 id="相关信息"> 相关信息</h2>
<ul>
<li>IDEA 2020.3</li>
<li>Spring Boot 2.3.3.RELEASE</li>
</ul>
<h2 id="一个数据源"> 一个数据源</h2>
<p>如果项目中只使用了一个数据源，比如项目中只用到一个 MySQL 数据库，那么在 Spring Boot 的项目文件中可以这样配置。</p>
<p><strong>application.yml</strong></p>
<div><pre><code><span>spring</span><span>:</span>
  <span>datasource</span><span>:</span>
    <span>url</span><span>:</span> jdbc<span>:</span>mysql<span>:</span>//127.0.0.1<span>:</span>3306/template<span>?</span>useSSL=false<span>&amp;serverTimezone=Asia/Shanghai&amp;allowMultiQueries=true</span>
    <span>driver-class-name</span><span>:</span> com.mysql.cj.jdbc.Driver
    <span>username</span><span>:</span> root
    <span>password</span><span>:</span> <span>123456</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>在 pom.xml 中添加相关依赖</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.springframework.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>spring-boot-starter-jdbc<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>

<span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>mysql<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mysql-connector-java<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>scope</span><span>></span></span>runtime<span><span><span>&lt;/</span>scope</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>然后在 <code>@Controller</code> <code>@Service</code> <code>@Repository</code> 中就可以注册 <code>JdbcTemplate</code> 了。
当然，规范的做法是放在 <code>@Repository</code> 中，也就是放在数据库访问层。</p>
<p>？？ JdbcTemplate 是怎么初始化的？？
打断点的形式，看是怎么运行的。</p>
<blockquote>
<p>Spring Boot 都没有找到 JdbcTemplate Bean 的时候，会自动注册一个 Bean 。</p>
</blockquote>
<p>我们复制一个简单的 Spring Boot 项目。进行查看。</p>
<p>关于 <code>JdbcTemplate</code> 的使用后面再介绍。</p>
<h2 id="多个数据源"> 多个数据源</h2>
<p>如果项目中用到多个数据源，比如项目中用到多个 MySQL 数据库，或者用到一个 MySQL 数据库，一个 Postgre 数据库。</p>
<p>那么这种情况，就需要配置下多数据源。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Spring</title>
      <link>https://shenqiangbin.github.io/tech/back/spring/</link>
      <guid>https://shenqiangbin.github.io/tech/back/spring/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Spring</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="spring-技术"> Spring 技术</h2>
<p>Spring 技术 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>采集 FTP 目录的数据到 HDFS</title>
      <link>https://shenqiangbin.github.io/tech/bigdata/flume/ftp2hdfs/</link>
      <guid>https://shenqiangbin.github.io/tech/bigdata/flume/ftp2hdfs/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">采集 FTP 目录的数据到 HDFS</source>
      <category>数据采集</category>
      <pubDate>Sun, 19 Dec 2021 14:31:22 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="需求"> 需求</h2>
<p>采集其他厂商系统产生的日志到 HDFS</p>
<h2 id="分析"> 分析</h2>
<p>其他厂商的系统有自己的服务器，为了采集其日志，可以将采集软件（比如 Flume）部署到目标服务器上监控特定的目录进行采集。</p>
<p>但是，这样的缺点有：</p>
<p>1、这些服务器是其他厂商的，不愿开放太多权限。<br>
2、即使开放了权限，如果采集逻辑发生变化（比如监控目录变化），还需要重新部署。</p>
<p>所以，其他厂商可以在自己的服务器上安装 FTP，通过 FTP 的形式将需要采集得目录共享出来。
采集软件还可以部署在我们自己的服务器上，当采集逻辑改变时，通过配置修改即可。</p>
<h2 id="采集可以达到的效果"> 采集可以达到的效果</h2>
<ul>
<li>配置 [FTP账号]、[密码]、[需要采集的目录] 即可</li>
<li>采集到 HDFS 的目录和原目录结构保持一致、文件名保持一致</li>
<li>新增的文件可以采集</li>
<li>文件新增的内容可以采集（在 HDFS 中会以新文件保存）</li>
</ul>
<div><p>注意</p>
<p>文件修改的内容无法采集，只能采集新增的内容。（如果采集的是日志，则只会有新增的内容）</p>
</div>
<h2 id="flume-配置文件"> Flume 配置文件</h2>
<p>Flume 需要用到的插件：</p>
<p>github 地址: <a href="https://github.com/keedio/flume-ftp-source" target="_blank" rel="noopener noreferrer">https://github.com/keedio/flume-ftp-source</a><br>
gitee 备份地址： <a href="https://gitee.com/sqber/flume-ftp-source" target="_blank" rel="noopener noreferrer">https://gitee.com/sqber/flume-ftp-source</a></p>
<p>切换到 flume 的 bin 目录。执行如下命令：</p>
<p><code>./flume-ng agent -n agent -c ../conf/ -f /usr/local/flume/conf/ftp2.properties -Dflume.root.logger=INFO,console</code></p>
<p>配置文件 ftp2.properties 内容如下：</p>
<div><pre><code>
### wwww.keedio.com 
# example file, protocol is ftp, process by lines, and sink to file_roll
# for testing poporses.

## Sources Definition for agent &quot;agent&quot;
#ACTIVE LIST
agent.sources = ftp1
agent.sinks = k1
agent.channels = ch1 

##### SOURCE IS ftp server

# Type of source for ftp sources
agent.sources.ftp1.type = org.keedio.flume.source.ftp.source.Source
agent.sources.ftp1.client.source = ftp

# Connection properties for ftp server
agent.sources.ftp1.name.server = 192.168.52.65
agent.sources.ftp1.port = 21

agent.sources.ftp1.user = ftpuser
agent.sources.ftp1.password = 12345678

# Process files in
agent.sources.ftp1.working.directory = /var/ftp/tomlog2
# Proces files matches (java regex for ftp-ftps)
# agent.sources.ftp1.filter.pattern = .+\\.out

# keep file track status in folder
# agent.sources.ftp1.folder = /var/log/flume-ftp
# file track status name
# agent.sources.ftp1.file.name = ftp1-status-file.ser

# Discover delay, each configured milisecond directory will be explored
agent.sources.ftp1.run.discover.delay=5000

# Process by lines
agent.sources.ftp1.flushlines = true

# Discover and process files under user&#39;s home directory
agent.sources.ftp1.search.recursive = true
# Do not process file while it is being written.
agent.sources.ftp1.processInUse = true
# If file must not be processed while it is being written, wait timeout.
agent.sources.ftp1.processInUseTimeout = 30

agent.sources.ftp1.fileHeader = true
agent.sources.ftp1.basenameHeader = true

agent.sinks.k1.type=hdfs
agent.sinks.k1.hdfs.path=hdfs://10.120.69.50:8020/flume_data/10.120.69.50/%{filePath}
agent.sinks.k1.hdfs.fileType=DataStream
agent.sinks.k1.hdfs.writeFormat=Text
agent.sinks.k1.hdfs.filePrefix=%{fileName}

agent.channels.ch1.type = memory
agent.channels.ch1.capacity = 10000
agent.channels.ch1.transactionCapacity = 1000

agent.sources.ftp1.channels = ch1

agent.sinks.k1.channel = ch1
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br></div></div><h2 id="flume-运行日志保存到数据库"> Flume 运行日志保存到数据库</h2>
<p>Flume 运行命令时，添加上 db
<code>/usr/local/flume/bin/flume-ng agent -n agent -c /usr/local/flume/conf/ -f /usr/local/flume/conf/ftp2.properties -Dflume.root.logger=INFO,CONSOLE,db</code></p>
<p>修改 {flume_path}/conf/log4j.properties 文件</p>
<div><pre><code><span># flume.root.logger=INFO,LOGFILE 末尾添加 db</span>
<span>flume.root.logger</span><span>=</span><span>INFO,LOGFILE,db</span>

<span># 此段代码加在末尾</span>
<span># db</span>
<span>log4j.appender.db</span><span>=</span><span>org.apache.log4j.jdbc.JDBCAppender</span>
<span>log4j.appender.db.BufferSize</span><span>=</span><span>5</span>
<span>log4j.appender.db.driver</span><span>=</span><span>com.mysql.cj.jdbc.Driver</span>
<span>log4j.appender.db.URL</span><span>=</span><span>jdbc:mysql://192.168.52.64:3306/demo_task?useSSL=false&amp;serverTimezone=Asia/Shanghai</span>
<span>log4j.appender.db.user</span><span>=</span><span>root</span>
<span>log4j.appender.db.password</span><span>=</span><span>123456</span>
<span>log4j.appender.db.layout</span><span>=</span><span>org.apache.log4j.PatternLayout</span>
<span>log4j.appender.db.sql</span><span>=</span><span>insert into flume_log(Class,Method,createTime,LogLevel,MSG) values ('%C','%M','%d{yyyy-MM-dd HH:mm:ss}','%p','%m')</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><p>flume_log 的 SQL 语句为</p>
<div><pre><code><span>CREATE</span> <span>TABLE</span> <span>`</span>flume_log<span>`</span> <span>(</span>
  <span>`</span>id<span>`</span> <span>int</span> <span>unsigned</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span><span>,</span>
  <span>`</span>class<span>`</span> <span>varchar</span><span>(</span><span>255</span><span>)</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>method<span>`</span> <span>varchar</span><span>(</span><span>255</span><span>)</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>createTime<span>`</span> <span>datetime</span> <span>DEFAULT</span> <span>NULL</span> <span>ON</span> <span>UPDATE</span> <span>CURRENT_TIMESTAMP</span><span>,</span>
  <span>`</span>loglevel<span>`</span> <span>varchar</span><span>(</span><span>255</span><span>)</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>msg<span>`</span> <span>varchar</span><span>(</span><span>255</span><span>)</span> <span>DEFAULT</span> <span>NULL</span>
<span>)</span> <span>ENGINE</span><span>=</span><span>InnoDB</span> <span>DEFAULT</span> <span>CHARSET</span><span>=</span>utf8mb4 <span>COLLATE</span><span>=</span>utf8mb4_0900_ai_ci<span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>将 MySQL 驱动放到 {flume_path}/lib 目录下，此处放的是 mysql-connector-java-8.0.21.jar 文件。</p>
<h2 id="问题"> 问题</h2>
<h3 id="flume-ftp-source-如何获取原始文件名和目录"> flume-ftp-source 如何获取原始文件名和目录？</h3>
<p>在 GitHub 的 README.md 介绍中我们并没有找到相关的配置。但在其中看见这样一句。</p>
<div><div><br><br><div>&nbsp;</div><br><br><br></div><pre><code>2.0.10
Flume core: upgrade to Apache Flume 1.7.0
Source: add file&#39;s name and path to event header
Jsch: upgrade Jsch to 0.1.54 for new host key type (ecdsa-sha2-nistp256)
Jsch: add configurable parameter for testing: strictHostKeyChecking.
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>我们切换到 2.0.10 分支，查看下提交记录，可以找到一个这样的提交。</p>
<p><img src="/assets/bigdata/flume/ftp-add-filename.png" alt="An image" /></p>
<p>查看这个提交的代码 <a href="https://gitee.com/sqber/flume-ftp-source/commit/fd3117b46ab32789311139a0381928e63a30c583" target="_blank" rel="noopener noreferrer">这里</a>，在 327 行可以看到两行代码，也就是下面的第 9、10 行代码。</p>
<div><div><br><br><br><br><br><br><br><br><div>&nbsp;</div><div>&nbsp;</div><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code>  <span>/**
   * @param lastInfo byte[]
   * @void process last appended data to files
   */</span>
  <span>public</span> <span>void</span> <span>processMessage</span><span>(</span><span>byte</span><span>[</span><span>]</span> lastInfo<span>,</span> <span>String</span> fileName<span>,</span> <span>String</span> filePath<span>)</span> <span>{</span>
    <span>byte</span><span>[</span><span>]</span> message <span>=</span> lastInfo<span>;</span>
    <span>Event</span> event <span>=</span> <span>new</span> <span>SimpleEvent</span><span>(</span><span>)</span><span>;</span>
    <span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> <span>String</span><span>></span></span> headers <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
      headers<span>.</span><span>put</span><span>(</span><span>"fileName"</span><span>,</span> fileName<span>)</span><span>;</span>
      headers<span>.</span><span>put</span><span>(</span><span>"filePath"</span><span>,</span> filePath<span>)</span><span>;</span>
      headers<span>.</span><span>put</span><span>(</span><span>"timestamp"</span><span>,</span> <span>String</span><span>.</span><span>valueOf</span><span>(</span><span>System</span><span>.</span><span>currentTimeMillis</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
      event<span>.</span><span>setBody</span><span>(</span>message<span>)</span><span>;</span>
      event<span>.</span><span>setHeaders</span><span>(</span>headers<span>)</span><span>;</span>
      <span>try</span> <span>{</span>
        <span>getChannelProcessor</span><span>(</span><span>)</span><span>.</span><span>processEvent</span><span>(</span>event<span>)</span><span>;</span>
      <span>}</span> <span>catch</span> <span>(</span><span>ChannelException</span> e<span>)</span> <span>{</span>
        LOGGER<span>.</span><span>error</span><span>(</span><span>"ChannelException"</span><span>,</span> e<span>)</span><span>;</span>
      <span>}</span>
      sourceCounter<span>.</span><span>incrementCountSizeProc</span><span>(</span>message<span>.</span>length<span>)</span><span>;</span>
      sourceCounter<span>.</span><span>incrementEventCount</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>因此，可知代表名字和路径的关键字事 fileName 和 filePath。在 flume 的配置文件中添加上即可。</p>
<div><div><br><div>&nbsp;</div><br><br><div>&nbsp;</div><br></div><pre><code>agent.sinks.k1.type=hdfs
agent.sinks.k1.hdfs.path=hdfs://10.120.69.50:8020/flume_data/%{filePath}
agent.sinks.k1.hdfs.fileType=DataStream
agent.sinks.k1.hdfs.writeFormat=Text
agent.sinks.k1.hdfs.filePrefix=%{fileName}
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>]]></content:encoded>
      <enclosure url="https://shenqiangbin.github.io/assets/bigdata/flume/ftp-add-filename.png" type="image/png"/>
    </item>
    <item>
      <title>flume 安装</title>
      <link>https://shenqiangbin.github.io/tech/bigdata/flume/install/</link>
      <guid>https://shenqiangbin.github.io/tech/bigdata/flume/install/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">flume 安装</source>
      <category>数据采集</category>
      <pubDate>Sun, 19 Dec 2021 14:31:22 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="linux-系统下的安装"> Linux 系统下的安装</h2>
<p>首先下载 flume 压缩包 apache-flume-1.9.0-bin.tar.gz ，大小约为 64.8 M</p>
<p>下载地址为： <a href="https://dlcdn.apache.org/flume/1.9.0/apache-flume-1.9.0-bin.tar.gz" target="_blank" rel="noopener noreferrer">https://dlcdn.apache.org/flume/1.9.0/apache-flume-1.9.0-bin.tar.gz</a></p>
<p>将文件 apache-flume-1.9.0-bin.tar.gz 上传到服务器。</p>
<p>解压文件到 /usr/local 目录</p>
<div><pre><code><span># 解压后会多一个 apache-flume-1.9.0-bin 目录</span>
<span>tar</span> -zxvf apache-flume-1.9.0-bin.tar.gz  -C /usr/local
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>创建 flume 目录软链接</p>
<div><pre><code><span># 访问 flume 目录就等同于访问 apache-flume-1.9.0-bin 目录</span>
<span>ln</span> -s /usr/local/apache-flume-1.9.0-bin/ /usr/local/flume
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>添加环境变量</p>
<div><pre><code><span>## 复制以下命令，执行即可</span>
<span>echo</span> <span>""</span> <span>>></span>  /etc/profile.d/flume-my.sh
<span>sed</span> -i <span>'$a export FLUME_HOME=/usr/local/flume'</span> /etc/profile.d/flume-my.sh
<span>sed</span> -i <span>'$a export PATH=$PATH:$FLUME_HOME/bin'</span> /etc/profile.d/flume-my.sh
<span>source</span> /etc/profile
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>验证环境变量</p>
<div><pre><code><span>[</span>root@113localhost bin<span>]</span><span># echo $PATH</span>
/usr/local/sbin:/root/bin:/usr/local/flume/bin:/usr/local/java/bin:/usr/local/hadoop/bin:/usr/local/hadoop/sbin

<span># 输出结果中可以看到 /usr/local/flume/bin 则说明环境变量添加成功了</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>flume 介绍</title>
      <link>https://shenqiangbin.github.io/tech/bigdata/flume/intro/</link>
      <guid>https://shenqiangbin.github.io/tech/bigdata/flume/intro/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">flume 介绍</source>
      <category>数据采集</category>
      <pubDate>Sun, 19 Dec 2021 14:31:22 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>Flume 是一个分布式日志采集工具，在大数据项目中，一般位于【数据采集层】。</p>
<p>数据采集常用的软件还有：dataX、kettle、Logstash、Scribe、sqoop</p>
<h2 id="应用场景"> 应用场景</h2>
<p>使用 Flume，你能够：</p>
<ul>
<li>采集其他系统产生的日志文件保存到自己的系统中</li>
<li>采集其他系统产生的日志信息保存到 Kafka 中</li>
<li>采集 FTP 中的文件保存到自己的系统中</li>
<li>采集 MySQL 数据库中的数据保存到自己的系统中</li>
</ul>
<p>如果你有以上的需求，则可以使用 Flume。</p>
<h2 id="参照"> 参照</h2>
<h3 id="官方站点"> 官方站点</h3>
<p><a href="http://flume.apache.org" target="_blank" rel="noopener noreferrer">http://flume.apache.org</a></p>
<h3 id="其他"> 其他</h3>
<p><a href="https://blog.csdn.net/xxs120/article/details/79925393" target="_blank" rel="noopener noreferrer">监控tomcat日志——flume+kafka</a></p>
<p><a href="https://blog.csdn.net/qq_40015759/article/details/82429117" target="_blank" rel="noopener noreferrer">使用flume对FTP服务器进行文件的获取解析入库mysql数据库</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>数据采集</title>
      <link>https://shenqiangbin.github.io/tech/bigdata/flume/</link>
      <guid>https://shenqiangbin.github.io/tech/bigdata/flume/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据采集</source>
      <pubDate>Sun, 19 Dec 2021 14:31:22 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据采集"> 数据采集</h2>
]]></content:encoded>
    </item>
    <item>
      <title>Git的使用</title>
      <link>https://shenqiangbin.github.io/tech/codemgr/git/</link>
      <guid>https://shenqiangbin.github.io/tech/codemgr/git/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Git的使用</source>
      <category>代码管理</category>
      <pubDate>Sun, 19 Dec 2021 14:07:33 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="git"> Git</h2>
<p>大部分的代码管理都使用 Git，还一部分使用 SVN，而使用 Git 又有一部分人喜欢使用命令，而对于记不住命令的则可以使用 <strong>可视化工具</strong>。
我个人建议平时使用 <strong>可视化工具</strong> ，但同时也要熟悉常用的 <strong>Git 命令</strong>，有时候命令比可视化工具快的多。</p>
<h2 id="可视化工具"> 可视化工具</h2>
<p>推荐 <strong>SourceTree</strong> 。它的提交历史，以及每次提交的文件修改是非常好用的。反观其他软件都没有这么好用。
SourceTree 只有 Mac 版本和 Windows 版本，没有 Linux 版本，因此在 Ubuntu 下是没有办法使用的。</p>
<p>其它可视化工具推荐 <a href="https://git-scm.com/download/gui/linux" target="_blank" rel="noopener noreferrer">https://git-scm.com/download/gui/linux</a></p>
<h2 id="配置-ssh-密钥"> 配置 SSH 密钥</h2>
<p>git 项目可以使用 2 种形式克隆下来，一种是 HTTP 协议形式，一种是 SSH 形式。</p>
<p><strong>HTTP 形式</strong>：克隆项目的时候需要输入 <strong>用户名</strong> 和 <strong>密码</strong>。<br>
<strong>SSH 形式</strong>：配置一次 SSH 密钥即可，无需使用 <strong>用户名</strong> 和 <strong>密码</strong>。</p>
<p><strong>配置SSH</strong></p>
<p>Mac系统 ：生成公钥和私钥的命令如下：</p>
<div><pre><code>$ ssh-keygen -t ed25519 -C <span>"your_email@example.com"</span>
</code></pre>
<div><span>1</span><br></div></div><p>将生成的公钥信息添加到 github 的 SSH 中，存放目录一般在 <code>~/.ssh/</code> 目录中。</p>
<p>具体操作如下：<br>
<a href="https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener noreferrer">https://docs.github.com/cn/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></p>
<h2 id="常用操作"> 常用操作</h2>
<h3 id="配置用户名和邮箱"> 配置用户名和邮箱</h3>
<p>如果使用的是 <strong>SourceTree</strong>，则在 <strong>SourceTree</strong> 中设置即可。
另外，还可以使用命令来设置。</p>
<div><pre><code><span># 设置用户名为 sqber，邮箱为 sqber@qq.com</span>
<span>git</span> config --global user.name <span>"sqber"</span>
<span>git</span> config --global user.email <span>"sqber@qq.com"</span>

<span># 查看设置是否正确</span>
<span>git</span> config -l
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h3 id="克隆项目"> 克隆项目</h3>
<div><pre><code><span>git</span> clone <span>[</span>项目地址<span>]</span>
比如： <span>git</span> clone https://github.com/shenqiangbin/shenqiangbin.github.io
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h3 id="切换分支"> 切换分支</h3>
<p>克隆项目下来后，一般都会切换到 <code>develop</code> 分支。</p>
<h3 id="查看提交记录"> 查看提交记录</h3>
<div><pre><code><span>git</span> log --oneline --graph
<span># 按 q 退出</span>
<span># --online 简化了日志信息 --graph 使日志以树结构呈现</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>输出效果如下</p>
<div><pre><code>qian:shenqiangbin adminqian$ <span>git</span> log --oneline --graph
* 69ad869 <span>(</span>HEAD -<span>></span> master, origin/master, origin/HEAD<span>)</span> 整理 ubuntu 相关问题
* 107b76f <span>add</span>
* 3ac2745 Merge branch <span>'master'</span> of github.com:shenqiangbin/shenqiangbin.github.io
*   07da5e0 Merge branch <span>'master'</span> of github.com:shenqiangbin/shenqiangbin.github.io
<span>|</span><span>\</span>  
<span>|</span> * 854fad0 添加说明
* <span>|</span> 3ad102b <span>add</span>
* <span>|</span> f5322ef <span>install</span> ubuntu system
<span>|</span>/  
* c09c477 添加 vscode 配置。
* ff6f06c feat: 添加说明
* 015bfe5 人民日报改成更容易阅读的形式
* f4d1e30 <span>add</span>
* 42cfc3a 整理直播相关内容
* 7adb7f9 <span>add</span> video
* 39e9426 Add
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="查看状态"> 查看状态</h3>
<div><pre><code><span>git</span> status
</code></pre>
<div><span>1</span><br></div></div><h3 id="拉取代码"> 拉取代码</h3>
<div><pre><code><span>git</span> pull
</code></pre>
<div><span>1</span><br></div></div><h3 id="推送代码"> 推送代码</h3>
<div><pre><code><span>git</span> push
</code></pre>
<div><span>1</span><br></div></div><h3 id="修改放入到【暂存】"> 修改放入到【暂存】</h3>
<div><pre><code><span># 将当前项目的修改都放入到【暂存】</span>
<span>git</span> <span>add</span> <span>.</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="不常用操作"> 不常用操作</h2>
<h3 id="配置远程仓库"> 配置远程仓库</h3>
<p>如果使用的 SourceTree，可以直接在 SourceTree 中修改。【仓库】-【仓库设置】。</p>
<p>下面是使用命令的修改形式。</p>
<div><pre><code><span># 一般我们配置了 SSH 之后，就可以把仓库的 http 地址修改成 ssh 地址</span>
<span># 这个和配置用户名和邮箱是一样的语法的</span>
<span>git</span> config remote.origin.url <span>"git@github.com:shenqiangbin/shenqiangbin.github.io.git"</span>

<span># 查看设置是否正确</span>
<span>git</span> config -l
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="参照"> 参照</h2>
<p><a href="https://zhuanlan.zhihu.com/p/372972441" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/372972441</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Git的暂存</title>
      <link>https://shenqiangbin.github.io/tech/codemgr/git/staging/</link>
      <guid>https://shenqiangbin.github.io/tech/codemgr/git/staging/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">Git的暂存</source>
      <category>代码管理</category>
      <pubDate>Sun, 19 Dec 2021 14:07:33 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="git的暂存"> Git的暂存</h2>
<p>Git的【暂存】功能是非常有用的一个功能，当 <strong>本地有修改，无法拉取代码，但也不想提交这些修改时</strong>，可以使用【暂存】功能，
点击 SourceTree 的【暂存】按钮，本地修改会先临时存起来，然后拉取代码后，再应用暂存，修改的代码则又回来了。</p>
]]></content:encoded>
    </item>
    <item>
      <title>数据导出-mysqldump</title>
      <link>https://shenqiangbin.github.io/tech/db/mysql/mysqldump/</link>
      <guid>https://shenqiangbin.github.io/tech/db/mysql/mysqldump/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据导出-mysqldump</source>
      <category>数据导出</category>
      <pubDate>Wed, 15 Dec 2021 02:22:54 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="按条件导出数据"> 按条件导出数据</h2>
<p>不添加 drop表语句，create表语句</p>
<p>示例：将 tpi 库下的 browselog 表中的满足  BrowseLogID&gt;38</p>
<p>导出语句为：</p>
<div><pre><code>E:\<span>></span><span>"D:\mysql-5.7.16-winx64\bin\mysqldump.exe"</span>  <span>-</span>uroot <span>-</span>p <span>--port=3308 --skip-add-drop-table --no-create-info --skip-tz-utc  tpi --tables browselog --where=" BrowseLogID>38" > E:/result.sql</span>
</code></pre>
<div><span>1</span><br></div></div><p>分段分析</p>
<div><pre><code>E:\<span>></span><span>"D:\mysql-5.7.16-winx64\bin\mysqldump.exe"</span>  
<span>-</span>uroot <span>-</span>p <span>--port=3308 </span>
<span>--skip-add-drop-table   // 不添加 drop 表语句</span>
<span>--no-create-info       // 不添加 create 表语句</span>
<span>--skip-tz-utc          // 保证 where 条件中有时间条件时，数据筛选正确</span>
tpi                   <span>// tpi 库</span>
<span>--tables browselog    // browselog 表</span>
<span>--where=" BrowseLogID>38"  // 过滤条件</span>

<span>></span> E:<span>/</span>result<span>.</span><span>sql</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>导出的 result.sql 的内容为：</p>
<div><pre><code><span>LOCK</span> <span>TABLES</span> <span>`</span>browselog<span>`</span> <span>WRITE</span><span>;</span>
<span>/*!40000 ALTER TABLE `browselog` DISABLE KEYS */</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>`</span>browselog<span>`</span> <span>VALUES</span> <span>(</span><span>39</span><span>,</span><span>'5'</span><span>,</span><span>'SA'</span><span>,</span><span>'127.0.0.1'</span><span>,</span><span>27</span><span>,</span><span>'MYPERIOD'</span><span>,</span><span>2</span><span>,</span><span>0</span><span>,</span><span>'2021-12-14 10:29:02'</span><span>,</span><span>'2021-12-14 10:29:02'</span><span>,</span><span>0</span><span>,</span><span>'job'</span><span>)</span><span>;</span>
<span>/*!40000 ALTER TABLE `browselog` ENABLE KEYS */</span><span>;</span>
<span>UNLOCK</span> <span>TABLES</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="mysqldump-couldn-t-find-table"> mysqldump： Couldn't find table: &quot;&gt;&quot;</h2>
<p>使用 Java 程序来执行 mysqldump 命令的时候，使用 &gt; 可能有问题。<br>
可能会提示 <code>mysqldump： Couldn't find table: &quot;&gt;&quot;</code><br>
使用参数 --result-file 来替换 &gt; 即可。</p>
<p>比如：</p>
<p><code>String cmd = &quot;mysqldump -uroot -p123456 --port=3306 --skip-add-drop-table --no-create-info --skip-tz-utc personMgr --tables menu --result-file=/home/sql/result.sql&quot;;</code></p>
<div><pre><code><span>String</span> cmd <span>=</span> <span>"mysqldump  -uroot -p123456 --port=3306 --skip-add-drop-table   --no-create-info --skip-tz-utc  personMgr --tables menu  --result-file=/home/sql/result.sql"</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><div><p>警告</p>
<p><strong>where 条件中不要有空格或其它字符之类的东西，否则在 Java 执行中也会报此错误，目前还不知如何解决。</strong></p>
</div>
<h2 id="mysqldump-can-t-create-write-to-file"> mysqldump: Can't create/write to file</h2>
<p>具体的错误信息为：</p>
<p>&quot;msg&quot;: &quot;mysqldump: [Warning] Using a password on the command line interface can be insecure.mysqldump: Can't create/write to file '&quot;/home/bigtable/resource/testwj_20211227_151356.sql&quot;' (OS errno 2 - No such file or directory)&quot;</p>
<p>原因：</p>
<p>这个的原因是 --result-file=&quot;/home/sql/result.sql&quot; ，即参数 result-file 的路径加了双引号的缘故。<br>
因此去掉双引号即可。</p>
<p>但奇怪的是，如果不是写在程序中，加引号也是可以的，放在程序中，不知为何就报错了。</p>
<h2 id="参照"> 参照</h2>
<p><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>MySQL</title>
      <link>https://shenqiangbin.github.io/tech/db/mysql/</link>
      <guid>https://shenqiangbin.github.io/tech/db/mysql/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">MySQL</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="mysql"> MySQL</h2>
<p>MySQL 相关内容</p>
<ul>
<li>配置 MySQL 使用内存，保证 MySQL 的运行速度</li>
<li>主从互备</li>
<li>LogStash 将 MySQL 数据导入到 Elasticsearch</li>
</ul>

]]></content:encoded>
    </item>
    <item>
      <title>数据库技术</title>
      <link>https://shenqiangbin.github.io/tech/db/</link>
      <guid>https://shenqiangbin.github.io/tech/db/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据库技术</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据库技术"> 数据库技术</h2>
<p>数据库技术 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>IDEA</title>
      <link>https://shenqiangbin.github.io/tech/devtool/idea/</link>
      <guid>https://shenqiangbin.github.io/tech/devtool/idea/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">IDEA</source>
      <category>开发工具</category>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="idea-下载"> IDEA 下载</h2>
<p>官方下载地址：<a href="https://www.jetbrains.com/zh-cn/idea/download/other.html" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/zh-cn/idea/download/other.html</a></p>
<h2 id="idea-激活"> IDEA 激活</h2>
<p>ide-eval-resetter-2.1.6.zip 文件下载<br>
<a href="/file/ide-eval-resetter-2.1.6.zip">下载</a><br>
下载后，拖动到 IDEA 中。 在菜单 Help 中则会出现一个 Eval Reset。就可以一直试用。</p>
<p>参照：<br>
<a href="https://www.jb51.net/article/198343.htm" target="_blank" rel="noopener noreferrer">https://www.jb51.net/article/198343.htm</a><br>
<a href="https://www.yuque.com/docs/share/23fc9e41-ad96-4343-aced-a35419117d89?#" target="_blank" rel="noopener noreferrer">https://www.yuque.com/docs/share/23fc9e41-ad96-4343-aced-a35419117d89?#</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>vscode</title>
      <link>https://shenqiangbin.github.io/tech/devtool/vscode/</link>
      <guid>https://shenqiangbin.github.io/tech/devtool/vscode/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">vscode</source>
      <category>开发工具</category>
      <pubDate>Sun, 19 Dec 2021 14:56:37 GMT</pubDate>
      <content:encoded><![CDATA[<p>vscode，即 Visual Studio Code，是一款很好用的编辑器。</p>
<h2 id="配置"> 配置</h2>
<h3 id="左侧目录树缩进不明显"> 左侧目录树缩进不明显</h3>
<p><strong>1、左侧目录树缩进不明显，配置其缩进明显。</strong></p>
<p>打开 <code>settings</code>，输入 <code>workbench &gt; tree</code>，然后配置如下图两项内容即可。</p>
<p><img src="/assets/devtool/vscode-tree-set.png" alt="An image" /></p>
]]></content:encoded>
      <enclosure url="https://shenqiangbin.github.io/assets/devtool/vscode-tree-set.png" type="image/png"/>
    </item>
    <item>
      <title>CSS</title>
      <link>https://shenqiangbin.github.io/tech/front/css/</link>
      <guid>https://shenqiangbin.github.io/tech/front/css/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">CSS</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="css"> CSS</h2>
<p>CSS 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>前端技术</title>
      <link>https://shenqiangbin.github.io/tech/front/</link>
      <guid>https://shenqiangbin.github.io/tech/front/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">前端技术</source>
      <pubDate>Mon, 13 Dec 2021 15:33:12 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="前端技术"> 前端技术</h2>
<p>前端技术 相关内容</p>
<ul>
<li><a href="./log.html">日志</a></li>
<li><a href="./simpleCode.html">简化代码</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>数据新增</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/addData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/addData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据新增</source>
      <category>CURD</category>
      <pubDate>Mon, 17 Jan 2022 09:34:31 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据新增"> 数据新增</h2>
<p>数据新增，即通常所说的“增删改查”中的“增”。</p>
<p>需要注意有：</p>
<ul>
<li>参数校验</li>
<li>参数化 SQL 避免 SQL 注入</li>
</ul>
<h2 id="普通的新增"> 普通的新增</h2>
<h3 id="控制器层"> 控制器层</h3>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"add"</span><span>)</span>
<span>public</span> <span>R</span> <span>add</span><span>(</span><span>@Valid</span> <span>ResourceAddRequest</span> request<span>)</span> <span>{</span>
    <span>Resource</span> model <span>=</span> <span>MyBeanUtil</span><span>.</span><span>trans</span><span>(</span>request<span>,</span> <span>Resource</span><span>.</span><span>class</span><span>)</span><span>;</span>
    <span>long</span> id <span>=</span> resourceService<span>.</span><span>add</span><span>(</span>model<span>)</span><span>;</span>
    log<span>.</span><span>error</span><span>(</span><span>"the id is :"</span><span>,</span> id<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>id<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>接口接收前台传入的参数对象 <code>ResourceAddRequest</code>，通过 <code>javax.validation</code>来进行校验。
然后通过 <code>MyBeanUtil</code>将传入的对象转换成数据库对象<code>Resource</code>。<br>
新增之后，返回新增数据的 id 信息。</p>
<p><code>ResourceAddRequest</code> 内容如下：</p>
<div><pre><code><span>import</span> <span>lombok<span>.</span></span><span>Data</span><span>;</span>
<span>import</span> <span>javax<span>.</span>validation<span>.</span>constraints<span>.</span></span><span>NotBlank</span><span>;</span>
<span>import</span> <span>javax<span>.</span>validation<span>.</span>constraints<span>.</span></span><span>NotNull</span><span>;</span>
<span>import</span> <span>javax<span>.</span>validation<span>.</span>constraints<span>.</span></span><span>Size</span><span>;</span>

<span>@Data</span>
<span>public</span> <span>class</span> <span>ResourceAddRequest</span> <span>{</span>

    <span>@NotBlank</span><span>(</span>message <span>=</span> <span>"名称不能为空"</span><span>)</span>
    <span>@Size</span><span>(</span>min <span>=</span> <span>0</span><span>,</span> max <span>=</span> <span>150</span><span>,</span> message <span>=</span> <span>"最大长度不超过150"</span><span>)</span>
    <span>private</span> <span>String</span> name<span>;</span>

    <span>//@NotBlank(message = "路由不能为空")</span>
    <span>@Size</span><span>(</span>min <span>=</span> <span>0</span><span>,</span> max <span>=</span> <span>150</span><span>,</span> message <span>=</span> <span>"最大长度不超过150"</span><span>)</span>
    <span>private</span> <span>String</span> requestUrl<span>;</span>

    <span>@NotNull</span><span>(</span>message <span>=</span> <span>"分类不能为空"</span><span>)</span>
    <span>private</span> <span>Integer</span> category<span>;</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h3 id="服务层"> 服务层</h3>
<p>服务层 <code>resourceService</code> 内容如下：</p>
<div><pre><code><span>@Service</span>
<span>public</span> <span>class</span> <span>ResourceService</span> <span>{</span>

    <span>private</span> <span>ResourceRepository</span> resourceRepository<span>;</span>

    <span>public</span> <span>ResourceService</span><span>(</span><span>ResourceRepository</span> resourceRepository<span>)</span> <span>{</span>
        <span>this</span><span>.</span>resourceRepository <span>=</span> resourceRepository<span>;</span>
    <span>}</span>

    <span>public</span> <span>long</span> <span>add</span><span>(</span><span>Resource</span> model<span>)</span> <span>{</span>
        model<span>.</span><span>setCreateTime</span><span>(</span><span>new</span> <span>Date</span><span>(</span><span>)</span><span>)</span><span>;</span>
        model<span>.</span><span>setCreateUser</span><span>(</span><span>"createUser"</span><span>)</span><span>;</span>
        model<span>.</span><span>setStatus</span><span>(</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>return</span> resourceRepository<span>.</span><span>add</span><span>(</span>model<span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>创建人 createUser 这里是写死的，结合上登录之后，这里就可以修改了。</p>
<h3 id="数据库访问层"> 数据库访问层</h3>
<p>数据库访问层的代码如下：</p>
<div><pre><code><span>public</span> <span>long</span> <span>add</span><span>(</span><span>Resource</span> model<span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>String</span><span>.</span><span>format</span><span>(</span>
            <span>"insert resource (`name`, `category`, `requestUrl`, `apis`, "</span> <span>+</span>
                    <span>"`status`, `createUser`, `createTime`) values(%s)"</span><span>,</span>
            <span>MyJdbc</span><span>.</span><span>args</span><span>(</span><span>7</span><span>)</span><span>)</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span>
            model<span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getCategory</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getRequestUrl</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getApis</span><span>(</span><span>)</span><span>,</span>
            model<span>.</span><span>getStatus</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getCreateUser</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getCreateTime</span><span>(</span><span>)</span><span>}</span><span>;</span>
    <span>return</span> myJdbc<span>.</span><span>add</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>数据库访问层使用了自己封装的 MyJdbc，其中在拼接 sql 语句的时候，用到了 <code>MyJdbc.args</code> 静态方法，此方法就是构建 N 个由 ？构成的字符串。</p>
<h2 id="示例代码"> 示例代码</h2>
<p><a href="https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>数据库访问</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/database/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/database/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据库访问</source>
      <category>框架</category>
      <pubDate>Tue, 11 Jan 2022 12:33:06 GMT</pubDate>
      <content:encoded><![CDATA[<p>数据库访问框架用过 mybatis，也用过自己写的数据库访问框架，也研究过 jdbcTemplate。<br>
最终选择的是在 jdbcTemplate 的基础上再封装了一层。</p>
<p>我不喜欢 mybatis 在 xml 中写语句，感觉繁琐，拼接 SQL 语句的灵活性也差，数据的批量插入还是使用类似自己写的框架的形式。</p>
<p>自己写的框架和 jdbcTemplate 其实也差不多，当然没有人家写的全面。</p>
<p>最终选择 <code>MyJdbc</code>（自己写的一个接口，底部还是 jdbcTemplate）<br>
<code>MyJdbc</code> 支持 <code>MySQL</code> 和 <code>PostgreSQL</code></p>
<p>代码见 <code>sqber-demo</code> 下的 <code>spring-db-demo</code> 模块下的 <code>MyJdbcController</code> 控制器。</p>
<div><p>注意</p>
<p>参数都要使用参数化形式传递，而不是直接拼接到 SQL 中。</p>
</div>
<div><pre><code><span>@GetMapping</span><span>(</span><span>"/queryAll"</span><span>)</span>
<span>public</span> <span>R</span> <span>queryAll</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select * from user where status = ?"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>}</span><span>;</span>
<span>//        List&lt;User> users = myJdbc.query(User.class, sql, args);</span>
    <span>List</span><span><span>&lt;</span><span>Map</span><span>&lt;</span><span>String</span><span>,</span> <span>Object</span><span>></span><span>></span></span> users <span>=</span> myJdbc<span>.</span><span>queryForMap</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>users<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"/pageQuery"</span><span>)</span>
<span>public</span> <span>R</span> <span>testPageQuery</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select * from user where status = ? "</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>}</span><span>;</span>
    <span>PageModel</span><span><span>&lt;</span><span>User</span><span>></span></span> pageModel <span>=</span> myJdbc<span>.</span><span>pageQuery</span><span>(</span><span>User</span><span>.</span><span>class</span><span>,</span> sql<span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>pageModel<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"/pageQueryMap"</span><span>)</span>
<span>public</span> <span>R</span> <span>pageQueryMap</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select * from user where status = ? "</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>}</span><span>;</span>
    <span>PageModel</span> pageModel <span>=</span> myJdbc<span>.</span><span>pageQueryForMap</span><span>(</span>sql<span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>pageModel<span>)</span><span>;</span>
<span>}</span>

<span>// test postgresql</span>
<span>@GetMapping</span><span>(</span><span>"/pageQuery2"</span><span>)</span>
<span>public</span> <span>R</span> <span>testPageQuery2</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select * from person"</span><span>;</span>
    <span>PageModel</span> pageModel <span>=</span> dataMyJdbc<span>.</span><span>pageQuery</span><span>(</span><span>Person</span><span>.</span><span>class</span><span>,</span> sql<span>,</span> <span>1</span><span>,</span> <span>2</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>pageModel<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"getById"</span><span>)</span>
<span>public</span> <span>R</span> <span>getById</span><span>(</span><span>int</span> id<span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select * from user where status = ? and id = ?"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>,</span> id<span>}</span><span>;</span>
    <span>List</span><span><span>&lt;</span><span>User</span><span>></span></span> users <span>=</span> myJdbc<span>.</span><span>query</span><span>(</span><span>User</span><span>.</span><span>class</span><span>,</span> sql<span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>users<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"count"</span><span>)</span>
<span>public</span> <span>R</span> <span>count</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"select count(*) from user where status = ?"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>RecordStatus</span><span>.</span>EXISTS<span>.</span><span>getVal</span><span>(</span><span>)</span><span>}</span><span>;</span>
    <span>Long</span> count <span>=</span> myJdbc<span>.</span><span>count</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>count<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"add"</span><span>)</span>
<span>public</span> <span>R</span> <span>addmy</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"insert into user (userCode,userName) values(?,?)"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>"Rob"</span><span>,</span> <span>"肉搏"</span><span>}</span><span>;</span>
    <span>long</span> id <span>=</span> myJdbc<span>.</span><span>add</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>id<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"save"</span><span>)</span>
<span>public</span> <span>R</span> <span>save</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"update user set username = ? where id = ?"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>"管理员123"</span><span>,</span> <span>1</span><span>}</span><span>;</span>
    <span>int</span> affectedNum <span>=</span> myJdbc<span>.</span><span>update</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>affectedNum<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"exe"</span><span>)</span>
<span>public</span> <span>R</span> <span>exe</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"CREATE TABLE mytest1(\n"</span> <span>+</span>
            <span>"  `id` int(11) NOT NULL AUTO_INCREMENT,\n"</span> <span>+</span>
            <span>"  `userCode` varchar(64) DEFAULT '' COMMENT '账号',\n"</span> <span>+</span>
            <span>"  `userName` varchar(64) DEFAULT '' COMMENT '显示名称',\n"</span> <span>+</span>
            <span>"  `password` varchar(64) DEFAULT '' COMMENT '密码',\n"</span> <span>+</span>
            <span>"  `status` int(11) DEFAULT '1' COMMENT '0-记录已删除；1-未删除',\n"</span> <span>+</span>
            <span>"  `createUser` varchar(64) DEFAULT NULL,\n"</span> <span>+</span>
            <span>"  `createTime` datetime DEFAULT NULL,\n"</span> <span>+</span>
            <span>"  `modifyUser` varchar(64) DEFAULT NULL,\n"</span> <span>+</span>
            <span>"  `modifyTime` datetime DEFAULT NULL,\n"</span> <span>+</span>
            <span>"  PRIMARY KEY (`id`)\n"</span> <span>+</span>
            <span>") ENGINE=InnoDB;"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>"mytest"</span><span>}</span><span>;</span>

    myJdbc<span>.</span><span>execute</span><span>(</span>sql<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"batchExe"</span><span>)</span>
<span>public</span> <span>R</span> <span>batchExe</span><span>(</span><span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"insert into user (userCode,userName) values(?,?)"</span><span>;</span>

    <span>List</span><span>&lt;</span><span>Object</span><span>[</span><span>]</span><span>></span> list <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom1"</span><span>,</span> <span>"tom1"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom2"</span><span>,</span> <span>"tom2"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom3"</span><span>,</span> <span>"tom3"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom4"</span><span>,</span> <span>"tom4"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom5"</span><span>,</span> <span>"tom5"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom6"</span><span>,</span> <span>"tom6"</span><span>}</span><span>)</span><span>;</span>
    list<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>"tom7"</span><span>,</span> <span>"tom7"</span><span>}</span><span>)</span><span>;</span>

    <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> result <span>=</span> myJdbc<span>.</span><span>batch</span><span>(</span>sql<span>,</span> list<span>,</span> <span>2</span><span>)</span><span>;</span>
    <span>Long</span> count <span>=</span> <span>MyJdbc</span><span>.</span><span>count</span><span>(</span>result<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>count<span>)</span><span>;</span>
<span>}</span>

<span>@GetMapping</span><span>(</span><span>"addGroup"</span><span>)</span>
<span>public</span> <span>R</span> <span>addGroup</span><span>(</span><span>)</span> <span>{</span>
    transactionTemplate<span>.</span><span>execute</span><span>(</span><span>new</span> <span>TransactionCallback</span><span><span>&lt;</span><span>Object</span><span>></span></span><span>(</span><span>)</span> <span>{</span>
        <span>@Override</span>
        <span>public</span> <span>Object</span> <span>doInTransaction</span><span>(</span><span>TransactionStatus</span> status<span>)</span> <span>{</span>
            <span>String</span> sql <span>=</span> <span>"insert into user (userCode,userName) values(?,?)"</span><span>;</span>
            <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span><span>"Rob"</span><span>,</span> <span>"肉搏"</span><span>}</span><span>;</span>
            <span>long</span> id <span>=</span> myJdbc<span>.</span><span>add</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>

            <span>String</span> sql2 <span>=</span> <span>"insert into user (userCode1,userName) values(?,?)"</span><span>;</span>
            <span>Object</span><span>[</span><span>]</span> args2 <span>=</span> <span>{</span><span>"Rob"</span><span>,</span> <span>"肉搏"</span><span>}</span><span>;</span>
            id <span>=</span> myJdbc<span>.</span><span>add</span><span>(</span>sql2<span>,</span> args2<span>)</span><span>;</span>

<span>//                status.setRollbackOnly();</span>
            <span>return</span> <span>null</span><span>;</span>
        <span>}</span>
    <span>}</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>数据导出</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/exportData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/exportData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据导出</source>
      <category>数据导出</category>
      <pubDate>Thu, 23 Dec 2021 15:25:29 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="按条件导出数据"> 按条件导出数据</h2>
<p>不添加 drop表语句，create表语句</p>
<p>示例：将 tpi 库下的 browselog 表中的满足  BrowseLogID&gt;38</p>
<p>导出语句为：</p>
<div><pre><code>E:\<span>></span><span>"D:\mysql-5.7.16-winx64\bin\mysqldump.exe"</span>  <span>-</span>uroot <span>-</span>p <span>--port=3308 --skip-add-drop-table --no-create-info --skip-tz-utc  tpi --tables browselog --where=" BrowseLogID>38" > E:/result.sql</span>
</code></pre>
<div><span>1</span><br></div></div><p>分段分析</p>
<div><pre><code>E:\<span>></span><span>"D:\mysql-5.7.16-winx64\bin\mysqldump.exe"</span>  
<span>-</span>uroot <span>-</span>p <span>--port=3308 </span>
<span>--skip-add-drop-table   // 不添加 drop 表语句</span>
<span>--no-create-info       // 不添加 create 表语句</span>
<span>--skip-tz-utc          // 保证 where 条件中有时间条件时，数据筛选正确</span>
tpi                   <span>// tpi 库</span>
<span>--tables browselog    // browselog 表</span>
<span>--where=" BrowseLogID>38"  // 过滤条件</span>

<span>></span> E:<span>/</span>result<span>.</span><span>sql</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>导出的 result.sql 的内容为：</p>
<div><pre><code><span>LOCK</span> <span>TABLES</span> <span>`</span>browselog<span>`</span> <span>WRITE</span><span>;</span>
<span>/*!40000 ALTER TABLE `browselog` DISABLE KEYS */</span><span>;</span>
<span>INSERT</span> <span>INTO</span> <span>`</span>browselog<span>`</span> <span>VALUES</span> <span>(</span><span>39</span><span>,</span><span>'5'</span><span>,</span><span>'SA'</span><span>,</span><span>'127.0.0.1'</span><span>,</span><span>27</span><span>,</span><span>'MYPERIOD'</span><span>,</span><span>2</span><span>,</span><span>0</span><span>,</span><span>'2021-12-14 10:29:02'</span><span>,</span><span>'2021-12-14 10:29:02'</span><span>,</span><span>0</span><span>,</span><span>'job'</span><span>)</span><span>;</span>
<span>/*!40000 ALTER TABLE `browselog` ENABLE KEYS */</span><span>;</span>
<span>UNLOCK</span> <span>TABLES</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="参照"> 参照</h2>
<p><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html" target="_blank" rel="noopener noreferrer">https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>数据导入</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/importData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/importData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据导入</source>
      <category>数据导入</category>
      <pubDate>Fri, 07 Jan 2022 07:38:33 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="概述"> 概述</h2>
<p>数据导入是系统中常见的一个功能，一般情况下通过上传数据文件向系统中添加批量数据。而上传的数据文件一般是 EXCEL 文件。
比如：通过 EXCEL 文件批量添加用户信息。因此系统中会用到 EXCEL 的解析类。</p>
<p>EXCEL 文件的格式一般有 .xls,.xlsx,.csv 三种格式。因此又分为 <strong>普通EXCEL的解析</strong> 和 <strong>CSV文件的解析</strong>。</p>
<p>EXCEL 文件包含的数据量有多有少，当数据量非常多的情况下建议使用 <strong>批量导入</strong>，而不是 <strong>一条一条导入</strong>。<br>
另外数据量大的情况下，为了防止浏览器无响应，通常建议页面设置有 <strong>导入进度显示</strong>。</p>
<h2 id="开发注意点"> 开发注意点</h2>
<ul>
<li>明确支持的 EXCEL 格式，可以只支持 .xls 和 .xlsx ，也可以只支持 csv 导入，为了简单可以支持一种。</li>
<li>明确上传的大小限制。</li>
</ul>
<h2 id="excel导入"> EXCEL导入</h2>
<p>这里将常用的 EXCEL 处理逻辑抽象成了一个 <code>CommonExcel</code> 类。<br>
此类接收 <code>文件路径</code>、<code>表头</code> 两个参数，然后通过 <code>handle</code> 方法返回处理结果。<br>
下面是两个使用示例。</p>
<p><a href="https://github.com/shenqiangbin/sqber-demo/blob/master/common-tool/src/main/java/com/sqber/commonTool/excel/CommonExcel.java" target="_blank" rel="noopener noreferrer">CommonExcel 源码</a></p>
<div><pre><code><span>@GetMapping</span><span>(</span><span>"/testFile"</span><span>)</span>
<span>public</span> <span>R</span> <span>testFile</span><span>(</span><span>)</span> <span>throws</span> <span>IOException</span><span>,</span> <span>IllegalAccessException</span><span>,</span> <span>InstantiationException</span> <span>{</span>

    <span>String</span> filePath <span>=</span> <span>"D:\\code\\TPI\\大数据产品\\贵州大数据项目\\说明\\示例文件\\点排名地图测试数据.xlsx"</span><span>;</span>
    <span>CommonExcel</span> commonExcel <span>=</span> <span>CommonExcel</span><span>.</span><span>create</span><span>(</span>filePath<span>,</span> <span>new</span> <span>String</span><span>[</span><span>]</span><span>{</span><span>"地区"</span><span>,</span> <span>"销售额"</span><span>,</span> <span>"经度"</span><span>,</span> <span>"维度"</span><span>}</span><span>)</span><span>;</span>
    <span>SaveResult</span> saveResult <span>=</span> commonExcel<span>.</span><span>handle</span><span>(</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span><span>!</span>saveResult<span>.</span><span>isSuccess</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        <span>return</span> <span>R</span><span>.</span><span>warn</span><span>(</span>saveResult<span>.</span><span>getMsg</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>

    <span>List</span><span><span>&lt;</span><span>List</span><span>&lt;</span><span>String</span><span>></span><span>></span></span> data <span>=</span> saveResult<span>.</span><span>getData</span><span>(</span><span>)</span><span>;</span>
    <span>List</span><span><span>&lt;</span><span>SaleModel</span><span>></span></span> list <span>=</span> <span>ListUtil</span><span>.</span><span>toList</span><span>(</span>data<span>,</span> <span>SaleModel</span><span>.</span><span>class</span><span>)</span><span>;</span>

    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>list<span>)</span><span>;</span>

<span>}</span>


<span>@GetMapping</span><span>(</span><span>"/testFile2"</span><span>)</span>
<span>public</span> <span>R</span> <span>testFile2</span><span>(</span><span>)</span> <span>throws</span> <span>IOException</span><span>,</span> <span>IllegalAccessException</span><span>,</span> <span>InstantiationException</span> <span>{</span>

    <span>List</span><span><span>&lt;</span><span>List</span><span>&lt;</span><span>String</span><span>></span><span>></span></span> data2 <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>

    <span>CommonExcel</span> commonExcel <span>=</span> <span>createCommonExcel2</span><span>(</span>data2<span>)</span><span>;</span>
    <span>SaveResult</span> saveResult <span>=</span> commonExcel<span>.</span><span>handle</span><span>(</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span><span>!</span>saveResult<span>.</span><span>isSuccess</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        <span>return</span> <span>R</span><span>.</span><span>error</span><span>(</span>saveResult<span>.</span><span>getMsg</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>

    <span>List</span><span><span>&lt;</span><span>List</span><span>&lt;</span><span>String</span><span>></span><span>></span></span> data <span>=</span> saveResult<span>.</span><span>getData</span><span>(</span><span>)</span><span>;</span>
    <span>boolean</span> same <span>=</span> data<span>.</span><span>equals</span><span>(</span>data2<span>)</span><span>;</span>
    <span>List</span><span><span>&lt;</span><span>SaleModel</span><span>></span></span> list <span>=</span> <span>ListUtil</span><span>.</span><span>toList</span><span>(</span>data2<span>,</span> <span>SaleModel</span><span>.</span><span>class</span><span>)</span><span>;</span>

    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>list<span>)</span><span>;</span>

<span>}</span>

<span>private</span> <span>CommonExcel</span> <span>createCommonExcel2</span><span>(</span><span>List</span><span><span>&lt;</span><span>List</span><span>&lt;</span><span>String</span><span>></span><span>></span></span> data<span>)</span> <span>{</span>
    <span>return</span> <span>CommonExcel</span><span>.</span><span>create</span><span>(</span>
            <span>"D:\\code\\TPI\\大数据产品\\贵州大数据项目\\说明\\示例文件\\点排名地图测试数据.xlsx"</span><span>,</span>
            <span>new</span> <span>String</span><span>[</span><span>]</span><span>{</span><span>"地区"</span><span>,</span> <span>"销售额"</span><span>,</span> <span>"经度"</span><span>,</span> <span>"维度"</span><span>}</span><span>,</span>
            <span>(</span>rowVal<span>,</span> rowIndex<span>,</span> totalRow<span>)</span> <span>-></span> <span>{</span>
                data<span>.</span><span>add</span><span>(</span>rowVal<span>)</span><span>;</span>
                <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"当前进度："</span> <span>+</span> rowIndex <span>+</span> <span>"/"</span> <span>+</span> totalRow<span>)</span><span>;</span>
                <span>return</span> <span>true</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>登录</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/login/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/login/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">登录</source>
      <category>框架</category>
      <pubDate>Thu, 13 Jan 2022 15:15:11 GMT</pubDate>
      <content:encoded><![CDATA[<p>登录有这样几种情况：</p>
<ul>
<li>有单体应用中的登录</li>
<li>有和其它系统集成的单点登录</li>
<li>有前后端分离的登录和非前后端分离的登录。</li>
<li>有集成 QQ，微信 等的第三方登录</li>
</ul>
<p>从技术层面讲：</p>
<p>在 spring boot 中，一般是使用 spring security 或者 shiro 来实现。</p>
]]></content:encoded>
    </item>
    <item>
      <title>数据查询</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/queryData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/queryData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据查询</source>
      <category>CURD</category>
      <pubDate>Sat, 15 Jan 2022 12:06:27 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="概述"> 概述</h2>
<p>大家都说软件无非就是 CURD，这里说一下这是【查询】。</p>
<p>查询有：</p>
<ul>
<li>分页查询</li>
<li>查询全部</li>
<li>指定顺序查询</li>
</ul>
<h2 id="分页查询"> 分页查询</h2>
<p>假如我们有一个 资源表，表名为 <code>Resource</code>。字段信息如下：</p>
<div><pre><code><span>CREATE</span> <span>TABLE</span> <span>`</span>resource<span>`</span> <span>(</span>
  <span>`</span>id<span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>NOT</span> <span>NULL</span> <span>AUTO_INCREMENT</span><span>,</span>
  <span>`</span>name<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>DEFAULT</span> <span>''</span> <span>COMMENT</span> <span>'名称'</span><span>,</span>
  <span>`</span>category<span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>DEFAULT</span> <span>'100'</span> <span>COMMENT</span> <span>'资源类型：100-导航资源；101-按钮资源'</span><span>,</span>
  <span>`</span>requestUrl<span>`</span> <span>varchar</span><span>(</span><span>20</span><span>)</span> <span>DEFAULT</span> <span>''</span> <span>COMMENT</span> <span>'导航url'</span><span>,</span>
  <span>`</span>apis<span>`</span> <span>varchar</span><span>(</span><span>2000</span><span>)</span> <span>DEFAULT</span> <span>''</span> <span>COMMENT</span> <span>'和资源想关的接口'</span><span>,</span>
  <span>`</span><span>status</span><span>`</span> <span>int</span><span>(</span><span>11</span><span>)</span> <span>DEFAULT</span> <span>'1'</span> <span>COMMENT</span> <span>'0-记录已删除；1-未删除'</span><span>,</span>
  <span>`</span>createUser<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>createTime<span>`</span> <span>datetime</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>modifyUser<span>`</span> <span>varchar</span><span>(</span><span>64</span><span>)</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>`</span>modifyTime<span>`</span> <span>datetime</span> <span>DEFAULT</span> <span>NULL</span><span>,</span>
  <span>PRIMARY</span> <span>KEY</span> <span>(</span><span>`</span>id<span>`</span><span>)</span>
<span>)</span> <span>ENGINE</span><span>=</span><span>InnoDB</span> <span>DEFAULT</span> <span>CHARSET</span><span>=</span>utf8mb4 <span>COLLATE</span><span>=</span>utf8mb4_0900_ai_ci <span>COMMENT</span><span>=</span><span>'资源表'</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>针对资源表，需要做一个分页查询功能。能够根据【名称】和【资源类型】进行查询。</p>
<h3 id="分页查询逻辑图"> 分页查询逻辑图</h3>
<p>分页查询无非就这样一个流程。</p>
<p><img src='/assets/tech/page-query-flow.png'></img>
图片来源：<a href="https://docs.qq.com/flowchart/DVnFuQVBjREhtTVZT" target="_blank" rel="noopener noreferrer">https://docs.qq.com/flowchart/DVnFuQVBjREhtTVZT</a></p>
<p>我们分析一下这个流程，从中提取一些共性的东西。</p>
<p>分页请求对象包含了【当前页码】、【每页数量】、【排序】、【名称】、【资源类型】等信息。
其中【名称】、【资源类型】是此次资源表分页查询所特有的参数。而不管是针对哪个数据表进行分页查询功能，【当前页码】、【每页数量】、【排序】都是必备的参数，因此我们可以抽出一个基类。我们将此类定义为 <code>PageQuery</code>。</p>
<p>分页结果对象包含了【当前页码】、【每页数量】、【总页数】、【总数量】、【结果对象列表】。<br>
所有的分页查询的结果都是如此，只是结果对象列表的类型不同而已。因此我们可以抽出一个分页结果对象。我们将此类定义为<code>PageModel</code>。</p>
<p><code>PageModel</code> 的伪代码如下：</p>
<div><pre><code><span>public</span> <span>class</span> <span>PageModel</span><span><span>&lt;</span><span>T</span><span>></span></span> <span>{</span>
    <span>public</span> <span>List</span><span><span>&lt;</span><span>T</span><span>></span></span> list<span>;</span>
    <span>public</span> <span>int</span> pageIndex<span>;</span>
    <span>public</span> <span>int</span> pageSize<span>;</span>
    <span>public</span> <span>long</span> totalPage<span>;</span>
    <span>public</span> <span>long</span> totalCount<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>从实体对象来看，整个流程有【请求对象实体】【返回结果实体】和【数据库对应实体】。<br>
分页请求对象就是我们的【请求对象实体】，继承自 <code>PageQuery</code>。<br>
【返回结果实体】就是 <code>PageModel</code> 中对应的列表类型。
【数据库对应实体】一般是数据库操作类查询出来的对应数据库字段信息的实体。</p>
<p>这三种实体一般会建立专门的目录进行存储。</p>
<p>在数据库对象转化成返回结果对象的过程中，只是相同属性的赋值，因此这里也会抽离出一个 <code>MyBeanUtil</code> 对象。</p>
<p>而在属性值转对应描述的过程中，有的属性就是一个枚举值，这可能就需要用到一个公用的枚举方法。<br>
有的属性是另一个表的 id 信息，这可能就需要根据 id 集合查询数据库后，再获取对应的描述。<br>
当然，<code>数据库查询时，通过 join 直接连表查询也可以解决，如果数据库层面直接转化了，这里也就不需要处理了。</code></p>
<h3 id="分页查询逻辑图升级版"> 分页查询逻辑图升级版</h3>
<p>包含公共内容的分页查询逻辑图：</p>
<p><img src='/assets/tech/page-query-flow-upgrade.png'></img></p>
<p>示例代码见：<br>
<a href="https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>软件功能</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">软件功能</source>
      <pubDate>Tue, 21 Dec 2021 03:45:24 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="软件功能"> 软件功能</h2>
<p>这里指的是从软件功能角度来记录一些内容。<br>
比如，登录功能，单点登录还是普通登录，数据导出功能，一个表业务逻辑的 CURD（增删改查）等。</p>
<h1 id="分页查询"> 分页查询</h1>
<p>分页查询的示例：</p>
<h2 id="控制器"> 控制器</h2>
<div><pre><code>    <span>@PostMapping</span><span>(</span><span>"/getRoleManagerlist"</span><span>)</span>
    <span>public</span> <span>R</span> <span>geRoleManagerlist</span><span>(</span><span>RoleQuery</span> roleQuery<span>)</span> <span>{</span>
        <span>PageInfo</span><span><span>&lt;</span><span>Role</span><span>></span></span> dataList <span>=</span> iSystemService<span>.</span><span>getRoleList</span><span>(</span>roleQuery<span>)</span><span>;</span>
        <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>PagedModel</span><span>.</span><span>create</span><span>(</span>dataList<span>)</span><span>)</span><span>;</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>分页查询返回的对象是 PagedModel，服务层返回 PageInfo 后，通过 PageInfo 构建 PagedModel 即可。</p>
<blockquote>
<p><strong>注意</strong> ：<br>
使用 MyBatis 时，服务层返回的结果一般时 PageInfo，当不使用 MyBatis时，服务层返回结果可以直接用 PagedModel</p>
</blockquote>
<h2 id="分页请求类"> 分页请求类</h2>
<p>分页请求请继承 PageQuery ，此类包含了 currentPage 当前页码，pageSize 每页数量， sortStr 排序字符串 等信息</p>
<div><pre><code>public class RoleQuery extends PageQuery {	
	private String name;
        // getter setter
}
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="服务层"> 服务层</h2>
<p>PageHelper.startPage 和 new PageInfo 请放在 Service 层。</p>
<div><pre><code>  public PageInfo&lt;Role&gt; getRoleList(RoleQuery query) {
        PageHelper.startPage(query.getCurrentPage(), query.getPageSize());
        List&lt;Role&gt; roleList = roleRepository.getList(role);
        return new PageInfo(roleList);
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h1 id="新增更新"> 新增更新</h1>
<ul>
<li>
<p>更新逻辑根据情况写多个接口，需要更新什么字段就更新什么字段。（一个接口存在的问题：每次都要查询库，拿到所有字段更新。而不从库中拿所有字段的话，前台只更新某些字段，没说更新的字段由于没赋值，可能被更新成空值）</p>
</li>
<li>
<p>DO 需要继承 BaseDO ，新增逻辑中由 Request 转化为 DO 时（转化方法写在 Request 中即可）则无需再为创建字段和创建时间赋值（BaseDO 中赋值了）</p>
</li>
<li>
<p>更新逻辑，修改时间逻辑的改成可以放在 xml 中的 sql 语句中。</p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>数据删除</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/removeData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/removeData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据删除</source>
      <category>CURD</category>
      <pubDate>Thu, 20 Jan 2022 09:28:55 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据删除"> 数据删除</h2>
<p>数据删除，即通常所说的“增删改查”中的“删”。</p>
<div><p>注意</p>
<p>需要注意的是，我们一般只是 <strong>逻辑删除</strong>，而不是 <strong>物理删除</strong>。<br>
逻辑删除：我们在记录上添加一个状态字段来记录是否删除了，而不是从数据库中真的删除。
逻辑删除的话可以避免数据误删除的风险。</p>
</div>
<p>在常见的业务场景中，一般有单条删除和批量删除两种情况。<br>
为了简单，我们只写一个批量删除的接口即可，因为单条删除也可以使用批量删除的接口。</p>
<h3 id="控制器层"> 控制器层</h3>
<p>前台传递一个由逗号分隔的 <code>id</code> 字符串即可。</p>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"remove"</span><span>)</span>
<span>public</span> <span>R</span> <span>save</span><span>(</span><span>@NotBlank</span><span>(</span>message <span>=</span> <span>"ids不能为空"</span><span>)</span> <span>String</span> ids<span>)</span> <span>{</span>
    <span>String</span><span>[</span><span>]</span> split <span>=</span> ids<span>.</span><span>split</span><span>(</span><span>","</span><span>)</span><span>;</span>
    <span>int</span><span>[</span><span>]</span> intIds <span>=</span> <span>Arrays</span><span>.</span><span>stream</span><span>(</span>split<span>)</span><span>.</span><span>mapToInt</span><span>(</span><span>Integer</span><span>::</span><span>parseInt</span><span>)</span><span>.</span><span>toArray</span><span>(</span><span>)</span><span>;</span>
    <span>long</span> affect <span>=</span> resourceService<span>.</span><span>remove</span><span>(</span>intIds<span>)</span><span>;</span>

    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>affect<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="服务层"> 服务层</h3>
<p>服务层 <code>resourceService</code> 内容如下：</p>
<div><pre><code><span>public</span> <span>long</span> <span>remove</span><span>(</span><span>int</span><span>[</span><span>]</span> ids<span>)</span> <span>{</span>
    <span>return</span> resourceRepository<span>.</span><span>remove</span><span>(</span>ids<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>服务层在这里没做什么处理，也太大意义，直接调用的数据库访问层。</p>
<h3 id="数据库访问层"> 数据库访问层</h3>
<p>数据库访问层的代码如下：</p>
<div><pre><code><span>public</span> <span>long</span> <span>remove</span><span>(</span><span>int</span><span>[</span><span>]</span> ids<span>)</span> <span>{</span>
    <span>List</span><span>&lt;</span><span>Object</span><span>[</span><span>]</span><span>></span> batchArgs <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> id <span>:</span> ids<span>)</span> <span>{</span>
        batchArgs<span>.</span><span>add</span><span>(</span><span>new</span> <span>Object</span><span>[</span><span>]</span><span>{</span><span>RecordStatus</span><span>.</span>DELETED<span>.</span><span>getVal</span><span>(</span><span>)</span><span>,</span> id<span>}</span><span>)</span><span>;</span>
    <span>}</span>
    <span>String</span> sql <span>=</span> <span>"update resource set status = ? where id = ?"</span><span>;</span>

    <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> result <span>=</span> myJdbc<span>.</span><span>batch</span><span>(</span>sql<span>,</span> batchArgs<span>,</span> <span>1000</span><span>)</span><span>;</span>
    <span>return</span> <span>MyJdbc</span><span>.</span><span>count</span><span>(</span>result<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>数据库访问层使用批量执行语句的方法，而不是使用 <code>in(1,2,3,4)</code> 这种形式，担心数据库太大，<code>in</code>会有效率问题。</p>
<h2 id="示例代码"> 示例代码</h2>
<p><a href="https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>数据保存</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/saveData/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/saveData/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">数据保存</source>
      <category>CURD</category>
      <pubDate>Thu, 20 Jan 2022 09:16:02 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="数据保存"> 数据保存</h2>
<p>数据保存，即通常所说的“增删改查”中的“改”。</p>
<div><p>小技巧</p>
<p>新增和保存一般需要传递的参数相同，保存逻辑需要多传递一个 <strong>记录id</strong> 。<br>
这种情况下，保存逻辑的请求参数对象就可以 <strong>继承自</strong> 新增逻辑的参数对象。</p>
</div>
<h3 id="控制器层"> 控制器层</h3>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"save"</span><span>)</span>
<span>public</span> <span>R</span> <span>save</span><span>(</span><span>@Valid</span> <span>ResourceSaveRequest</span> request<span>)</span> <span>{</span>
    resourceService<span>.</span><span>save</span><span>(</span>request<span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>接口接收前台传入的参数对象 <code>ResourceSaveRequest</code>，通过 <code>javax.validation</code>来进行校验。<br>
这里，<code>ResourceSaveRequest</code> 直接继承了 <code>ResourceAddRequest</code>。</p>
<p><code>ResourceSaveRequest</code> 内容如下：</p>
<div><pre><code><span>@Data</span>
<span>public</span> <span>class</span> <span>ResourceSaveRequest</span> <span>extends</span> <span>ResourceAddRequest</span> <span>{</span>

    <span>@NotNull</span><span>(</span>message <span>=</span> <span>"id不能为空"</span><span>)</span>
    <span>private</span> <span>Integer</span> id<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h3 id="服务层"> 服务层</h3>
<p>服务层 <code>resourceService</code> 内容如下：</p>
<div><pre><code><span>public</span> <span>void</span> <span>save</span><span>(</span><span>ResourceSaveRequest</span> request<span>)</span> <span>{</span>
    <span>Resource</span> model <span>=</span> <span>MyBeanUtil</span><span>.</span><span>trans</span><span>(</span>request<span>,</span> <span>Resource</span><span>.</span><span>class</span><span>)</span><span>;</span>

    model<span>.</span><span>setModifyTime</span><span>(</span><span>new</span> <span>Date</span><span>(</span><span>)</span><span>)</span><span>;</span>
    model<span>.</span><span>setModifyUser</span><span>(</span><span>"updateUser"</span><span>)</span><span>;</span>

    resourceRepository<span>.</span><span>save</span><span>(</span>model<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>这里将 <code>ResourceSaveRequest</code> 传递到了服务层，是因为更新可能会有多个方法，如果服务层只有一个
<code>save(Resource)</code>, 那么当有多个更新方法时，会有问题，除非 <code>save(Resource)</code> 每次从数据库获取最新，然后再更新。</p>
<h3 id="数据库访问层"> 数据库访问层</h3>
<p>数据库访问层的代码如下：</p>
<div><pre><code><span>public</span> <span>void</span> <span>save</span><span>(</span><span>Resource</span> model<span>)</span> <span>{</span>
    <span>String</span> sql <span>=</span> <span>"update resource set name = ?,category=?,requestUrl=?,apis=?,modifyTime=?,modifyUser=? where id =?"</span><span>;</span>
    <span>Object</span><span>[</span><span>]</span> args <span>=</span> <span>{</span>model<span>.</span><span>getName</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getCategory</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getRequestUrl</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getApis</span><span>(</span><span>)</span><span>,</span>model<span>.</span><span>getModifyTime</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getModifyUser</span><span>(</span><span>)</span><span>,</span> model<span>.</span><span>getId</span><span>(</span><span>)</span><span>}</span><span>;</span>
    myJdbc<span>.</span><span>update</span><span>(</span>sql<span>,</span> args<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="示例代码"> 示例代码</h2>
<p><a href="https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/sqber-demo/blob/master/spring-db-demo/src/main/java/com/sqber/dbdemo/controller/ResourceController.java</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>统一异常处理</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/unifiedException/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/unifiedException/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">统一异常处理</source>
      <category>框架</category>
      <pubDate>Fri, 07 Jan 2022 08:46:27 GMT</pubDate>
      <content:encoded><![CDATA[<p>不要到处 try catch 进行异常捕捉，这是在掩饰错误，提前将 bug 显漏，提前解决才是正道。</p>
<p>另外，减少 try catch 可以使代表更加整洁，开发人员只需关注业务即可。</p>
<p>一个业务代表的示例：</p>
<div><pre><code><span>// 使用 @RestController 后，则 @ResponseBody 则不用写</span>
<span>// 使用 @GetMapping 和 @PostMaping 写起来更简单</span>
<span>@GetMapping</span><span>(</span><span>"/account/captcha"</span><span>)</span>
<span>public</span> <span>R</span> <span>getCaptcha</span><span>(</span><span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>
    <span>ImageCaptchaDTO</span> imageCap <span>=</span> codeService<span>.</span><span>getImageCaptcha</span><span>(</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>imageCap<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>如果在编码中，需要释放资源时，使用 try 即可。（try finally 可以，不推荐）</p>
<p>try 形式</p>
<div><pre><code><span>try</span> <span>(</span><span>OutputStream</span> os <span>=</span> response<span>.</span><span>getOutputStream</span><span>(</span><span>)</span><span>)</span> <span>{</span>
     <span>//xxxxxxx</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>（<strong>不推荐</strong>）try finally 形式</p>
<div><pre><code><span>OutputStream</span> os
<span>try</span> <span>{</span>
    os <span>=</span> response<span>.</span><span>getOutputStream</span><span>(</span><span>)</span><span>;</span>   
<span>}</span> <span>finally</span> <span>{</span>
    <span>if</span> <span>(</span>os <span>!=</span> <span>null</span><span>)</span> <span>{</span>
        os<span>.</span><span>close</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="实现"> 实现</h2>
<p>添加如下类即可。需要保证此类会被 Spring Boot 扫描到。</p>
<p>实现是基于 ExceptionHandler 实现的，而不是基于 AOP 实现的。因为基于 AOP 实现，后台对参数的验证使用 javax.validation 进行实现时，验证失败的消息则走不到 AOP。</p>
<div><pre><code>import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

/**
 * 统一异常处理
 */
@RestControllerAdvice
public class ExceptionOpr {

    private static final Logger LOGGER = LoggerFactory.getLogger(ExceptionOpr.class);

    @ExceptionHandler(Exception.class)
    public R globleExceptionHandler(Exception e) {

        LOGGER.error(&quot;error:&quot;, e);
        return R.error(e.getMessage());
    }
}

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><h2 id="参照"> 参照</h2>
<p><a href="https://xwjie.github.io/rule/exception.html#%E9%94%99%E8%AF%AF%E8%8C%83%E4%BE%8B" target="_blank" rel="noopener noreferrer">https://xwjie.github.io/rule/exception.html#%E9%94%99%E8%AF%AF%E8%8C%83%E4%BE%8B</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>统一返回对象</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/unifiedReturnObject/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/unifiedReturnObject/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">统一返回对象</source>
      <category>框架</category>
      <pubDate>Fri, 07 Jan 2022 08:22:27 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="统一返回对象"> 统一返回对象</h2>
<div><p>说明</p>
<p>严格的说，这不算软件功能的分类，这算项目的框架基础。</p>
</div>
<p>这里讨论的【返回对象】指的是后台接口返回给前台的数据对象。<br>
此数据对象包含 <code>返回码，返回消息，接口数据</code> 三部分。</p>
<p>返回码：代表接口是否正常返回，比如 1 为正常，0 为服务器异常，3 为传入参数数据验证失败。
返回消息：当接口参数数据验证失败时或其它问题时，返回的消息提示。
接口数据：接口返回的业务数据。</p>
<div><p>注意</p>
<p>当返回数据需要添加其它信息时，要在【接口数据】中添加这些信息，而不是扩展【统一返回对象】。</p>
<p>后台验证失败的返回码 <strong>不要</strong> 搞那么多，不建议这种做法： 401 代表<code>名称长度过长</code>， 402 代表<code>手机号格式不正确</code>。 前台再根据返回码的不同提示不同的消息。此做法不建议。</p>
<p>验证失败就定义为 400（或其它数字），前台直接展示后台返回的【返回消息】即可。</p>
</div>
<p>此类名称为 R.java</p>
<p>R 的推荐用法：</p>
<ul>
<li>
<p>成功 - 没具体数据：R.success() </p>
</li>
<li>
<p>成功 - 有具体数据：R.success(data) </p>
</li>
<li>
<p>成功 - 有具体数据和消息：R.success(data,msg)</p>
</li>
<li>
<p>出错 - 默认消息：服务器错误：R.error()</p>
</li>
<li>
<p>出错 - 自定义消息：R.error(msg)</p>
</li>
<li>
<p>校验型错误 - 比如参数校验：R.warn(msg)</p>
</li>
</ul>
<p>R 的代码如下：</p>
<div><pre><code><span>/**
* 统一结果类
*
*/</span>
<span>public</span> <span>class</span> <span>R</span> <span>{</span>

   <span>private</span> <span>static</span> <span>final</span> <span>int</span> SUCCESS <span>=</span> <span>1</span><span>;</span>
   <span>private</span> <span>static</span> <span>final</span> <span>int</span> ERROR <span>=</span> <span>0</span><span>;</span>
   <span>private</span> <span>static</span> <span>final</span> <span>int</span> <span>ValidateFailure</span> <span>=</span> <span>2</span><span>;</span>

   <span>private</span> <span>int</span> code<span>;</span>
   <span>private</span> <span>Object</span> data<span>;</span>
   <span>private</span> <span>String</span> msg<span>;</span>

   <span>private</span> <span>R</span><span>(</span><span>int</span> code<span>,</span> <span>String</span> msg<span>,</span> <span>Object</span> data<span>)</span> <span>{</span>
       <span>this</span><span>.</span>code <span>=</span> code<span>;</span>
       <span>this</span><span>.</span>msg <span>=</span> msg<span>;</span>
       <span>this</span><span>.</span>data <span>=</span> data<span>;</span>
   <span>}</span>

   <span>/**
    * 参数验证失败
    *
    * @param msg
    * @return
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>warn</span><span>(</span><span>String</span> msg<span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span><span>ValidateFailure</span><span>,</span> msg<span>,</span> <span>""</span><span>)</span><span>;</span>
   <span>}</span>

   <span>/**
    * 出错
    *
    * @param msg
    * @return
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>error</span><span>(</span><span>String</span> msg<span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span>ERROR<span>,</span> msg<span>,</span> <span>""</span><span>)</span><span>;</span>
   <span>}</span>

   <span>/**
    * 出错
    *
    * @return
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>error</span><span>(</span><span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span>ERROR<span>,</span> <span>"服务繁忙,请稍后重试"</span><span>,</span> <span>""</span><span>)</span><span>;</span>
   <span>}</span>


   <span>/**
    * 成功
    *
    * @return
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>success</span><span>(</span><span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span>SUCCESS<span>,</span> <span>""</span><span>,</span> <span>""</span><span>)</span><span>;</span>
   <span>}</span>

   <span>/**
    * 成功
    *
    * @param data
    * @return
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>success</span><span>(</span><span>Object</span> data<span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span>SUCCESS<span>,</span> <span>""</span><span>,</span> data<span>)</span><span>;</span>
   <span>}</span>

   <span>/**
    * 成功
    *
    * @param data
    * @param msg
    * @return R
    */</span>
   <span>public</span> <span>static</span> <span>R</span> <span>success</span><span>(</span><span>Object</span> data<span>,</span> <span>String</span> msg<span>)</span> <span>{</span>
       <span>return</span> <span>new</span> <span>R</span><span>(</span>SUCCESS<span>,</span> msg<span>,</span> data<span>)</span><span>;</span>
   <span>}</span>

   <span>public</span> <span>int</span> <span>getCode</span><span>(</span><span>)</span> <span>{</span>
       <span>return</span> code<span>;</span>
   <span>}</span>

   <span>public</span> <span>Object</span> <span>getData</span><span>(</span><span>)</span> <span>{</span>
       <span>return</span> data<span>;</span>
   <span>}</span>

   <span>public</span> <span>String</span> <span>getMsg</span><span>(</span><span>)</span> <span>{</span>
       <span>return</span> msg<span>;</span>
   <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>文件上传</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/uploadFile/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/uploadFile/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">文件上传</source>
      <category>文件上传</category>
      <pubDate>Fri, 07 Jan 2022 07:38:33 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="文件上传"> 文件上传</h2>
<p>文件上传功能是信息系统中常用的一个功能，用户通过选择本地文件将文件上传到信息系统中。</p>
<p>文件上传因文件的大小又分 <strong>普通上传</strong> 和 <strong>分块上传</strong>。</p>
<p>普通上传一般用在文件几M大小的情况。
分块上传一般用于文件几G大小的情况。</p>
<h2 id="常见的场景"> 常见的场景</h2>
<ol>
<li>上传图片，比如用户上传用户头像</li>
<li>上传资料，比如用户上传某个业务相关的参考资料。</li>
<li>上传压缩包，比如用户上传压缩包文件，上传之后系统再解压之后分析。</li>
<li>上传 EXCEL 文件，比如通过上传包含用户信息的 EXCEL 文件来批量添加用户。</li>
</ol>
<h2 id="注意事项"> 注意事项</h2>
<ul>
<li>文件保存在服务器时，为了防止和已有文件重复，通过还会为文件重新命名。</li>
<li>文件保存时，先要验证保存目录是否存在，不存在则需要创建。</li>
</ul>
<h2 id="普通上传"> 普通上传</h2>
<blockquote>
<p>示例基于 Java 语言，使用 Spring Boot 框架实现。</p>
</blockquote>
<h3 id="未封装版本-不推荐"> 未封装版本(不推荐)</h3>
<p>这是我们常见的一种写法，代码包含了【文件类型的验证】【文件名处理】【文件保存】，最后输出【文件路径】。用到的地方，会到处再复制一份，代码冗余，不简洁。</p>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"/fileImport"</span><span>)</span>
<span>public</span> <span>R</span> <span>fileImport</span><span>(</span><span>HttpServletRequest</span> request<span>)</span> <span>throws</span> <span>Exception</span> <span>{</span>
    <span>MultipartHttpServletRequest</span> multipartHttpServletRequest <span>=</span> <span>(</span><span>MultipartHttpServletRequest</span><span>)</span> request<span>;</span>
    <span>MultipartFile</span> file <span>=</span> multipartHttpServletRequest<span>.</span><span>getFile</span><span>(</span><span>"file"</span><span>)</span><span>;</span>
    <span>byte</span><span>[</span><span>]</span> content <span>=</span> file<span>.</span><span>getBytes</span><span>(</span><span>)</span><span>;</span>

    <span>String</span> fileName <span>=</span> file<span>.</span><span>getOriginalFilename</span><span>(</span><span>)</span><span>;</span>
    <span>String</span> extName <span>=</span> fileName<span>.</span><span>substring</span><span>(</span>fileName<span>.</span><span>lastIndexOf</span><span>(</span><span>"."</span><span>)</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span><span>!</span>extName<span>.</span><span>equals</span><span>(</span><span>".xls"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span>extName<span>.</span><span>equals</span><span>(</span><span>".xlsx"</span><span>)</span><span>)</span> <span>{</span>
        <span>return</span> <span>R</span><span>.</span><span>warn</span><span>(</span><span>"请上传 xls 或 xlsx 类型的文件"</span><span>)</span><span>;</span>
    <span>}</span>
    <span>String</span> filePath <span>=</span> iSystemService<span>.</span><span>getFilePath</span><span>(</span>file<span>)</span><span>;</span>
    <span>FileOutputStream</span> outputStream <span>=</span> <span>new</span> <span>FileOutputStream</span><span>(</span>filePath<span>)</span><span>;</span>
    outputStream<span>.</span><span>write</span><span>(</span>content<span>)</span><span>;</span>
    outputStream<span>.</span><span>close</span><span>(</span><span>)</span><span>;</span>
    log<span>.</span><span>info</span><span>(</span><span>"处理文件"</span><span>)</span><span>;</span>

    <span>// 根据 filePath 做后续处理</span>
<span>}</span>

 <span>public</span> <span>String</span> <span>getFilePath</span><span>(</span><span>MultipartFile</span> file<span>)</span> <span>{</span>
        <span>String</span> guid <span>=</span> UUID<span>.</span><span>randomUUID</span><span>(</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>replaceAll</span><span>(</span><span>"-"</span><span>,</span> <span>""</span><span>)</span><span>;</span>
        <span>String</span> fileName <span>=</span> file<span>.</span><span>getOriginalFilename</span><span>(</span><span>)</span><span>;</span>
        <span>String</span> extName <span>=</span> fileName<span>.</span><span>substring</span><span>(</span>fileName<span>.</span><span>lastIndexOf</span><span>(</span><span>"."</span><span>)</span><span>)</span><span>;</span>
        <span>String</span> fileNameWithoutExt <span>=</span> fileName<span>.</span><span>replaceAll</span><span>(</span>extName<span>,</span> <span>""</span><span>)</span><span>;</span>
        <span>String</span> fileNewName <span>=</span> fileNameWithoutExt <span>+</span> <span>"-"</span> <span>+</span> guid <span>+</span> extName<span>;</span>
        <span>String</span> filePath <span>=</span> fileUploadConfig<span>.</span><span>getSavePath</span><span>(</span><span>)</span> <span>+</span> fileNewName<span>;</span>
        log<span>.</span><span>debug</span><span>(</span><span>"filePath"</span> <span>+</span> filePath<span>)</span><span>;</span>
        <span>return</span> filePath<span>;</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br></div></div><div><p>说明</p>
<p>关于代码中的 <code>R</code> 请参照 <a href="/tech/myfunction/unifiedReturnObject">统一返回对象</a></p>
</div>
<h3 id="封装版本-推荐"> 封装版本(推荐)</h3>
<p>将上叙的代码公共的部分抽离封装到 <code>UploadFile</code> 类中。</p>
<p>示例项目：<a href="https://github.com/shenqiangbin/some-demo/tree/main/spring-boot-demo" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/some-demo/tree/main/spring-boot-demo</a><br>
相关代码：<a href="https://github.com/shenqiangbin/some-demo/commit/bf5e9c6092893879e4bfe5b3543569c70168005c" target="_blank" rel="noopener noreferrer">https://github.com/shenqiangbin/some-demo/commit/bf5e9c6092893879e4bfe5b3543569c70168005c</a></p>
<div><p>说明</p>
<p>项目基于的 <a href="/tech/myfunction/unifiedReturnObject">统一返回对象</a> 和 <a href="/">统一异常捕捉</a> 也在此次提交中。</p>
</div>
<p>封装之后，上面的上传代码则可以简化为：</p>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"/test/file"</span><span>)</span>
<span>public</span> <span>R</span> <span>batAddUser</span><span>(</span><span>@NotEmpty</span><span>(</span>message <span>=</span> <span>"文件不能为空"</span><span>)</span> <span>@RequestParam</span><span>(</span><span>"file"</span><span>)</span> <span>MultipartFile</span><span>[</span><span>]</span> files<span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>

    <span>List</span><span><span>&lt;</span><span>String</span><span>></span></span> fileList <span>=</span> <span>UploadFile</span><span>.</span><span>createExcelUploadForExcel</span><span>(</span>fileUploadConfig<span>.</span><span>getSavePath</span><span>(</span><span>)</span><span>,</span> files<span>)</span><span>.</span><span>save</span><span>(</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>fileList<span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>接口通过参数 <code>@RequestParam(&quot;file&quot;)</code> 来获取文件对象 <code>MultipartFile</code>，前台传递的参数是 file，因为一个参数可以有好几个文件，因此这里是数组。当然，<code>MultipartFile</code> 可以通过 <code>Request</code> 来获取。</p>
<p><code>UploadFile.createExcelUploadForExcel(filePath,files)</code> 是一个静态函数，通过文件保存路径和 <code>MultipartFile</code> 实例化一个 <code>UploadFile</code> 对象。此对象是针对 EXCEL 上传的，包含了扩展名的验证和大小 20M 的限制验证。</p>
<p>使用 <code>Postman</code> 进行测试。</p>
<p><strong>测试一：文件超过指定大小时，提示错误信息。</strong></p>
<p><img src='/assets/tech/uploadfile.png' style='width:600px;border:1px solid #3eb07c'></img></p>
<p><strong>测试二：文件上传成功，返回路径信息。</strong></p>
<p><img src='/assets/tech/uploadfile2.png' style='width:600px;border:1px solid #3eb07c'></img></p>
<p><strong>UploadFile 的自定义构造</strong></p>
<p>当默认的 UploadFile 无法满足时，可以通过 UploadFile 构建函数自定义验证。如下：</p>
<div><pre><code><span>@PostMapping</span><span>(</span><span>"/test/file2"</span><span>)</span>
<span>public</span> <span>R</span> <span>batAddUser</span><span>(</span><span>@NotBlank</span><span>(</span>message <span>=</span> <span>"name不能为空"</span><span>)</span> <span>String</span> name<span>,</span> <span>@RequestParam</span><span>(</span><span>"file"</span><span>)</span> <span>MultipartFile</span><span>[</span><span>]</span> files<span>)</span> <span>throws</span> <span>IOException</span> <span>{</span>

    <span>List</span><span><span>&lt;</span><span>String</span><span>></span></span> fileList <span>=</span> <span>createFileUpload</span><span>(</span>files<span>)</span><span>.</span><span>save</span><span>(</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span>fileList<span>)</span><span>;</span>
<span>}</span>

<span>private</span> <span>UploadFile</span> <span>createFileUpload</span><span>(</span><span>MultipartFile</span><span>[</span><span>]</span> files<span>)</span> <span>{</span>
    <span>return</span> <span>new</span> <span>UploadFile</span><span>(</span>fileUploadConfig<span>.</span><span>getSavePath</span><span>(</span><span>)</span><span>,</span> files<span>,</span> <span>(</span>fileName<span>,</span> ext<span>,</span> fileSize<span>)</span> <span>-></span> <span>{</span>
        <span>if</span> <span>(</span><span>!</span>ext<span>.</span><span>equals</span><span>(</span><span>"xls"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span>ext<span>.</span><span>equals</span><span>(</span><span>"xlsx"</span><span>)</span><span>)</span> <span>{</span>
            <span>throw</span> <span>new</span> <span>ValidationException</span><span>(</span><span>String</span><span>.</span><span>format</span><span>(</span><span>"%s 类型不对。请上传 xls 或 xlsx 类型的文件"</span><span>,</span> fileName<span>)</span><span>)</span><span>;</span>
        <span>}</span>
        <span>long</span> fileSizeM <span>=</span> <span>(</span>fileSize <span>/</span> <span>1024</span> <span>/</span> <span>1024</span><span>)</span><span>;</span>
        <span>long</span> sizeLimit <span>=</span> <span>1</span><span>;</span>
        <span>if</span> <span>(</span>fileSizeM <span>></span> sizeLimit<span>)</span> <span>{</span>
            <span>throw</span> <span>new</span> <span>ValidationException</span><span>(</span><span>String</span><span>.</span><span>format</span><span>(</span><span>"%s(%sM) 文件不能大于%sM"</span><span>,</span> fileName<span>,</span> fileSizeM<span>,</span> sizeLimit<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h2 id="分块上传"> 分块上传</h2>
]]></content:encoded>
    </item>
    <item>
      <title>参数校验</title>
      <link>https://shenqiangbin.github.io/tech/myfunction/validation/</link>
      <guid>https://shenqiangbin.github.io/tech/myfunction/validation/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">参数校验</source>
      <category>框架</category>
      <pubDate>Fri, 07 Jan 2022 09:15:19 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="参数校验"> 参数校验</h2>
<p>基于 Spring Boot。</p>
<p>参数校验采用的是 javax.validation.constraints 中的注解。</p>
<p>在 pom.xml 中添加依赖。</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>javax.validation<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>validation-api<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="使用形式"> 使用形式</h2>
<p>1、形式1（参数较多时不建议这么写）</p>
<p>此形式需要在控制器上加上注解 <code>@Validated</code></p>
<div><pre><code><span>@GetMapping</span><span>(</span><span>"/test/t1"</span><span>)</span>
<span>public</span> <span>R</span> <span>test2</span><span>(</span><span>@NotBlank</span><span>(</span>message <span>=</span> <span>"id不能为空"</span><span>)</span> <span>@Size</span><span>(</span>message <span>=</span> <span>"最大长度不能超过50"</span><span>,</span> min <span>=</span> <span>1</span><span>,</span> max <span>=</span> <span>50</span><span>)</span> <span>String</span> id<span>,</span>
               <span>@NotBlank</span><span>(</span>message <span>=</span> <span>"msg不能为空"</span><span>)</span> <span>@Size</span><span>(</span>message <span>=</span> <span>"最大长度不能超过50"</span><span>,</span> min <span>=</span> <span>1</span><span>,</span> max <span>=</span> <span>50</span><span>)</span> <span>String</span> msg<span>)</span> <span>{</span>
    <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"ok"</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>2、形式2 参数封装到类中</p>
<p>在参数前面加上 @Validated（控制器上加注解无效）</p>
<div><pre><code><span>@GetMapping</span><span>(</span><span>"/test/t2"</span><span>)</span>
<span>public</span> <span>R</span> <span>test2</span><span>(</span><span>@Validated</span> <span>TestQuery</span> query<span>)</span> <span>{</span>
    <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"ok"</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>@Data</span>
<span>public</span> <span>class</span> <span>TestQuery</span> <span>{</span>

    <span>@NotBlank</span><span>(</span>message <span>=</span> <span>"名字不能为空"</span><span>)</span>
    <span>@Size</span><span>(</span>message <span>=</span> <span>"最大长度不能超过50"</span><span>,</span> min <span>=</span> <span>1</span><span>,</span> max <span>=</span> <span>50</span><span>)</span>
    <span>private</span> <span>String</span> name<span>;</span>

    <span>private</span> <span>String</span> age<span>;</span>

    <span>@NotBlank</span><span>(</span>message <span>=</span> <span>"邮箱不能为空"</span><span>)</span>
    <span>@Email</span><span>(</span>message <span>=</span> <span>"请输入正确的邮箱"</span><span>)</span>
    <span>private</span> <span>String</span> email<span>;</span>

    <span>@Pattern</span><span>(</span>message <span>=</span> <span>"手机号格式不正确"</span><span>,</span> regexp <span>=</span> <span>ConstStr</span><span>.</span>PHONE_REG<span>)</span>
    <span>private</span> <span>String</span> phone<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="需要查询数据库的校验"> 需要查询数据库的校验</h2>
<p>有些时候需要校验参数在数据库的情况。此时，可以单独写一个 validate 方法对参数进行校验。
当不通过时，直接抛出 javax.validation.ValidationException 即可。</p>
<div><pre><code><span>@GetMapping</span><span>(</span><span>"/test/t3"</span><span>)</span>
<span>public</span> <span>R</span> <span>tes3</span><span>(</span><span>@Validated</span> <span>TestQuery</span> query<span>)</span> <span>{</span>
    <span>validate</span><span>(</span>query<span>)</span><span>;</span>
    <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"ok"</span><span>)</span><span>;</span>
    <span>return</span> <span>R</span><span>.</span><span>success</span><span>(</span><span>)</span><span>;</span>
<span>}</span>

<span>private</span> <span>void</span> <span>validate</span><span>(</span><span>TestQuery</span> query<span>)</span><span>{</span>
    <span>boolean</span> exists <span>=</span> db<span>.</span><span>search</span><span>(</span>query<span>.</span>name<span>)</span><span>;</span>
    <span>if</span><span>(</span>exists<span>)</span> <span>{</span>
        <span>throw</span> <span>new</span> <span>ValidationException</span><span>(</span><span>"名称已经存在"</span><span>)</span><span>;</span>
    <span>}</span>

    exists <span>=</span> db<span>.</span><span>search</span><span>(</span>query<span>.</span>code<span>)</span><span>;</span>
    <span>if</span><span>(</span>exists<span>)</span> <span>{</span>
        <span>throw</span> <span>new</span> <span>ValidationException</span><span>(</span><span>"编码已经存在"</span><span>)</span><span>;</span>
    <span>}</span>

    exists <span>=</span> db<span>.</span><span>search</span><span>(</span>query<span>.</span>phone<span>)</span><span>;</span>
    <span>if</span><span>(</span>exists<span>)</span> <span>{</span>
        <span>throw</span> <span>new</span> <span>ValidationException</span><span>(</span><span>"手机号已经存在"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>CentOS 安装 FTP</title>
      <link>https://shenqiangbin.github.io/tech/other/centos-ftp/</link>
      <guid>https://shenqiangbin.github.io/tech/other/centos-ftp/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">CentOS 安装 FTP</source>
      <category>部署</category>
      <pubDate>Sun, 19 Dec 2021 14:56:37 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="查看是否已安装"> 查看是否已安装</h2>
<p><code>rpm -qa |grep vsftpd</code></p>
<h2 id="安装"> 安装</h2>
<p>安装可以在线安装或离线安装。</p>
<h3 id="在线安装"> 在线安装</h3>
<p>通过 yum 命令即可下载 rpm 包并自动安装。</p>
<p><code>yum install vsftpd -y</code></p>
<h3 id="离线安装"> 离线安装</h3>
<p>离线安装首先需要下载 ftp 安装包。下载地址为：<a href="http://rpmfind.net/linux/rpm2html/search.php?query=vsftpd(x86-64)" target="_blank" rel="noopener noreferrer">http://rpmfind.net/linux/rpm2html/search.php?query=vsftpd(x86-64)</a></p>
<p>我的系统是 CentOS 7，对应下载的安装包为 vsftpd-3.0.2-29.el7_9.x86_64.rpm<br>
上传文件到服务器后，执行安装命令：
<code>rpm -ivh vsftpd-3.0.2-21.el7.x86_64.rpm</code></p>
<hr>
<p>通过【在线安装】或者【离线安装】之后，可以通过 <code>rpm -ql vsftpd</code> 命令查看相关内容。</p>
<div><pre><code><span>[</span>root@localhost ~<span>]</span><span># rpm -ql vsftpd</span>
/etc/logrotate.d/vsftpd
/etc/pam.d/vsftpd
/etc/vsftpd
/etc/vsftpd/ftpusers
/etc/vsftpd/user_list
/etc/vsftpd/vsftpd.conf
/etc/vsftpd/vsftpd_conf_migrate.sh
/usr/lib/systemd/system-generators/vsftpd-generator
/usr/lib/systemd/system/vsftpd.service
/usr/lib/systemd/system/vsftpd.target
/usr/lib/systemd/system/vsftpd@.service
/usr/sbin/vsftpd
/usr/share/doc/vsftpd-3.0.2
/usr/share/doc/vsftpd-3.0.2/AUDIT
/usr/share/doc/vsftpd-3.0.2/BENCHMARKS
/usr/share/doc/vsftpd-3.0.2/BUGS
/usr/share/doc/vsftpd-3.0.2/COPYING
/usr/share/doc/vsftpd-3.0.2/Changelog
/usr/share/doc/vsftpd-3.0.2/EXAMPLE
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE/README.configuration
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE/vsftpd.conf
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE/vsftpd.xinetd
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE_NOINETD
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE_NOINETD/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE_NOINETD/README.configuration
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/INTERNET_SITE_NOINETD/vsftpd.conf
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/PER_IP_CONFIG
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/PER_IP_CONFIG/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/PER_IP_CONFIG/README.configuration
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/PER_IP_CONFIG/hosts.allow
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_HOSTS
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_HOSTS/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS/README
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS/README.configuration
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS/logins.txt
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS/vsftpd.conf
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS/vsftpd.pam
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS_2
/usr/share/doc/vsftpd-3.0.2/EXAMPLE/VIRTUAL_USERS_2/README
/usr/share/doc/vsftpd-3.0.2/FAQ
/usr/share/doc/vsftpd-3.0.2/INSTALL
/usr/share/doc/vsftpd-3.0.2/LICENSE
/usr/share/doc/vsftpd-3.0.2/README
/usr/share/doc/vsftpd-3.0.2/README.security
/usr/share/doc/vsftpd-3.0.2/REWARD
/usr/share/doc/vsftpd-3.0.2/SECURITY
/usr/share/doc/vsftpd-3.0.2/SECURITY/DESIGN
/usr/share/doc/vsftpd-3.0.2/SECURITY/IMPLEMENTATION
/usr/share/doc/vsftpd-3.0.2/SECURITY/OVERVIEW
/usr/share/doc/vsftpd-3.0.2/SECURITY/TRUST
/usr/share/doc/vsftpd-3.0.2/SIZE
/usr/share/doc/vsftpd-3.0.2/SPEED
/usr/share/doc/vsftpd-3.0.2/TODO
/usr/share/doc/vsftpd-3.0.2/TUNING
/usr/share/doc/vsftpd-3.0.2/vsftpd.xinetd
/usr/share/man/man5/vsftpd.conf.5.gz
/usr/share/man/man8/vsftpd.8.gz
/var/ftp
/var/ftp/pub
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br></div></div><h2 id="开放21端口"> 开放21端口</h2>
<p>查看端口是否开放<br>
<code>firewall-cmd --query-port=6379/tcp</code></p>
<p>开放21端口<br>
<code>firewall-cmd --add-port=21/tcp --permanent</code></p>
<p>重启防火墙<br>
<code>systemctl restart firewalld</code></p>
<h2 id="操作"> 操作</h2>
<p>启动 FTP<br>
<code>systemctl start vsftpd</code></p>
<p>重新启动 FTP<br>
<code>systemctl restart vsftpd</code></p>
<h2 id="访问"> 访问</h2>
<p>在不修改任何配置的情况下，默认是可以匿名访问的。但只能 <strong>下载</strong>，不能 <strong>上传</strong>。</p>
<p>在浏览器输入 ftp://ip:21 即可访问。（端口不写也可以，ftp 默认就是 21 端口）<br>
可以看到一个 pub 目录，这个目录对应的是服务器上的 <code>/var/ftp/pub</code> 目录</p>
<p>或者使用 FileZilla 这种 FTP 软件也可以访问。</p>
<h2 id="相关配置"> 相关配置</h2>
<p>ftp 相关的配置文件在 <code>/etc/vsftpd</code> 目录下</p>
<h2 id="问题"> 问题</h2>
<h3 id="通过-systemctl-start-启动失败"> 通过 systemctl start 启动失败</h3>
<blockquote>
<p>查看端口 21 是否被占用，或者使用 ps -ef | grep ftp 看是否已经启动，已启动则杀掉后，通过 systemctl start vsftpd 启动。</p>
</blockquote>
<h3 id="_500-oops-failed-to-open-xferlog-log-file-var-log-xferlog"> 500 OOPS: failed to open xferlog log file:/var/log/xferlog</h3>
<blockquote>
<p>删除 /var/log/xferlog 文件，重新启动 vsftpd</p>
</blockquote>
<h3 id="操作超时"> 操作超时</h3>
<p>打开 FTP 服务器上的文件夹时发生错误。请检查是否有权限访问该文件夹。<br>
详细信息: 操作超时</p>
<blockquote>
<p>重启下服务器好了</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>待做事项</title>
      <link>https://shenqiangbin.github.io/todo/</link>
      <guid>https://shenqiangbin.github.io/todo/</guid>
      <source url="https://shenqiangbin.github.io/rss.xml">待做事项</source>
      <pubDate>Sun, 12 Dec 2021 04:56:39 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="todo"> TODO</h2>
<p>每次科学上网都要注册一个邮箱账号，然后再使用此邮箱账号注册一个威伯斯云帐号，有了威伯斯云的新账号，就可以免费科学上网了。为了简化流程，写一个程序，自动完成以上操作。</p>
<h2 id="建站相关"> 建站相关</h2>
<ul>
<li>图标替换，还有一些默认 header 中使用的图标</li>
<li>全文检索</li>
</ul>
<blockquote>
<p>全文检索<br>
https://www.algolia.com/ ，（2022-01-03）使用 QQ 邮箱账号已提交申请。</p>
</blockquote>
<ul>
<li>✅ 内容迁移</li>
<li>✅ 导航设定</li>
<li>✅ 评论配置</li>
</ul>
<blockquote>
<p>评论支持邮件消息，参照下面的指导：<br>
https://waline.js.org/reference/server.html#%E9%82%AE%E4%BB%B6<br>
https://vercel.com/shenqiangbin/sqber-api/settings/environment-variables<br>
配置成功了，如果将域名 sqber.com 映射过去的话，需要修改其中的网址环境变量。
有评论并不会收到邮件，只是你回复别人，会给别人发送邮件。</p>
</blockquote>
<ul>
<li>推送到百度，chrome 等站点</li>
</ul>
<h2 id="其它"> 其它</h2>
<ul>
<li>✅ <a href="/life/paper-rmrb.html">人民日报</a> (2021.11.28记)</li>
</ul>
<hr>
<ul>
<li>✅  <a href="/java/idea.html">IDEA 相关</a></li>
<li>✅  <a href="./java/create-project.html#复制模块">快速复制模块</a></li>
<li>✅  <a href="life/livevideo">B站如何直播（Mac）</a></li>
<li>✅  <a href="soft/vscode">VSCode</a></li>
<li>✅  <a href="linux/ubuntu">安装 ubuntu 系统</a></li>
</ul>
<h2 id="代码管理"> 代码管理</h2>
<ul>
<li>✅  <a href="linux/git">Git</a></li>
</ul>
<h2 id="安全"> 安全</h2>
<ul>
<li>✅  <a href="./java/interface.html">接口安全设计</a></li>
</ul>
<h2 id="todo-2"> TODO</h2>
<ul>
<li>VuePress SEO 处理，参考：https://www.sofineday.com/vuepress-seo.html</li>
</ul>
<p>一个项目最基本的功能可能就是能够连接数据库，并能执行一些操作之类的。
操作数据库的类每个人都有自己的一套写法。有使用传统的 JDBC 的，也有使用封装好的类库的。</p>
<p>接口安全设计（相关代码编写）</p>
<ul>
<li>
<p>数据访问 - JDBC （将 JdbcTemplate 的相关数据访问功能抽离出公共接口）(事务支持 https://www.cnblogs.com/harrychinese/p/SpringBoot_jdbc_transaction.html)</p>
</li>
<li>
<p>Spring Boot 单元测试
文件相关</p>
</li>
<li>
<p>普通文件上传</p>
</li>
<li>
<p>压缩包文件上传（支持GB大小、分块上传）在（template项目中有相关代码）</p>
</li>
<li>
<p>数据上传 EXCEL文件格式</p>
</li>
<li>
<p>树结构的数据上传 EXCEL文件格式</p>
</li>
<li>
<p>数据导出</p>
</li>
</ul>
<p>其它</p>
<ul>
<li>
<p>nacos</p>
</li>
<li>
<p>Spring Cloud</p>
</li>
<li>
<p>增删改查 知多少。</p>
</li>
</ul>
<p>修改 hosts
https://nullpointer.pw/github%E4%BB%A3%E7%A0%81clone%E5%8A%A0%E9%80%9F.html</p>
<p>ls -al ???</p>
<p>vuepress 支持搜索
https://vuepress-community.netlify.app/zh/plugins/serve/#host</p>
<p>支持通过 Chrome 保存到桌面，快捷访问
做成一个工具站也是博客站
迁移 站点内容</p>
<p>搜索帐号配置：<br>
S38U9JNOF1<br>
288af19e5025dc763ae67b75fcfb3164</p>
<ul>
<li>技术
<ul>
<li>前端
<ul>
<li>CSS</li>
<li>JavaScript</li>
<li>JQuery</li>
<li>Vue</li>
<li>Element</li>
<li>AntDesign</li>
</ul>
</li>
<li>后端
<ul>
<li>Java
<ul>
<li>Spring Boot</li>
<li>Spring Cloud</li>
</ul>
</li>
<li>.Net</li>
</ul>
</li>
<li>开发工具
<ul>
<li>IDEA</li>
</ul>
</li>
<li>架构</li>
<li>代码重构</li>
<li>算法</li>
<li>功能</li>
</ul>
</li>
<li>工具</li>
<li>收集</li>
<li>项目</li>
<li>日记</li>
<li>管理</li>
<li>书籍</li>
<li>生活</li>
<li>报纸</li>
<li>电影</li>
<li>音乐</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>